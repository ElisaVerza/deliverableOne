date,jira_id,comment
2022-05-10T06:58:36Z,3265,[website] Set 4.15.0 as latest release (#3265)
2022-05-09T18:51:58Z,3155,Release notes for BK 4.15  Descriptions of the changes in this PR:  ### Motivation    release notes for BK release 4.15    ### Changes    Doc updates per release procedure.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Yong Zhang <zhangyong1025.zy@gmail.com>  Hang Chen <chenhang@apache.org>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3155 from dlg99/bk-4.15-release-notes
2022-05-07T12:11:38Z,3262,Fix spelling mistake in bk_server.conf (#3262)  ### Motivation    Fix spelling mistake in bk_server.conf    ### Changes    Master Issue: #3261
2022-05-05T06:29:11Z,3256,BP-47 (task5): Garbage collection support direct IO entrylogger (#3256)  * Garbage Collection support for DirectIO entrylogger    GC support requires that the entrylogger provides a way to retrieve  all entrylogs which have been completely flushed to disk. Previously  this was done by returning the least unflushed log id. However  this  is problematic as it doesn't support the log ids wrapping around. It  also means that GC has to start checking for log id existence from  zero every time it boots.    This change replaces getLeastUnflushedLogId() with getFlushedLogIds()   to give the entrylogger full control of which logs should be  considered for GC.    It also changes the CompactableLedgerStorage interface  removing  getEntryLogger() and adding injection of the entrylogger to the  GarbageCollectionThread. This makes testing easier.    Co-authored-by: Ivan Kelly <ikelly@splunk.com>
2022-05-05T00:26:43Z,3254,[minor] [optimize] Remove redundant toString call (#3254)
2022-05-04T13:20:11Z,3255,Allow run LocalBookkeeper directly in `bookkeeper-server` module or on IDE (#3255)
2022-05-04T06:18:23Z,3253,BP-47 (task4): Aligned native buffer wrapper (#3253)
2022-04-29T16:10:42Z,3251,Fix: shell tests are broken and not running on CI (#3251)
2022-04-29T05:44:14Z,3197,BP-47 (task3): Abstract interface for entrylogger (#3197)  * Interface for entrylogger    Define the interface and contract for entrylogger. This is mostly  taking the entrylogger methods used by other components and prettying  them up a bit.    Notable changes are:  - internalReadEntry is now readEntry. There is no 'validate'    flag. Instead there are two overloads for the method  and validation    only runs if ledgerId and entryId are passed in.  - shutdown has been renamed to close.  - the compaction entrylog methods have been put behind an    interface. As it was they were leaking implementation    details. Ultimitely compaction itself should be hidden behind the    entrylogger  but that's a larger refactor.    (cherry picked from commit c927f4b0128e2b1f0f4b30c41ce442b366d5009c)    * abstract interface for entrylogger    * format code    * format code    * address comments    * Apply suggestions from code review    Co-authored-by: Andrey Yegorov <8622884+dlg99@users.noreply.github.com>    * address comments    * format code    Co-authored-by: Ivan Kelly <ikelly@splunk.com>  Co-authored-by: Andrey Yegorov <8622884+dlg99@users.noreply.github.com>
2022-04-28T23:00:53Z,3246,Move bookkeeper-stats and bookkeeper-stats-providers as submodules of stats  ### Motiviations  Fix todo to make the project layout more reasonable and easier to fix bug/dev new feature  ### Changes  move `bookkeeper-stats` and `bookkeeper-stats-providers` as submodules of `stats`  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  Andrey Yegorov <None>  This closes #3246 from Shoothzj/module-04-25
2022-04-27T07:09:35Z,3242,fix some jdk17 test problem (#3242)
2022-04-26T21:48:53Z,,[maven-release-plugin] prepare for next development iteration
2022-04-26T21:48:51Z,,[maven-release-plugin] prepare branch branch-4.15
2022-04-26T21:47:58Z,,Revert "[maven-release-plugin] prepare branch branch-4.15"  This reverts commit d9b98ad8ccec6a9ba65cfc00ef319ee51454c0c4.
2022-04-26T21:47:48Z,,Revert "[maven-release-plugin] prepare for next development iteration"  This reverts commit e5d5ddac8a10acca031eed0221d925d54713a6ab.
2022-04-26T21:31:55Z,,[maven-release-plugin] prepare for next development iteration
2022-04-26T21:31:52Z,,[maven-release-plugin] prepare branch branch-4.15
2022-04-26T06:17:37Z,3224,Add get under replicated ledger count  ### Motivation  Fix #3224     ### Changes  Add flag for `ListUnderreplicatedCmd` to control only display under replicated ledgers count      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Yong Zhang <zhangyong1025.zy@gmail.com>  Andrey Yegorov <None>  This closes #3228 from hangc0276/chenhang/add_get_under_replicate_ledger_count
2022-04-26T01:14:46Z,3201,Correct the method signature within annotations  Descriptions of the changes in this PR:      ### Motivation    Some interfaces have modified the method signature but the annotations have not.    ### Changes    Correct the method signature within annotations and fix typos  Reviewers: Andrey Yegorov <None>  ZhangJian He <shoothzj@gmail.com>  This closes #3201 from iamazy/fix-typo
2022-04-25T22:35:16Z,3227,Fix bookie shell help command exception  ### Motivation  When run `bin/bookkeeper shell ledgermetadata -h` command  it throw the following exception.  ```  23:02:41 236 ERROR Error parsing command line arguments :  org.apache.commons.cli.UnrecognizedOptionException: Unrecognized option: -h   at org.apache.commons.cli.Parser.processOption(Parser.java:363) ~[commons-cli-commons-cli-1.2.jar:1.2]   at org.apache.commons.cli.Parser.parse(Parser.java:199) ~[commons-cli-commons-cli-1.2.jar:1.2]   at org.apache.commons.cli.Parser.parse(Parser.java:85) ~[commons-cli-commons-cli-1.2.jar:1.2]   at org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:240) ~[org.apache.bookkeeper-bookkeeper-server-4.16.0-SNAPSHOT.jar:4.16.0-SNAPSHOT]   at org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:2372) ~[org.apache.bookkeeper-bookkeeper-server-4.16.0-SNAPSHOT.jar:4.16.0-SNAPSHOT]   at org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:2463) ~[org.apache.bookkeeper-bookkeeper-server-4.16.0-SNAPSHOT.jar:4.16.0-SNAPSHOT]  ledgermetadata: Print the metadata for a ledger  or optionally dump to a file.  usage: ledgermetadata -ledgerid <ledgerid> [--dump-to-file                        FILENAME|--restore-from-file FILENAME]   -dumptofile <arg>        Dump metadata for ledger  to a file   -l --ledgerid <arg>      Ledger ID   -restorefromfile <arg>   Restore metadata for ledger  from a file  ```    ### Changes  Add `-h` and `--help` support.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  ZhangJian He <shoothzj@gmail.com>  Andrey Yegorov <None>  This closes #3227 from hangc0276/chenhang/fix_bookieshell_help_exception
2022-04-25T22:32:20Z,2455,Format log statements  ### Motivation  In PR #2455   It convert all `System.*.print` statements to `LOG.* statements`. However  in `LOG.*` statements  it uses string concatenation to print messages  which is low performance.    ### Changes  Change the string concatenation format to `LOG.*` standard statements      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  ZhangJian He <shoothzj@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  Yong Zhang <zhangyong1025.zy@gmail.com>  This closes #3213 from hangc0276/chenhang/format_log_info
2022-04-25T22:28:04Z,3222,Fix read empty ledger exception using bookkeeper admin  ### Motivation  Fix #3222     The root cause is that BookKeeperAdmin use `asyncReadEntriesInternal` to read entries. However  the `asyncReadEntriesInternal` doesn't check the lastAddConfirm  which will lead to the exception list in issue 3222    ### Changes    Add lastAddConfirm check before call `asyncReadEntriesInternal`  Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  Andrey Yegorov <None>  This closes #3240 from hangc0276/chenhang/fix_BKBookieHandleNotAvailableException_for_empty_ledger
2022-04-25T22:25:35Z,3232,Bump jetty to 9.4.46.v20220331 to get rid of CVE-2021-34429  ### Motivation    Current jetty version is vulnerable to https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34429      ### Changes    * Upgrade to the latest 9.x one 9.4.46.v20220331    Reviewers: Andrey Yegorov <None>  ZhangJian He <shoothzj@gmail.com>  Tian Luo <futurer@outlook.com>  Yong Zhang <zhangyong1025.zy@gmail.com>  This closes #3232 from nicoloboschi/bump-jetty-9.4.46.v20220331
2022-04-24T10:42:21Z,3241,[ci] [github] upload test log when fail (#3241)
2022-04-24T02:52:45Z,3217,Issue 2518:fix error link (#3217)  ### Motivation    (Explain: why you're making that change  what is the problem you're trying to solve)  [issue 2518](https://github.com/apache/bookkeeper/issues/2518)    ### Changes    just try to fix the error link.
2022-04-22T16:32:11Z,3053,[build] make build passes on JDK17 (#3053)
2022-04-22T16:10:59Z,3210,[minor] cleanup on InterleavedLedgerStorage (#3210)
2022-04-22T16:10:18Z,3225,Remove log4j from bookkeeper (#3225)
2022-04-22T16:06:17Z,3238,bookeeper all missing stream binary (#3238)
2022-04-22T01:00:01Z,3211,fix logger number not correct (#3211)  ### Motivation    fix logger number not correct    ### Changes    fix logger number not correct
2022-04-21T11:42:58Z,3177,[minor] replace deprecated api use MockitoAnnotations.initMocks (#3177)
2022-04-21T11:42:33Z,3230,fix broken local bookie (#3230)
2022-04-21T07:50:09Z,3229,[ZooKeeper] [Conflict] Bump dropwizard metrics to zookeeper needed (#3229)
2022-04-21T00:27:08Z,3226,fix cli command doc issue (#3226)  ### Motivation  Fix #3221     ### Changes  Fix some cli command doc issue  and keep sync with code.
2022-04-20T14:18:20Z,3216,Bump jackson databind version to 2.13.2.2  ### Changes  - jackson bom will release a version when everytime its components releases  so we don't need to define variables like `jackson-data.version`  - bump jackson databind version to 2.13.2.2  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #3216 from Shoothzj/bump-jackson-databind-version-2-13-2-2
2022-04-20T14:15:35Z,3219,Bump async from 2.6.3 to 2.6.4 in /site3/website (#3219)  Bumps [async](https://github.com/caolan/async) from 2.6.3 to 2.6.4.  - [Release notes](https://github.com/caolan/async/releases)  - [Changelog](https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md)  - [Commits](https://github.com/caolan/async/compare/v2.6.3...v2.6.4)    ---  updated-dependencies:  - dependency-name: async    dependency-type: indirect  ...    Signed-off-by: dependabot[bot] <support@github.com>    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
2022-04-20T13:43:15Z,3205,Fix force GC doesn't work under forceAllowCompaction when disk is full (#3205)  ## Motivation  When I set `forceAllowCompaction=true` and one ledger disk reaches max usage threshold and transfer bookie to readOnly mode  I expire some pulsar topics or delete some topics to free up disk space. I found that ledger compression cannot be triggered when using `curl -XPUT http://localhost:8000/api/v1/bookie/gc` command.    The root cause is that when one ledger disk reaches max usage threshold  it will suspend minor and major compaction  https://github.com/apache/bookkeeper/blob/f7579fd13d62ce630ea26638e73f5884da505ec8/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/storage/ldb/SingleDirectoryDbLedgerStorage.java#L1041-L1058    When we use `curl -XPUT http://localhost:8000/api/v1/bookie/gc` command to trigger compaction  it will be filtered by `suspendMajor` and `suspendMinor` flag.      https://github.com/apache/bookkeeper/blob/f7579fd13d62ce630ea26638e73f5884da505ec8/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java#L416-L444    It will lead to   - The bookie won't clean up deleted ledgers   - Ledger disk can't free up disk usage  - Bookie can't recover from readOnly state into Writeable state.    And then we can only trigger compaction by the following steps.  - Increase max disk usage threshold  - Restart the bookie  - Use command `curl -XPUT http://localhost:8000/api/v1/bookie/gc` to trigger compaction    ### Changes  1. Don't take the `suspendMajor` and `suspendMinor` flag into consideration when setting `forceAllowCompaction=true` and triggered by force GC.
2022-04-19T19:25:04Z,3218,fix numLedgersReplicated metric not update (#3218)
2022-04-19T16:34:50Z,3208,Remove log4j1 from bk test code  ### Motivation  this is a part work of remove log4j1 from bookeeper  first remove it from our test code  unit test and integrate test    ### Changes  - remove log4j1 scope test dependency  - use log4j2.xml instread of log4j.properties  - introduce testtools module to reduce duplication   if a module needs particular configuration (very unlikely) we can add a log4j2-test.xml file which has precedence over log4j2.xml one. idea from [nicoloboschi](https://github.com/nicoloboschi)  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3208 from Shoothzj/remove-log4j1-from-bk-test-code2
2022-04-15T06:00:44Z,3207,Fix testCompactionPersistence do not cleanup created directory (#3207)
2022-04-14T09:49:57Z,3187,[website] Make site3 the official website (deploy scripts - master) (#3187)  * [website] Make site3 the official website    * fix action
2022-04-13T12:37:08Z,3204,Fix master broken ci due to zookeeper CVE fp (#3204)
2022-04-13T01:49:15Z,3196,simplify throttle code in metadata scanning (#3196)  ### Motivation  The throttler has been checked whether throttle by bytes in `acquire` method  we doesn't need double check.    ### Changes    Remove the double check of whether throttle by bytes.
2022-04-13T01:47:54Z,3173,expose netty threads num config to bk_server.conf (#3173)  ### Motivation  https://github.com/apache/bookkeeper/pull/1612 this PR make the Netty io threads number configurable  but doesn't expose to the `bk_server.conf`. This parameter will be usually changed in performance tuning especially deploy this bookie on bare metal which have many cpus. For operation engineer who is unfamiliar with the source code will be hard to do performance tuning.    ### Changes  Expose this parameter configuration into `bk_server.conf` and website. And add more explanation about it.
2022-04-13T01:47:20Z,3169,remove unnessary exception catch (#3169)  ### Motivation  When read Lac from ledger  we won't throw NoEntryException  remove this exception catch.      ### Changes  Remove the NoEntryException catch in ReadLac operation.
2022-04-11T01:03:22Z,3195,Allow running units test on jdk17 (#3195)  * Allow running units test on jdk17    * Allow running units test on jdk17
2022-04-10T23:50:18Z,3190,BP-47 (task2): Add structured logger support (#3190)  * Add slogger support    * update pom.xml    * fix check style
2022-04-10T23:49:39Z,3189,BP-47 (task1): Add native IO library support (#3189)  * Add native io library support    * fix jni compile issue    * fix findbugs failed
2022-04-07T06:56:36Z,3188,Upgrade to log4j 2.17.2. (#3188)  Signed-off-by: Raúl Gracia <raul.gracia@emc.com>
2022-04-06T15:58:47Z,2790,only update topology when bookie rack changed  It is unnecessary to update  topology  removing and adding the same bookieNode  if the rack of bookie stay unchanged.  Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  Andrey Yegorov <None>  ZhangJian He <shoothzj@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2790 from gaozhangmin/remove-unnecessary-update-rack
2022-04-06T15:37:28Z,3183,[BUILD] fix master branch broken http-core license check  ### Changes  - the bkctl and bk-server has different `http-core` version  - unify the `http-core` version to 4.4.15    Reviewers: Andrey Yegorov <None>  Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #3183 from Shoothzj/fix-broken-license-check
2022-04-06T09:17:07Z,3164,[website] add CI checks to validate the website (#3164)
2022-04-06T09:07:50Z,3179,Bump minimist from 1.2.5 to 1.2.6 in /site3/website (#3179)  Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.  - [Release notes](https://github.com/substack/minimist/releases)  - [Commits](https://github.com/substack/minimist/compare/1.2.5...1.2.6)    ---  updated-dependencies:  - dependency-name: minimist    dependency-type: indirect  ...    Signed-off-by: dependabot[bot] <support@github.com>    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
2022-04-06T09:06:54Z,3180,Bump node-forge from 1.2.1 to 1.3.1 in /site3/website (#3180)  Bumps [node-forge](https://github.com/digitalbazaar/forge) from 1.2.1 to 1.3.1.  - [Release notes](https://github.com/digitalbazaar/forge/releases)  - [Changelog](https://github.com/digitalbazaar/forge/blob/main/CHANGELOG.md)  - [Commits](https://github.com/digitalbazaar/forge/compare/v1.2.1...v1.3.1)    ---  updated-dependencies:  - dependency-name: node-forge    dependency-type: indirect  ...    Signed-off-by: dependabot[bot] <support@github.com>    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
2022-04-06T08:13:13Z,2989,Use netty maxDirectMemory instead of DirectMemoryUtils  ### Motivation    Our `DirectMemoryUtils` has huge limit  it can't work well with other jvm. The Netty `PlatformDependent.maxDirectMemory();` is more generic.    ### Changes  Use `PlatformDependent.maxDirectMemory();` instead of `DirectMemoryUtils`  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  Matteo Merli <mmerli@apache.org>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2989 from Shoothzj/direct-memory
2022-04-06T05:46:17Z,3175,[build] support apple m1 build (#3175)
2022-04-03T16:09:49Z,3172,[netty] remove no longer used properties io.netty.recycler.linkCapacity and io.netty.recycler.maxCapacity.default (#3172)  * [netty] remove no longer used properties io.netty.recycler.linkCapacity and io.netty.recycler.maxCapacity.default    * gradle
2022-04-03T08:00:21Z,3163,Bump netty version to 4.1.75.Final  grpc to 1.45.1 (#3163)
2022-04-02T19:22:13Z,3166,[build] Complement missing maven plugin version (#3166)
2022-04-02T19:21:18Z,3087,[security] Bump bc fips version from 1.0.2.1 to 1.0.2.3 (#3087)
2022-04-01T19:54:24Z,3154,[WEBSITE] Update current stable version to 4.14.4  ### Motivation    The current stable version is 4.14.4 but in the website is still 4.11.1    ### Changes    * Edit variables to point to 4.14.4  * Cleanup staging website "download" page    Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  This closes #3154 from nicoloboschi/update-stable-version
2022-04-01T07:37:57Z,3160,[build] Fix various spotbugs warnings  (#3160)
2022-03-31T13:39:47Z,2642,Fix region/rack aware placement police replace bookie bug (#2642)
2022-03-31T11:45:12Z,3161,[website] Update committers page  ### Changes  Update committers info    Reviewers: Andrey Yegorov <None>  This closes #3161 from nicoloboschi/update-committers-nicoloboschi
2022-03-31T07:08:13Z,3144,Revert rocksdb compaction on checkpoint to reduce cpu intensive (#3144)
2022-03-31T05:42:34Z,3060,catch onBookieRackChange exception (#3060)  ### Motivation  When we update the bookie rack info  it will use all the bookie list to update rack topology. However If one bookie update failed and throw exception out  it will throw the exception out and the remains bookie info won't be updated into the rack topology  which will affect the ledger ensemble selection.    ### Changes    Catch the bookie topology update exception to ensure the remaining bookies' info can be updated into the rack topology.
2022-03-30T23:10:25Z,3152,use mockito.any instead of deprecated mockito.anyObject  ### Changes  use mockito.any instead of deprecated mockito.anyObject    Reviewers: Andrey Yegorov <None>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3152 from Shoothzj/use-mockito-any-instead-of-anyObject
2022-03-30T10:41:33Z,3145,Upgrade ZooKeeper to 3.8.0 (#3145)
2022-03-29T06:29:00Z,3137,fix duplicate typeline for prometheus type (#3137)
2022-03-28T23:01:51Z,,[maven-release-plugin] prepare for next development iteration
2022-03-28T23:01:48Z,,[maven-release-plugin] prepare branch branch-4.15
2022-03-28T22:54:35Z,3127,Fix NPE while reordering read-sequence for local-bookie ensemble policy  ### Motivation    When Bookie sanity and autoreovery use the same conf file which has flag `reorderReadSequenceEnabled=true` then bookie-sanity command throws NPE as `LocalBookieEnsemblePlacementPolicy::reorderReadLACSequence` returns null writesets which causes the sanity failure.    ```  00:46:46.202 [BookKeeperClientWorker-OrderedExecutor-11-0] ERROR o.a.b.common.util.SafeRunnable       - Unexpected throwable caught   java.lang.NullPointerException: null   at org.apache.bookkeeper.client.PendingReadOp$SequenceReadRequest.sendNextRead(PendingReadOp.java:399)   at org.apache.bookkeeper.client.PendingReadOp$SequenceReadRequest.read(PendingReadOp.java:385)   at org.apache.bookkeeper.client.PendingReadOp.initiate(PendingReadOp.java:529)   at org.apache.bookkeeper.client.LedgerRecoveryOp.doRecoveryRead(LedgerRecoveryOp.java:148)   at org.apache.bookkeeper.client.LedgerRecoveryOp.access$000(LedgerRecoveryOp.java:37)   at org.apache.bookkeeper.client.LedgerRecoveryOp$1.readLastConfirmedDataComplete(LedgerRecoveryOp.java:109)   at org.apache.bookkeeper.client.ReadLastConfirmedOp.readEntryComplete(ReadLastConfirmedOp.java:135)   at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion$1.readEntryComplete(PerChannelBookieClient.java:1829)   at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleReadResponse(PerChannelBookieClient.java:1910)   at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1885)   at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1446)   at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36)   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)   at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)   at java.lang.Thread.run(Thread.java:748)    ```    ### Modification  Fix NPE for local ensemble policy while reading entry with `reorderReadSequenceEnabled` flag enabled.  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3127 from rdhabalia/repl_seq
2022-03-28T22:23:14Z,3142,Fix doc code problem.  fix docs code demo problem.  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Andrey Yegorov <None>  This closes #3142 from horizonzy/fix-docs-code-problem
2022-03-28T15:53:04Z,3149,BookieAutoRecoveryTest.testEmptyLedgerLosesQuorumEventually fix flaky test  ensure that the Auditor is alive (#3149)
2022-03-27T12:37:16Z,3140,[security] Upgrade jackson-databind to get rid of CVE-2020-36518 (#3140)  * [security] Upgrade jackson-databind to get rid of CVE-2020-36518
2022-03-27T09:53:36Z,3143,Upgrade rocksdb to 6.29.4.1 (#3143)
2022-03-24T16:15:09Z,3130,Bringing back maven build (#3130)  * Revert "[build] remove Maven POM files (#3009)"    This reverts commit e089b51ab5e1cf5f061c81463d27f33a21198271.    * rxjava: add maven dependency    (cherry picked from commit ac73541ce79953141a08c60642cd39c7984ade1e)    * Bring guava to the same version as gradle    * ignore deprecation warnings in tests    * mockito-inline  as in gradle + suppress warnings    * suppressed warning    * Exclude site3/ from RAT check    * CI to use (mostly) maven    * OWASP check with maven    * Up'd versions to match gradle  corrected license files: looks like gradle build didn't force versions consistently    * Removed current-version-image to match https://github.com/apache/bookkeeper/pull/3027    * Shading patetrn to match gradle    * Fixed/suppressed CVEs    * Attempt to fix failing tests in CompactionByEntriesWithMetadataCacheTest    Co-authored-by: lushiji <lushiji@didiglobal.com>
2022-03-24T08:22:02Z,3110,PendingReadOp: Fix ledgerEntryImpl reuse problem (#3110)
2022-03-23T08:01:53Z,3096,Set BOOKIE_HTTP_PORT to make it optional in docker run (#3096)  Fixes #3075.
2022-03-23T08:01:00Z,3105,Issue #3105: Optimize OrderedExecutor performance by using GrowableArrayBlockingQueue (#3108)  Fixes #3105
2022-03-23T08:00:34Z,3116,Remove unused site2 directory (#3116)
2022-03-21T15:06:01Z,3117,Log NoLedgerException on debug level (#3117)  NoLedgerException does not signify an error in the Bookie that needs  to be fixed. Instead it is - at most - a user error that the user is  notified about via the status code ENOLEDGER.  Logging this problem at error level introduces an odd difference  between the behavior of readLac using v2 versus v3 protocol version.  In the former case ReadEntryProcessor logs the same problem at debug  level. As a result changing protocol version appers to be introducing  an error.
2022-03-18T16:40:43Z,3126,[WEBSITE] Staging website: images are not visible  ### Motivation    In the staging website image links are broken    ### Changes    * Fixed the links with the correct syntax (I checked every `img` reference)   Reviewers: Andrey Yegorov <None>  This closes #3126 from nicoloboschi/website/fix-imgs
2022-03-18T10:43:42Z,3125,[website] fix GITHUB_TOKEN used for deployment (#3125)
2022-03-18T08:59:11Z,3124,[website] use GH_TOKEN to push to asf-site and asf-staging branches (#3124)
2022-03-17T16:27:50Z,3123,[website] Fix deploy push to git - use ssh (#3123)
2022-03-17T16:09:04Z,3122,[website] fix deploy staging script (#3122)
2022-03-17T16:08:09Z,3120,[website] fix current site deployment (#3120)
2022-03-17T11:40:36Z,3118,[website] deploy staging after every change (#3118)
2022-03-16T18:15:49Z,3114,Gradle build: add mavenLocal() repository  ### Motivation    In Gradle you need to add `mavenLocal()` repository if you want to test local versions of third party libraries built with Maven (like ZooKeeper  Curator...)      ### Changes  Add `mavenLocal()`  repository  Reviewers: Matteo Merli <mmerli@apache.org>  Nicolò Boschi <boschi1997@gmail.com>  Andrey Yegorov <None>  This closes #3114 from eolivelli/impl/gradle-maven-local
2022-03-16T16:06:24Z,3088,[website] New Website built with Docusaurus v2 (#3088)
2022-03-16T10:10:59Z,3102,add stats for throttled-write (#3102)  Descriptions of the changes in this PR:      ### Motivation    method:triggerFlushAndAddEntry costing time is a changing so add a stats metric focus on this method     ### Changes    1.the previous counter metrics(throttledWriteRequests) are retained  2.add throttledWriteStats to record cost time and count for the method(triggerFlushAndAddEntry)
2022-03-15T23:42:56Z,3101,Bump testcontainers version to 1.16.3  ### Motivation  - Bump the testcontainers version to make tests can run on the latest docker on `Mac Intel Chip`  - Bump `docker-java` version to `3.2.13`  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Andrey Yegorov <None>  This closes #3101 from Shoothzj/bump-test-container-version
2022-03-15T23:32:24Z,3097,bump lombok from 1.18.20 to 1.18.22 to support java17 compile  ### Motivation  - required for compilation on JDK 17  - see https://projectlombok.org/changelog  Reviewers: Andrey Yegorov <None>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3097 from Shoothzj/bump-lombok-1-18-22
2022-03-15T16:42:49Z,3107,Run protobuf code generation automatically in IntelliJ and fix config (#3107)
2022-03-15T10:55:42Z,3092,ConcurrentLong map and set": add unit tests for reduce unnecessary expansions  (#3092)
2022-03-15T10:28:29Z,3082,ConcurrentOpenHashSet: fix reduce  unnecessary expansions (#3082)
2022-03-14T11:10:35Z,3090,[website] update website every time there is a change (#3090)
2022-03-13T12:50:17Z,3100,fix bkperf message rate limit to 2GB/s (#3100)
2022-03-11T23:07:12Z,3095,Preparing for the release 4.15  Descriptions of the changes in this PR:    Updated py client's version to 4.15    Motivation    Preparing for the release  https://bookkeeper.apache.org/community/release_guide/#change-python-client-version  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #3095 from dlg99/python_client_rel_4.15
2022-03-11T20:13:16Z,3083,fix a metric error in bookieStats  Descriptions of the changes in this PR:        ### Motivation    fix a metric error in bookieStats    ### Changes    getReadEntryStats().registerFailedValue(entrySize) -> getReadBytesStats().registerFailedValue(entrySize)            Reviewers: Andrey Yegorov <None>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3083 from TakaHiro0208/fix_bookieStats_metric_error
2022-03-11T19:57:51Z,2799,Add a REST API to get or update bookie readOnly state  ### Motivation    This PR is a part of the work to improve the process of removing bookies from the cluster. Specifically  it implements the `readOnly` API described in the [mail](http://mail-archives.apache.org/mod_mbox/bookkeeper-dev/202109.mbox/raw/%3CCAJdLeK03g8K0h6swn%3D9yVP1Ze2zHxe8TDobK6a-zpTdABkeQEA%40mail.gmail.com%3E).    ### Changes    - Add an REST API at `/api/v1/bookie/state/readonly`    - The `GET` method returns the current `readOnly` status    - The `PUT` method updates the `readOnly` status if needed.    ### TODOs    - Update the document once the PR is accepted.  - Update the `BookieStateManager` & `BookieImpl` to persist the information that the state change is triggered by the external API request and do not change the state based on the notification from the dirs monitoring service.  Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #2799 from fantapsody/readonly-api
2022-03-10T07:32:58Z,3089,[website] Fix deploy action (#3089)
2022-03-10T00:09:25Z,2948,Fix Journal.ForceWriteThread.forceWriteRequests.put deadlock  Descriptions of the changes in this PR:        ### Motivation  `Journal.ForceWriteThread` could deadlock as it is the sole consumer of `Journal.forceWriteRequests` while it send group marker blocking using `BlockingQueue.put`.    This PR try to fix this.    ### Changes  * Add testing code to deadlock `Journal.ForceWriteThread` on `forceWriteRequests.put`.  * Send force write group marker non-blocking to avoid deadlock `ForceWriteThread`.    Master Issue: #2948  Reviewers: Andrey Yegorov <None>  This closes #2962 from kezhuw/fix-Journal.ForceWriteThread.forceWriteRequests.put-deadlock
2022-03-10T00:05:59Z,3006,change rocksdb init: use OptionsUtil  Descriptions of the changes in this PR:    ### Motivation    1. some old parameters in rocksDB is not configurable  2. for all the tuning of rocksdb in the future  there is no need to update the code or introduce configuration to bookie    ### Changes    1)   rocks all old parameter change to be configurable  2)  use OptionsUtil to init all params for rocksdb    the old pr #3006  has some rebase error open a new pr  Reviewers: Andrey Yegorov <None>  LinChen <None>  This closes #3056 from StevenLuMT/master_improveRocksDB
2022-03-10T00:04:20Z,2963,Add throttle for rebuild entryMetadataMap  ### Motivation  When a bookie restart  the garbageCollectorThread will rebuild entryMetadataMap from all the entry log files in ledger directory. For normal case  it will extract the EntryLogMetadata from the index in entry log file. However  if there's no index  then fallback to scanning the entry log file.     In user's production environment  the log files without index occupied 4%. The total entry log files is 80000  and the log files without index is 3000. The default entry log file size is 2GB  and the garbageCollectorThread will read 3000 * 2GB = 6TB data without speed limit  which will cause ledger disk IO util runs high for dozens of minutes and affect ledger read and write latency.    ### Modification  1. Add read speed rate limiter for scanning entry log file in entryMetadataMap rebuild.  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2963 from hangc0276/chenhang/add_throttle_for_build_entryMetadataMap
2022-03-10T00:03:16Z,1088,check all bookies of writeset are writable  ### Motivation    #1088 introduced ensemble writable checking before sending requests  but we should check bookies of writeset  instead of the first few bookies in current ensemble.    ### Changes    Get the bookies of writeset from ensemble and check writeable.    Related change: https://github.com/apache/bookkeeper/pull/1088/files#diff-1d893bb31553b5e1f55c8301d04ae15f38e0d35f531f9dd22475128b7972ddf9R1108    Reviewers: Andrey Yegorov <None>  This closes #3055 from wuYin/writeset-writable
2022-03-10T00:02:00Z,3068,Add sizeInBytes interface for ConcurrentLong map and set  ### Motivation  We provide some concurrent maps and sets for specific usage  and provide size() and capacity() interface for user to get the real item number and the max item number.     However  if user want to monitor how much memory those current maps and set allocated  there is not interface to expose this metric.    ### Changes  Add `sizeInBytes()` interface to expose the memory size has been allocated for those concurrent maps and sets.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3068 from hangc0276/chenhang/add_sizeInBytes_interface_for_concurrent_maps
2022-03-10T00:00:08Z,3071,Fix publish do not include test jar  ### Motivation  When use `./gradlew publishToMavenLocal` command to publish jars to local maven repository  it doesn't include test jars.    ### Changes  When publish  including the test jars.  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  ZhangJian He <shoothzj@gmail.com>  Yong Zhang <zhangyong1025.zy@gmail.com>  This closes #3071 from hangc0276/chenhang/fix_publish_do_not_include_test_jar
2022-03-08T17:22:55Z,3081,[website] restore javadoc generation and automate website deployment (#3081)  * [website] restore javadoc generation and automate website deployment
2022-03-03T17:42:10Z,3074,support shrink for ConcurrentLong map or set (#3074)  * support shrink for ConcurrentLong map or set    * fix unit test    * check style    * add shrink unit test.    * fix unit test
2022-03-02T08:05:11Z,3027,[ci] Move CI to JDK11 (#3027)
2022-03-01T21:04:56Z,3077,[tests] Replace powermockito usages with mockito-inline - 'tools' submodule (#3077)
2022-02-27T21:14:48Z,3072,reduce unnecessary expansions for  ConcurrentLong map and set (#3072)
2022-02-25T17:26:37Z,2898,ISSUE #2898: DistributedLogManager can skip over a segment on read.  Descriptions of the changes in this PR:  ### Motivation    DLM test suite was flaky.  Repro/troubleshooting shows that DLM can skip over a data segment on read.    ### Changes    Test + fix (don't move segment if it moved already).    Master Issue: #2898       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3064 from dlg99/fix/dlm-issue2898  closes #2898
2022-02-25T17:22:41Z,3078,[CI] remaining-tests is running all the tests  ### Motivation    The 'remaining-tests' is supposed to exclude a lot of tests covered by the other checks but the syntax used is wrong    ### Changes    * Correctly excluded all the tests not needed in 'remaining-tests' suite    Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #3078 from nicoloboschi/ci/remove-duplicated-tests
2022-02-25T06:36:05Z,2995,Allow enabling http tls (#2995)
2022-02-23T21:03:11Z,3023,Issue 2974: better thread selection for the Ordered Executor (#3023)
2022-02-23T21:01:36Z,3032,[ISSUE 3031] fixed test; chooseThread() uses orderingKey as a param  not a thread index (#3032)
2022-02-23T10:16:56Z,2970,fix checkAllLedgersDuration compute (#2970)
2022-02-23T10:15:14Z,2961,update doc RecoveryBookieService: bookie_dest has been removed (#2961)
2022-02-22T19:24:57Z,3069,fix gradle publishToMavenLocal failed (#3069)
2022-02-22T07:00:48Z,3046,Avoiding call fileChannelProvider init multiple times (#3046)
2022-02-22T05:01:03Z,3061,Optimize memory：Support shrinking in ConcurrentLongLongPairHashMap (#3061)  * support shrink    * Reduce unnecessary rehash    * check style    * fix: unnecessary rehash    * add unit test: testExpandAndShrink    * fix unit test: testExpandAndShrink    * fix test:  1.verify that the map is able to expand after shrink;  2.does not keep shrinking at every remove() operation;    * 1.add builder;  2.add config:    ①MapFillFactor；②MapIdleFactor；③autoShrink；④expandFactor；⑤shrinkFactor    * check style    * 1.check style;  2.add check :  shrinkFactor>1  expandFactor>1    * check style    * keep and Deprecate all the public constructors.    * add final for  autoShrink    * fix unit test testExpandAndShrink  set autoShrink true    * add method for update parameters value:    ①setMapFillFactor    ②setMapIdleFactor    ③setExpandFactor    ④setShrinkFactor    ⑤setAutoShrink    * use lombok.Setter replace lombok.Data    * use pulic for getUsedBucketCount    * 1.check parameters；  2.fix the shrinkage condition:    ①newCapacity > size: in order to prevent the infinite loop of rehash  newCapacity should be larger than the currently used size;    ②newCapacity > resizeThresholdUp: in order to prevent continuous expansion and contraction  newCapacity should be greater than the expansion threshold;    * 1.update  parameters check；  2.fix newCapacity calculation when shrinking :    rehash((int) Math.max(size / mapFillFactor  capacity / shrinkFactor));    * remove set methods:  ①setMapFillFactor  ②setMapIdleFactor  ③setExpandFactor  ④setShrinkFactor  ⑤setAutoShrink    * Repair shrinkage conditions: ①newCapacity must be the nth power of 2; ②reduce unnecessary shrinkage;    * Repair shrinkage conditions    * add shrinkage when clear    * 1.add test for clear shrink  2. fix initCapacity value
2022-02-22T02:17:38Z,3051,ISSUE 3044: ETCD tests hang. Added global timeout  fork tests jvm  fixed noop slf4j to see log in case of hang (#3051)  Descriptions of the changes in this PR:    ### Motivation    ETCD test flake / hang occasionally causing CI job timeout.    ### Changes    Added global timeout - kill test early if hanged  fork tests jvm - I think it helped locally (no repro) but possibly just reduced frequency of hangs   fixed noop slf4j warning  also to see log in case of hang     Master Issue: #3044
2022-02-22T00:42:13Z,3012,set Mod initial Delay time to simply avoid GarbageCollectorThread working at the same time (#3012)  Descriptions of the changes in this PR:    ### Motivation    when number of ledger's Dir are more than 1 the same of GarbageCollectorThread will do the same thing   Especially:    1) deleting ledger  then SyncThread will be timed to do rocksDB compact    2) compact: entry  cost cpu.    ### Changes    set a Mod initial Delay time to simply avoid GarbageCollectorThread working at the same time
2022-02-21T01:54:24Z,3065,ISSUE 3034: Fixed flaky test (#3065)  Descriptions of the changes in this PR:    ### Motivation    MockExecutorControllerWithSchedulerTest is flaky    ### Changes    testExecute flakes because runnable runs actually asynchronously in this case  modified the test.     Master Issue: #3034
2022-02-15T20:05:44Z,3034,ISSUE #3034: Add extra checks in the mock to help with error troubleshooting on CI  ### Motivation    Flaky test on CI    ### Changes    Added extra check & logging to simplify troubleshooting of the flaky test on CI.  Cannot repro the failure locally after running 100+ times in a loop.    Master Issue: #3034     Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #3049 from dlg99/fix/issue3034  closes #3034
2022-02-15T17:05:17Z,3040,ISSUE #3040: RocksDB segfaulted during CompactionTest  Descriptions of the changes in this PR:    ### Motivation    RocksDB segfaulted during CompactionTest    ### Changes    RocksDB can segfault if one tries to use it after close.  [Shutdown/compaction sequence](https://github.com/apache/bookkeeper/issues/3040#issuecomment-1036508397) can lead to such situation. The fix prevents segfault.    CompactionTests were updated at some point to use metadata cache and non-cached case is not tested.   I added the test suites for this case.    Master Issue: #3040       Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3043 from dlg99/fix/issue3040  closes #3040
2022-02-15T09:01:14Z,3045,Bump netty version to 4.1.74.Final (#3045)  ### Motivation    Changelog: https://netty.io/news/2022/02/08/4-1-74-Final.html    Netty 4.1.74 had solved several dns resolver bug    ### Modifications    * Upgrade Netty from 4.1.73.Final to 4.1.74.Final  * Netty 4.1.74.Final depends on netty-tc-native 2.0.48  also updates
2022-02-15T08:55:57Z,2999,update metrics (#2999)  Descriptions of the changes in this PR:      ### Motivation    some metric's value is not right so update it  the current is problem-driven  and a comprehensive review will be done later.    ### Changes    update 2 metric:  1.Bookie: ReadBytes use entrySize  2.Journal: report journal write error metric
2022-02-15T01:43:28Z,3042,[CI] Dump stacktrace when a job is cancelled  ### Motivation    Sometimes CI jobs fail due to timeout. It would be useful understand what the latest test was doing before being interrupted.     ### Changes    * Added a new script for dumping stacktrace.  * Added in all the jobs the step in case of `cancelled()` is true.    Reviewers: Andrey Yegorov <None>  This closes #3042 from nicoloboschi/ci-thread-dump
2022-02-14T22:50:25Z,2836,Use OutOfMemoryPolicy when the direct memory is insufficient when reading the entry in ReadCache  ### Motivation    Original PR: https://github.com/apache/bookkeeper/pull/1755   It should be that this PR forgot to modify the memory application method.    When the direct memory is insufficient  it does not fall back to the jvm memory  and the bookie hangs directly.    ![image](https://user-images.githubusercontent.com/35599757/137859349-f145bb88-7d1c-4739-b6d1-6f8987831cc0.png)    ![image](https://user-images.githubusercontent.com/35599757/137859462-4e2b3dc5-3287-4bf7-8dad-048ad8a7723f.png)        ### Changes    Use `OutOfMemoryPolicy` when the direct memory is insufficient when reading the entry in `ReadCache`.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #2836 from wenbingshen/useOutOfMemoryPolicyInReadCache
2022-02-14T20:19:54Z,3029,fix gradle implicit dependency (#3029)  ```  > Task :bookkeeper-tools-framework:compileTestJava  Execution optimizations have been disabled for task ':bookkeeper-tools-framework:compileTestJava' to ensure correctness due to the following reasons:    - Gradle detected a problem with the following location: '/Users/mbarnum/src/bookkeeper/tools/framework/build/classes/java/main'. Reason: Task ':bookkeeper-tools-framework:compileTestJava' uses this output of task ':tools:framework:compileJava' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced  depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.3.3/userguide/validation_problems.html#implicit_dependency for more details about this problem.  ```
2022-02-14T19:36:06Z,3031,Add flaky-test template to track many flaky-test.  ### Motivation    I found many flaky-test like  #3031 #3034 #3033.  Because many flaky tests are actually production code issues so I think it's a good way to add flaky-test template to track them     ### Changes    - Add flaky-test template.      Reviewers: Andrey Yegorov <None>  This closes #3035 from mattisonchao/template_flaky_test
2022-02-14T19:32:55Z,2910,fix(cli): incorrect description for autodiscovery  Signed-off-by: Eric Shen <ericshenyuhaooutlook.com>    Descriptions of the changes in this PR:      ### Motivation    The description of `bin/bookkeeper autorecovery` is wrong  it won't start in daemon.    ### Changes    * Changed the description in bookkeeper shell  * Update the doc      Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  This closes #2910 from ericsyh/fix-bk-cli
2022-02-14T19:20:49Z,2873,Explicit error message if an exception other than BKNoSuchLedgerExistsOnMetadataServerException occurs in over-replicated ledger GC  ### Motivation  - Even if an exception other than BKNoSuchLedgerExistsOnMetadataServerException occurs of readLedgerMetadata in over-replicated ledger GC  nothing will be output to the log.  (https://github.com/apache/bookkeeper/pull/2844#discussion_r735219876)    ### Changes  - If an exception other than BKNoSuchLedgerExistsOnMetadataServerException occurs in readLedgerMetadata  output information to the log.    Reviewers: Andrey Yegorov <None>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2873 from shustsud/improved_error_handling
2022-02-14T19:17:28Z,2805,Replication stat num-under-replicated-ledgers changed as with the process of replication  Motivation  Now ReplicationStats numUnderReplicatedLedger registers when `publishSuspectedLedgersAsync`  but its value doesn't decrease as with the ledger replicated successfully  We cannot know the progress of replication from the stat.    Changes  registers a notifyUnderReplicationLedgerChanged when auditor starts. numUnderReplicatedLedger value will decrease when the ledger path under replicate deleted.  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #2805 from gaozhangmin/replication-stats-num-under-replicated-ledgers
2022-02-14T19:11:38Z,2705,BP-46: Running without journal proposal  Includes the BP-46 design proposal markdown document.    Master Issue: #2705  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2706 from Vanlightly/bp-44
2022-02-14T19:01:22Z,2810,delete duplicated semicolon  As title  delete duplicated semicolon  Reviewers: Andrey Yegorov <None>  This closes #2810 from gaozhangmin/remove-duplicated-semicolon
2022-02-14T19:00:06Z,2823,make rocksdb format version configurable  ### Motivation  Fix #2823  RocksDB support several format versions which uses different data structure to implement key-values indexes and have huge different performance. https://rocksdb.org/blog/2019/03/08/format-version-4.html    https://github.com/facebook/rocksdb/blob/d52b520d5168de6be5f1494b2035b61ff0958c11/include/rocksdb/table.h#L368-L394     ```C++    // We currently have five versions:    // 0 -- This version is currently written out by all RocksDB's versions by    // default.  Can be read by really old RocksDB's. Doesn't support changing    // checksum (default is CRC32).    // 1 -- Can be read by RocksDB's versions since 3.0. Supports non-default    // checksum  like xxHash. It is written by RocksDB when    // BlockBasedTableOptions::checksum is something other than kCRC32c. (version    // 0 is silently upconverted)    // 2 -- Can be read by RocksDB's versions since 3.10. Changes the way we    // encode compressed blocks with LZ4  BZip2 and Zlib compression. If you    // don't plan to run RocksDB before version 3.10  you should probably use    // this.    // 3 -- Can be read by RocksDB's versions since 5.15. Changes the way we    // encode the keys in index blocks. If you don't plan to run RocksDB before    // version 5.15  you should probably use this.    // This option only affects newly written tables. When reading existing    // tables  the information about version is read from the footer.    // 4 -- Can be read by RocksDB's versions since 5.16. Changes the way we    // encode the values in index blocks. If you don't plan to run RocksDB before    // version 5.16 and you are using index_block_restart_interval > 1  you should    // probably use this as it would reduce the index size.    // This option only affects newly written tables. When reading existing    // tables  the information about version is read from the footer.    // 5 -- Can be read by RocksDB's versions since 6.6.0. Full and partitioned    // filters use a generally faster and more accurate Bloom filter    // implementation  with a different schema.    uint32_t format_version = 5;  ```  Different format version requires different rocksDB version and it couldn't roll back once upgrade to new format version    In our current RocksDB storage code  we hard code the format_version to 2  which is hard to to upgrade format_version to achieve new RocksDB's high performance.    ### Changes    1. Make the format_version configurable.    Reviewers: Matteo Merli <mmerli@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2824 from hangc0276/chenhang/make_rocksdb_format_version_configurable
2022-02-14T18:56:19Z,2857,Ensure BookKeeper process receives sigterm in docker container  ### Motivation    Current official docker images do not handle the SIGTERM sent by the docker runtime and so get killed after the timeout. No graceful shutdown occurs.    The reason is that the entrypoint does not use `exec` when executing the `bin/bookkeeper` shell script and so the BookKeeper process cannot receive signals from the docker runtime.    ### Changes    Use `exec` when calling the `bin/bookkeeper` shell script.  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Lari Hotari <None>  Matteo Merli <mmerli@apache.org>  This closes #2857 from Vanlightly/docker-image-handle-sigterm
2022-02-14T02:39:23Z,2856,change log level from error to warn when dns resolver initialize failed (#2856)  Descriptions of the changes in this PR:    ### Motivation  When start bookie  it will throws the following error message when dns resolver initialize failed.  ```  [main] ERROR org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl - Failed to initialize DNS Resolver org.apache.bookkeeper.net.ScriptBasedMapping  used default subnet resolver : java.lang.RuntimeException: No network topology script is found when using script based DNS resolver.  ```  It is confusing for users.    ### Modification  1. change the log level from error to warn.
2022-02-11T07:16:30Z,3039,[ISSUE 3038] Fixed flaky CompactionTest.testMinorCompactionWithMaxTimeMillis (#3039)
2022-02-11T03:12:27Z,2965,Support multi ledger directories for rocksdb backend entryMetadataMap (#2965)  ### Motivation  When we use RocksDB backend entryMetadataMap for multi ledger directories configured  the bookie start up failed  and throw the following exception.  ```  12:24:28.530 [main] ERROR org.apache.pulsar.PulsarStandaloneStarter - Failed to start pulsar service.  java.io.IOException: Error open RocksDB database          at org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB.<init>(KeyValueStorageRocksDB.java:202) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB.<init>(KeyValueStorageRocksDB.java:89) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB.lambda$static$0(KeyValueStorageRocksDB.java:62) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.storage.ldb.PersistentEntryLogMetadataMap.<init>(PersistentEntryLogMetadataMap.java:87) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.GarbageCollectorThread.createEntryLogMetadataMap(GarbageCollectorThread.java:265) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.GarbageCollectorThread.<init>(GarbageCollectorThread.java:154) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.GarbageCollectorThread.<init>(GarbageCollectorThread.java:133) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.storage.ldb.SingleDirectoryDbLedgerStorage.<init>(SingleDirectoryDbLedgerStorage.java:182) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.storage.ldb.DbLedgerStorage.newSingleDirectoryDbLedgerStorage(DbLedgerStorage.java:190) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.storage.ldb.DbLedgerStorage.initialize(DbLedgerStorage.java:150) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.bookkeeper.bookie.BookieResources.createLedgerStorage(BookieResources.java:110) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          at org.apache.pulsar.zookeeper.LocalBookkeeperEnsemble.buildBookie(LocalBookkeeperEnsemble.java:328) ~[org.apache.pulsar-pulsar-zookeeper-utils-2.8.1.jar:2.8.1]          at org.apache.pulsar.zookeeper.LocalBookkeeperEnsemble.runBookies(LocalBookkeeperEnsemble.java:391) ~[org.apache.pulsar-pulsar-zookeeper-utils-2.8.1.jar:2.8.1]          at org.apache.pulsar.zookeeper.LocalBookkeeperEnsemble.startStandalone(LocalBookkeeperEnsemble.java:521) ~[org.apache.pulsar-pulsar-zookeeper-utils-2.8.1.jar:2.8.1]          at org.apache.pulsar.PulsarStandalone.start(PulsarStandalone.java:264) ~[org.apache.pulsar-pulsar-broker-2.8.1.jar:2.8.1]          at org.apache.pulsar.PulsarStandaloneStarter.main(PulsarStandaloneStarter.java:121) [org.apache.pulsar-pulsar-broker-2.8.1.jar:2.8.1]  Caused by: org.rocksdb.RocksDBException: lock hold by current process  acquire time 1640492668 acquiring thread 123145515651072: data/standalone/bookkeeper00/entrylogIndexCache/metadata-cache/LOCK: No locks available          at org.rocksdb.RocksDB.open(Native Method) ~[org.rocksdb-rocksdbjni-6.10.2.jar:?]          at org.rocksdb.RocksDB.open(RocksDB.java:239) ~[org.rocksdb-rocksdbjni-6.10.2.jar:?]          at org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB.<init>(KeyValueStorageRocksDB.java:199) ~[org.apache.bookkeeper-bookkeeper-server-4.15.0-SNAPSHOT.jar:4.15.0-SNAPSHOT]          ... 15 more  ```    The reason is multi garbageCollectionThread will open the same RocksDB and own the LOCK  and then throw the above exception.    ### Modification  1. Change the default GcEntryLogMetadataCachePath from `getLedgerDirNames()[0] + "/" + ENTRYLOG_INDEX_CACHE` to  `null`. If it is `null`  it will use each ledger's directory.  2. Remove the internal directory `entrylogIndexCache`. The data structure looks like:   ```     └── current         ├── lastMark         ├── ledgers         │   ├── 000003.log         │   ├── CURRENT         │   ├── IDENTITY         │   ├── LOCK         │   ├── LOG         │   ├── MANIFEST-000001         │   └── OPTIONS-000005         ├── locations         │   ├── 000003.log         │   ├── CURRENT         │   ├── IDENTITY         │   ├── LOCK         │   ├── LOG         │   ├── MANIFEST-000001         │   └── OPTIONS-000005         └── metadata-cache             ├── 000003.log             ├── CURRENT             ├── IDENTITY             ├── LOCK             ├── LOG             ├── MANIFEST-000001             └── OPTIONS-000005  ```  3. If user configured `GcEntryLogMetadataCachePath` in `bk_server.conf`  it only support one ledger directory configured for `ledgerDirectories`. Otherwise  the best practice is to keep it default.  4. The PR is better to release with #1949
2022-02-11T03:11:03Z,2980,Add rack name invalid check (#2980)  ### Motivation  When we set region or rack placement policy  but the region or rack name set to `/` or empty string  it will throw the following exception on handling bookies join.  ```  java.lang.StringIndexOutOfBoundsException: String index out of range: -1          at java.lang.String.substring(String.java:1841) ~[?:?]          at org.apache.bookkeeper.net.NetworkTopologyImpl$InnerNode.getNextAncestorName(NetworkTopologyImpl.java:144) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.net.NetworkTopologyImpl$InnerNode.add(NetworkTopologyImpl.java:180) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.net.NetworkTopologyImpl.add(NetworkTopologyImpl.java:425) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy.handleBookiesThatJoined(TopologyAwareEnsemblePlacementPolicy.java:717) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.handleBookiesThatJoined(RackawareEnsemblePlacementPolicyImpl.java:80) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicy.handleBookiesThatJoined(RackawareEnsemblePlacementPolicy.java:249) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy.onClusterChanged(TopologyAwareEnsemblePlacementPolicy.java:663) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.onClusterChanged(RackawareEnsemblePlacementPolicyImpl.java:80) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicy.onClusterChanged(RackawareEnsemblePlacementPolicy.java:92) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.BookieWatcherImpl.processWritableBookiesChanged(BookieWatcherImpl.java:197) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.BookieWatcherImpl.lambda$initialBlockingBookieRead$1(BookieWatcherImpl.java:233) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.discover.ZKRegistrationClient$WatchTask.accept(ZKRegistrationClient.java:147) [io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.discover.ZKRegistrationClient$WatchTask.accept(ZKRegistrationClient.java:70) [io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859) [?:?]          at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837) [?:?]          at java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478) [?:?]          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]          at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]          at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]          at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [io.netty-netty-common-4.1.72.Final.jar:4.1.72.Final]          at java.lang.Thread.run(Thread.java:829) [?:?]  ```  The root cause is that the node networkLocation is empty string and then use `substring(1)` operation  which will lead to `StringIndexOutOfBoundsException`    ### Modification  1. Add `n.getNetworkLocation()` is empty check on `isAncestor` method to make the exception more clear.
2022-02-11T03:10:28Z,2964,Skip update entryLogMetaMap if not modified (#2964)  ### Motivation  After we support RocksDB backend entryMetaMap  we should avoid updating the entryMetaMap if unnecessary.    In `doGcEntryLogs` method  it iterate through the entryLogMetaMap and update the meta if ledgerNotExists. We should check whether the meta has been modified in `removeIfLedgerNotExists`. If not modified  we can avoid update the  entryLogMetaMap.    ### Modification   1. Add a flag to represent whether the meta has been modified in `removeIfLedgerNotExists` method. If not  skip update the entryLogMetaMap.
2022-02-09T21:13:44Z,3024,Upgrade RocksDB  Descriptions of the changes in this PR:    Dependency change    ### Motivation    I encountered https://github.com/apache/bookkeeper/issues/3024 and noticed that newer version of RocksDB includes multiple fixes for concurrency issues with various side-effects and fixes for a few crashes.  I upgraded  ran `org.apache.bookkeeper.bookie.BookieJournalTest` test in a loop and didn't repro the crash so far.  It is hard to say 100% if it is fixed given it was not happening all the time.     ### Changes    Upgraded RocksDB  Master Issue: #3024      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3026 from dlg99/rocksdb-upgrade
2022-02-09T19:24:21Z,3030,Fix performance issue to avoid unnessary loop. (#3030)
2022-02-09T01:54:54Z,2769,Support specifying bookie http port as a command argument (#2769)  ### Motivation    I was trying to start multiple bookies locally and found it's a bit inconvenient to specify different http ports for different bookies.    ### Changes    Add a command-line argument `httpport` to the bookie command to support specifying bookie http port from the command line.
2022-02-08T13:17:10Z,3028,[tests] remove backward compatibility test against yahoo-version (apache Pulsar 1.21) (#3028)
2022-02-05T17:36:50Z,2924,Bump gradle to 7.3.3  compat java 17 (#2924)
2022-02-05T00:28:41Z,3022,Gradle 6.9.2 (#3022)  * Remove annoying println    * Update gradle to 6.9.2    This includes `Mitigations for log4j vulnerability in Gradle builds`  https://github.com/gradle/gradle/issues/19328    Full release notes https://docs.gradle.org/6.9.2/release-notes.html
2022-02-04T23:10:37Z,2997,[BACKWARD TESTS] add BookKeeper 4.14.4  ### Motivation  BK 4.14.4 has been released and we should test it in the upgrade tests    Note: for the sake of test performance  we test the upgrades only for the latest releases of each minor release     ### Changes    * Replaced BK 4.14.3 with 4.14.4    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #2997 from nicoloboschi/tests/add-bk-4144-backward-compat
2022-02-03T16:24:30Z,3021,CI workflow to check dependencies with OWASP (#3021)
2022-02-03T07:39:33Z,3018,[website] Remove Maven references and remove dead links from README (#3018)
2022-02-02T17:17:07Z,3020,Upgrade Netty to 4.1.73.Final  ### Motivation    Changelog: https://netty.io/news/2022/01/12/4-1-73-Final.html    The main reason to upgrade is because of an [intensive I/O disk scheduled task](https://github.com/netty/netty/pull/11943) introduced in 4.1.72.Final which is synchronous and can cause EventLoop to blocked very often.     ### Changes    * Upgrade Netty from 4.1.72.Final to 4.1.73.Final  * [Netty 4.1.73.Final depends on netty-tc-native 2.0.46](https://github.com/netty/netty/blob/b5219aeb4ee62f15d5dfb2b9c29d0c694aca05be/pom.xml#L545) as Netty 4.1.72.Final  so no need to upgrade      Reviewers: Andrey Yegorov <None>  This closes #3020 from nicoloboschi/upgrade-netty-4.1.73
2022-02-02T17:14:26Z,3010,Forced the same version of guava (plus upgraded it); fixed deprecations etc.  ### Motivation    Older versions of guava (w/CVEs) used in some subprojects    ### Changes    Forced the same version of guava; fixed deprecation problems (murmur3_32) and compilation problems (checkArgument).  checkArgument cannot be statically imported because there are now overrides of it; checkstyle was not very cooperative so I had to remove the import altogether.   Then updated the guava version to match one in Pulsar.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #3010 from dlg99/gradle-guava
2022-02-02T17:12:38Z,3008,Forcing the same version of netty across the projects  ### Motivation    While experimenting with OWASP dependency checker I noticed that we have 3 versions of netty mixed in: 4.1.72 (current one  expected) plus 4.1.63 and 4.1.50 (brought with ZK and some other dependencies).     ### Changes    Made gradle enforce the same version of netty in subprojects.  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #3008 from dlg99/gradle-netty
2022-01-27T15:08:59Z,3017,[build] do not run spotbugsTest by default (#3017)
2022-01-27T13:24:44Z,3002,Added OWASP dependency-check (#3002)  * Added OWASP dependency-check  * Suppress ETCD-related misdetections
2022-01-27T13:20:53Z,3013,Upgrading protobuf  CVE-2021-22569 (#3013)
2022-01-27T13:20:34Z,3014,Upgraded snakeyaml  CVE-2017-18640 (#3014)
2022-01-26T21:18:24Z,3009,[build] remove Maven POM files (#3009)  * Initial commit for dropping maven    * fix gh action    * fix typo
2022-01-26T18:48:45Z,3011,Auditor should get the LegdgerManagerFactory from the client instance (#3011)  * Auditor should get the LegdgerManagerFactory from the client instance    * Removed unused import
2022-01-19T02:54:14Z,2991,improve the throttle function (#2991)  Descriptions of the changes in this PR:      ### Motivation    improve the throttle function : old pr: #2778   1. duplicate definition for replicationRateByBytes  2.make sure this update safety when different callback run averageEntrySize updating    ### Changes    1.clean code for duplicate definition for replicationRateByBytes  2.add a lock to make sure data safety for updateAverageEntrySize
2022-01-18T18:30:17Z,2996,Add github actions timeout (#2996)
2022-01-17T17:53:00Z,2916,remove unused variable (#2916)  * remove unused variable    * check style
2022-01-17T08:52:01Z,2947,suport dynamic enable/disable health check (#2947)
2022-01-17T02:21:31Z,2981,fix region aware placement policy use disk weight not work (#2981)  ### Motivation  When we meet the following conditions:  1. configured region aware placement policy  2. enable disk weight based placement  3. fallback random selection when selecting ensemble bookies  such as:       - not enough regions       - rack number less than 2 in one region    It will throw the following exception  and create ledger failed.  ```  12:15:36.459 [bookkeeper-ml-scheduler-OrderedScheduler-1-0] ERROR org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl - [public/default/persistent/test_v2] Encountered unexpected error when creating ledger  java.lang.NullPointerException: null          at org.apache.bookkeeper.client.WeightedRandomSelectionImpl.getNextRandom(WeightedRandomSelectionImpl.java:150) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.selectRandomInternal(RackawareEnsemblePlacementPolicyImpl.java:748) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.selectRandom(RackawareEnsemblePlacementPolicyImpl.java:698) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal(RackawareEnsemblePlacementPolicyImpl.java:409) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.newEnsemble(RackawareEnsemblePlacementPolicyImpl.java:372) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicy.newEnsemble(RackawareEnsemblePlacementPolicy.java:159) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.RegionAwareEnsemblePlacementPolicy.newEnsemble(RegionAwareEnsemblePlacementPolicy.java:303) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.BookieWatcherImpl.newEnsemble(BookieWatcherImpl.java:270) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.LedgerCreateOp.initiate(LedgerCreateOp.java:161) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.client.BookKeeper.asyncCreateLedger(BookKeeper.java:860) ~[io.streamnative-bookkeeper-server-4.14.3.1.jar:4.14.3.1]          at org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl.asyncCreateLedger(ManagedLedgerImpl.java:3657) ~[io.streamnative-managed-ledger-2.8.1.30.jar:2.8.1.30]          at org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl.initializeBookKeeper(ManagedLedgerImpl.java:460) ~[io.streamnative-managed-ledger-2.8.1.30.jar:2.8.1.30]          at org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl.access$400(ManagedLedgerImpl.java:141) ~[io.streamnative-managed-ledger-2.8.1.30.jar:2.8.1.30]          at org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl$1.operationComplete(ManagedLedgerImpl.java:396) ~[io.streamnative-managed-ledger-2.8.1.30.jar:2.8.1.30]          at org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl$1.operationComplete(ManagedLedgerImpl.java:328) ~[io.streamnative-managed-ledger-2.8.1.30.jar:2.8.1.30]          at org.apache.bookkeeper.mledger.impl.MetaStoreImpl.lambda$getManagedLedgerInfo$2(MetaStoreImpl.java:97) ~[io.streamnative-managed-ledger-2.8.1.30.jar:2.8.1.30]          at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:714) [?:?]          at java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478) [?:?]          at org.apache.bookkeeper.common.util.OrderedExecutor$TimedRunnable.run(OrderedExecutor.java:203) [io.streamnative-bookkeeper-common-4.14.3.1.jar:4.14.3.1]          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) [?:?]          at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]          at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]          at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [io.netty-netty-common-4.1.72.Final.jar:4.1.72.Final]          at java.lang.Thread.run(Thread.java:834) [?:?]  ```    The root cause of this case it that in `selectRandomInternal`  the `wRselection` haven't ever update any bookie map and the filed `randomMax` and `cummulativeMap` doesn't initialized.    ### Modification  1. update the `wRSelection`'s map on `selectRandomInternal` method whenever the `wRSelection` have ever set or not.
2022-01-17T01:22:13Z,2986,Added release notes for 4.14.4 (#2986)  ### Motivation    Added release notes for 4.14.4
2022-01-13T17:54:01Z,2985,Bump gradle plugin version (#2985)
2022-01-13T04:29:27Z,2967,wait a BackOff Time when rereplicate failed (#2967)  * reduce CPU Resource:  when the other bookie restart rereplicate will run failed for BookieIdNotResolvedException   so wait a BackOff Time when rereplicate run failed    * clean error code    Co-authored-by: lushiji <lushiji@didiglobal.com>
2022-01-12T17:45:04Z,2982,if entrySize > segmentSize  will throw IndexOutOfBoundsException when put entry into ReadCache (#2982)
2022-01-12T17:44:21Z,2988,Bump log4j2 to 2.17.1 (#2988)
2022-01-12T15:47:18Z,2936,BP-46: Data integrity check for running without journal (#2936)  * Data integrity check    The integrity check is comprised two parts: a preboot check that  is triggered by either an unclean shutdown or an invalid cookie.  The preboot check marks any open ledgers as both fenced and in  limbo to prevent ledgers affected by potential data loss from  being written to. The limbo status prevents NoSuchEntry and  NoSuchLedger responses from being sent which avoid ledger  truncation from any ledger recovery operations. Finally it sets  a storage flag that a full check is required.    A new data integrity check service has been to run the full  integrity check once the bookie is running. If the service  sees that the full check storage flag is set then it runs  a full check. This involves scanning the index and comparing  it against metadata to discover missing entries. Any  missing entries are sourced from peer bookies by the  EntryCopier and written to ledger storage.    The data integrity check also has a different cookie validation  implementation.    The following configurations have been added to the conf  file:  - dataIntegrityCheckingEnabled=true/false. False by default.    This config enables or disables data integrity checking.    When set to false the legacy cookie validation is used.  - dataIntegrityStampMissingCookies=true/false. False by    default. This config allows the data integrity process    to stamp new cookies if a cookie is missing from a    directory. The full check will repair any lost data if    the directory data was lost.    * Cookie verification for data integrity checking    The algorithm differs from that of LegacyCookieValidation in the  following ways:    - A empty directory isn't considered a fatal condition. It just means    that the preboot phase of the data integrity checker must run. Once    the preboot phase runs  it should be safe to stamp the cookies    again.  - Bookies are not allowed to change their identity. If they do  manual    operator intervention is required (which is ok as it is expected    that an operator would have to intervene to change the identity in    the first place).  - A missing cookie in zookeeper is only valid  if there are no cookies    in any of the directories  as this is considered a new    boot. Otherwise  manual operator intervention is required.    * Async iterator for ledger metadata    Common code for iterating over ledger metadata. There is already  asyncProcessLedgers in LedgerManager  but that only gives the ledgerId  and the API is nasty (it even uses ZK specific callbacks).    This change adds a more modern iterator  which takes a function which  returns a CompletableFuture. The iterator has rudimentary rate  limiting  by limiting the number of ledgers which can be processed at  a time. We should add something more advanced later  which takes into  account the response time from ZK.    * Add limbo state to bookie ledger representation    Limbo state for a ledger means that we don't know whether we should  have an entry for the ledger or not  which can happen when a bookie is  started after having its disk wiped. We cannot response with a  NoSuchEntryException or NoSuchLedgerException as this tell the client  that we never had the requested entry  which may or may not be true   but if we tell it to the client  the client will act like it's true  and possible mark the end of the ledger at an incorrect point.    This change also adds locking to LedgerMetadataIndex. Previously it  relied on the good graces to the calling code to avoid modifying the  same ledger concurrently. Now that we are also using the index to  store limbo state  we can't be so blasé.    * Add entryExists call to ledgerStorage    Currently the only way to check if an entry exists in the storage is  to try to read the entry. However  this means pulling data out of the  entrylog  which it should be sufficient to check that the entry exists  in the index.    This change adds the entryExists call to ledgerStorage. This has only  been implemented for DbLedgerStorage. The implementation for the  others should be trivial  but it needs to be tested.    * Pregenerate the writeset from ledger metadata    The bookkeeper client uses DistributionSchedule (of which  RoundRobinDistributionSchedule is the only impl) to decide which  members of the ensemble it writes an entry to. This writeset is  generated for each entry. However  there is only |ensemble| possible  writesets  so we should pregenerate them for the ledger and stop  trashing memory.    WriteSets represent a set of pregenerated writesets as would be  otherwise generated from the distribution schedule. The constructor  takes a list of indices (which should be generated based on the list  of bookies in the ensemble)  which specifies the preferred order that  bookies should be tried for reads.    * Storage state flags for LedgerStorage    If a bookie crashes in the middle of a full integrity check  it needs  to know to start it again when it reboots. For this  we need to  persist some flag to persistent storage.    This change adds persistent flags to the ledger storage  interface. Multiple flags can be added in future  for example to mark  the storage as dirty on boot  so we can detect non-clean shutdown.    Flags are only implemented for DbLedgerStorage. The flags are stored  in the metadata index  with a negative ledger id as key. The key of  the storage selected for ledger 0 is used. This does mean flags will  be lost if there is a change in the storage disk configuration  but  data integrity checks will run in this case regardless.    * EUNKNOWN code    A new response code has been added to communicate that the state  of an entry is unknown due the ledger being in limbo.    * Added bookie unclean shutdown detection    Adds unclean shutdown detection. When running with journal  writes disabled and data integrity checking enabled  if  the prior shutdown was unclean (not a graceful shutdown)  then the data integrity checks are triggered. These checks  avoid additional data loss scenarios and repair any lost  data caused by the loss of unflushed data at the time  of the unclean shutdown.    The BookieServer registers start-up and shutdown with the  UncleanShutdownDetection class. This class adds a dirty  file to each ledger dir on registering start-up and clears  all these files on registering shutdown. The presence of  any of these files on boot-up indicates the prior shutdown  was unclean.    Co-authored-by: Ivan Kelly <ikelly@splunk.com>
2022-01-11T22:45:42Z,2987,Website changes for 4.14.4 release (#2987)  * Added release notes for 4.14.4    * Website changes for 4.14.4 release
2022-01-11T18:31:20Z,2973,checkAllLedgers in Auditor supports read throttle (#2973)  * support  read throttle in checkAllLedgers    * using number of entries in flight (using Semaphore  releasing when processed) instead of guessing avg sizes and rate limiting.    * using number of entries in flight (using Semaphore  releasing when processed) instead of guessing avg sizes and rate limiting.    * check style
2022-01-11T11:35:38Z,2946,bug fix for EntryLocationIndex.getLastEntryInLedger (#2946)  ### Motivation    bug fix for EntryLocationIndex.getLastEntryInLedger  when the ledger is deleted  then get last entry in this ledger  two case in method(name is EntryLocationIndex.getLastEntryInLedger)    case return -1:      1)  when the ledger is deleted return -1      2)  then the method(name is SingleDirectoryDbLedgerStorage.getLastEntry) should read entry's location index   but entryID's value is -1  the code will throw a unexcepted error( error information is "IOException: org.apache.bookkeeper.bookie.EntryLogger$EntryLookupException$MissingLogFileException: Missing entryLog 0 for ledgerId ***  entry -1 at offset 0"  if you want to get more details you can read the Issue: #2927     case throw NoEntryException:      1)  when the ledger is deleted throw NoEntryException like the method( name is  **getLastEntryInLedgerInternal** )  solving ledgerId is not found      2)  then the method(name is SingleDirectoryDbLedgerStorage.getLastEntry) just throw NoEntryException   don't need to read entry's location index and entry's log      From what has been discussed above  When ledger is deleted  it is more correct to return NoEntryException when get last entry    ### Changes    1.if the ledger has been deleted run default path for NoEntryException    Master Issue: #2927
2022-01-10T20:10:34Z,2925,Replace gradle deprecated api use runtime to runtimeClasspath (#2925)
2022-01-10T01:41:21Z,2969,check all Op requests and update log (#2969)  * check all Op requests and update log    * format old log    * format old log    Co-authored-by: lushiji <lushiji@didiglobal.com>
2022-01-10T01:37:52Z,2958,zk client config update and bugfix for ZKMetadataClientDriver (#2958)  ### Motivation    1. bug fix for error config for BoundExponentialBackoffRetryPolicy in class ZKMetadataClientDriver if set MaxRetries zero  zk client will throw ConnectionLossException when the zk has some changing for example: zk leader node changed.    2. In Bookie's ZKClient  different BoundExponentialBackoffRetryPolicy set different MaxRetries so change zkRetryBackoffMaxRetries to config in Bookie's AbstractConfiguration    ### Changes    1. update a error config for BoundExponentialBackoffRetryPolicy in class ZKMetadataClientDriver  2. change zkRetryBackoffMaxRetries to config    Master Issue: #2760
2022-01-09T19:44:28Z,2979,Updated Notice file  set 2022 (#2979)
2022-01-09T17:23:14Z,2959,fix method description (#2959)
2022-01-08T18:54:40Z,2976,[security] Bump bc fips version from 1.0.2 to 1.0.2.1 (#2976)  * Bump bc fips version from 1.0.2 to 1.0.2.1    * fix license file
2022-01-07T21:43:36Z,2972,Update gradle to 6.9.1 (#2972)  Update gradle to 6.9.1 to reduce the amount of drift from the latest  stable gradle release.
2022-01-07T21:42:50Z,2978,Backward compatibility tests: add retries (#2978)
2022-01-07T21:32:02Z,2971,Adding Prashant Kumar to committer list (#2971)  Co-authored-by: Prashant Kumar <prashantk@splunk.com>
2021-12-23T09:43:28Z,2349,fix readlogMetadata get logid is 0 bug (#2349)  ### Motivation  When i use `bookkeeper shell readlogmetadata`  to get an entrylog file's metadata info  i encountered the following exception:  ```  19:51:11.282 [main] INFO  org.apache.bookkeeper.bookie.EntryLogger - Failed to get ledgers map index from: 0.log : No file for log 0  19:51:11.284 [main] WARN  org.apache.bookkeeper.bookie.EntryLogger - Failed to get channel to scan entry log: 0.log  Exception in thread "main" com.google.common.util.concurrent.UncheckedExecutionException: No file for log 0   at org.apache.bookkeeper.tools.cli.commands.bookie.ReadLogMetadataCommand.apply(ReadLogMetadataCommand.java:106)   at org.apache.bookkeeper.bookie.BookieShell$ReadLogMetadataCmd.runCmd(BookieShell.java:988)   at org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:223)   at org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:1976)   at org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:2067)  Caused by: java.io.FileNotFoundException: No file for log 0   at org.apache.bookkeeper.bookie.EntryLogger.findFile(EntryLogger.java:960)   at org.apache.bookkeeper.bookie.EntryLogger.getChannelForLogId(EntryLogger.java:895)   at org.apache.bookkeeper.bookie.EntryLogger.scanEntryLog(EntryLogger.java:976)   at org.apache.bookkeeper.bookie.EntryLogger.extractEntryLogMetadataByScanning(EntryLogger.java:1132)   at org.apache.bookkeeper.bookie.EntryLogger.getEntryLogMetadata(EntryLogger.java:1041)   at org.apache.bookkeeper.tools.cli.commands.bookie.ReadLogMetadataCommand.printEntryLogMetadata(ReadLogMetadataCommand.java:132)   at org.apache.bookkeeper.tools.cli.commands.bookie.ReadLogMetadataCommand.readLogMetadata(ReadLogMetadataCommand.java:125)   at org.apache.bookkeeper.tools.cli.commands.bookie.ReadLogMetadataCommand.apply(ReadLogMetadataCommand.java:104)    ```    In the source code  it parse the entry log id with 10 radix  however  the entry log file name is 16 radix entry log id and parse failed. Then parsing it with entry log file name  and set the log file name into flags. When parse the flags in `ReadLogMetadataCommand` class  it first check  ```  private static final long DEFAULT_LOGID = -1L  if (flags.logId != DEFAULT_LOGID) {       logid = flags.logId;  }  ```  the default flag.logid is 0  so the `logid` will be set to 0.    ### Changes  1. using `16 radix` to parse entry log id  2. when using entry log file name to get entry log metatdata  set the flags.logid to `-1`  3. export entry log usage to the output
2021-12-23T08:04:51Z,2937,Gradle - Enable backward-compatibility tests (#2937)
2021-12-22T15:19:58Z,2952,Allow to easily override `zkServers` with `metadataServiceUri` (#2952)
2021-12-22T07:01:55Z,1949,[bookie-gc] add option to cache entry-log metadata map into rocksDB (#1949)  ### Motivation    It addresses #1938  where it provides interface for `entyLogMetadataMap` so  `entrylogMetadata` can be cached into RocksDB instead main-memory.    ### Modification  - introduced RocksDB entryLogMetadataMap to cache entry-log metadata.  - it can fallback to in-memory implementation using  `gcPersistentEntrylogMetadataMapEnabled` flag and that can be removed in future release and keep only rocksDB implementation in future.    ### Result  - It will help to avoid storing entryLogMetadata into main-memory.
2021-12-22T04:19:59Z,2951,[security] Upgrade Netty to 4.1.72 - CVE-2021-43797 (#2951)  ### Motivation    Netty versions prior to 4.1.71 are vulnerable to CVE-2021-43797  https://nvd.nist.gov/vuln/detail/CVE-2021-43797      Netty release notes:  - https://netty.io/news/2021/10/11/4-1-69-Final.html  - https://netty.io/news/2021/10/11/4-1-70-Final.html  - https://netty.io/news/2021/12/09/4-1-71-Final.html  - https://netty.io/news/2021/12/13/4-1-72-Final.html      ### Changes  - Upgraded Netty libraries to 4.1.72.Final  - Upgraded netty-tcnative-boringssl-static to 2.0.46.Final which is compatible with Netty 4.1.72.Final
2021-12-21T20:24:21Z,2949,Bump log4j2 to 2.17.0 (#2949)
2021-12-16T12:54:50Z,2923,Remove BK_CLIENT_SCOPE in ReplicationStats. It's not used anymore. (#2923)
2021-12-16T08:06:13Z,2938,upgrade log4j2 from 2.15.0 to 2.16.0 (#2938)  ### Motivation  Apache Log4j 2.16.0 was just released. It is a more complete fix for Log4Shell. See the Apache Log4j mailing list for details: https://lists.apache.org/thread/d6v4r6nosxysyq9rvnr779336yf0woz4    ### Modifications  Update log4j version from 2.15.0 to 2.16.0.    ### Verifying this change  Based on the release notes  this change should be trivial.
2021-12-15T01:13:35Z,2915,Forget to Add tlsProviderFactoryClass in the tls doc (#2915)
2021-12-14T13:54:29Z,2934,Upgrade to Grpc 1.42.1 (#2934)  * Upgrade to Grpc 1.42.1    * Fixed Guava classpath issue in tests with Gradle    * Also update jetcd to 0.5.11    * Fixed test mock initialization    * Fixed license file    * Fixed guava dependency in stream/proto    * More guava dep runtime issues    * More guava deps    * Fixed license file    * Fixed protobuf version in license file    * Added logs for etcd driver tests    * Added test assertions    * Added assert debug string when validate fails    * Added gradle info logs    * Fixed test regex    * More test regex    * More regexes    * Line too long
2021-12-13T11:55:02Z,2778,Ledger replicate supports throttle (#2778)  ### Motivation    Ledger replicating puts  heavy loads on cluster.  Now   ledger replicate only supports split fragments into small pieces.   But  throttling is not supported.    ### Changes    Add a confiuration `replicationRateByBytes `    support throttling  read rate in bytes.    Also bookkeeper shell recover command supports throttle.
2021-12-12T17:05:12Z,2935,ReplicationWorker should not try to create a ZK based LedgerManagerFactory (#2935)  * ReplicationWorker should not try to create a ZK based LedgerManagerFactory    * Get the ledger factory from the bk client instead    * Removed unused imports
2021-12-11T20:37:26Z,2920,Cleanup code in RackawareEnsemblePlacementPolicyImpl (#2920)  * Cleanup code:  1.RackawareEnsemblePlacementPolicyImpl.REPP_DNS_RESOLVER_CLASS has be existed in his parent class  2.NetUtils.logger is no use    * remove no use import    Co-authored-by: lushiji <lushiji@didiglobal.com>
2021-12-10T22:55:55Z,2933,Bump log4j2 to 2.15.0 (#2933)
2021-12-10T07:37:26Z,2914,Allow to configure bookie http host (#2914)
2021-12-07T06:23:23Z,2918,Remove legacy code to resolve class missing error (#2918)
2021-12-03T15:24:54Z,2919,Gradle compileJava: enable -Xlint options (#2919)  * Enable -Xlint:unchecked -Xlint:deprecation -Werror on all projects
2021-12-01T17:37:28Z,2888,Reorder the sequence of the bookkeeper server shutdown (#2888)  Reorders the sequence of the bookkeeper server shutdown  so that any in-progress reads or writes don't hit ledger  storage after it has been shutdown. Now the request processor  is shutdown before the bookie.    An additional check if the channel is active is performed in  the packet processor callbacks before sending response   to avoid RejectedExecutionException messages within  Netty from polluting the log.
2021-12-01T08:45:52Z,2917,Cleanup unused Journal#EMPTY_ARRAY_LIST (#2917)
2021-11-30T15:20:21Z,2862,BP-44: Ledger storage metrics enhancement (#2862)  * Ledger storage metrics enhancement    Various enhancements related to DbLedgerStorage:  - All DbLedgerStorage stats now report their ledgerDir.  - Read cache hit/misses now differentiated from write cache.  - Read/write cache hit/misses now counters  not OpStatsLoggers.    The OpStatsLoggers are relatively expensive and the counter    values are most important here.  - Stats where thread info useful are now thread-scoped. In    general the focus is on time based metrics for operations    carried out by the read/write thread pools.  - Time spent counters on sub-operations for reads (entry log     locations index  readahead).  - Flush time started moved to after lock to avoid 200% time    utilization calculations. Can reach 200% because one thread    is busy flusing and another busy waiting on the lock.  - Time spent counters on sub-operations for flushes (entry log     locations index  ledgers index).  - DbStorage thread reports time utilization.  - SyncThread reports time utilization.    Some new gauges that report configuration values which are useful  for utilization calculations in dashboards/alerts:  - Write cache max size.  - Number of ledger dirs.  - Readahead batch size.    * Fix checkstyle
2021-11-24T15:27:34Z,2901,Construct and inject bookie components (#2901)  * Construct and inject bookie components    Construct and inject metadata driver and ledger storage outside of  the BookieImpl. Also extract the cookie validation into a separate  injectable interface.    The metadata driver is a factory that creates the correct metadata  accessors based on the configuration of the bookie. This is used by  multiple components  so should be constructed before these  components and passed in as a parameter.    Previously it was constructed by the bookie  and other components  called into the bookie to get the instance  which broken encapsulation  of the bookie and let to a bunch of ugly mocking.    This change also removes a circular dependency in the construction of  the RegistrationManager. Previously it was requiring a listener on  construction  but the listener needed the bookie instance  so it all  went through a supplier. Now the listener is not needed at  construction  but rather it is registered then the bookie starts.    This change also adds an injectable interface for cookie validation. The  legacy implementation of this interface is then injected into the  BookieImpl on creation. The legacy implementation is code moved out of  the BookieImpl class itself.    Injecting ledger storage is good for encapsulation  as it stops the  ledgerstorage depending on bookie behaviour. To that end  this change  highlights a couple of circular dependencies. Notably  between the  ledger storage and each of the statemanager  checkpointer and  checkpointState. I've removed each of these from  LedgerStorage#initialize() so that is is clearer that these are  circular  and so that they can be fixed one by one.    One thing to note in this change is that the order of initialization  has changed. LedgerStorage is initialized before the cookie  check. This means that directory structure needs to be checked before  the cookie check. Previously it was done as part of the cookie  check. Ledger storage must be initialized before the cookie check  as  the cookie check needs to use ledger storage to update limbo bits.    BookieImpl is still responsible for shutting down the LedgerStorage. I  would have changed this  but it would have meant a lot of changes  as  there are good few ledger storage implementations.    * Ensure RegistrationManagers are closed    * Remove PortManager next port and args that set it    * Fix checkstyle in tests    * Add stacktrace to standalone test    * Add --debug to standalone test    * Add dynamic scaling to LocalBookKeeper    Some tests in distributedlog require the ability  to scale up and down bookies  using the  LocalBookKeeper class but doing so using  BookieServer directly. Now that components are  constructed outside of BookieServer  this scaling  had to be built into LocalBookKeeper itself so  the components could be constructed and destroyed  correctly.    * Moved state store server creation to constructor    * Remove stacktrace option from standalone test    Co-authored-by: Ivan Kelly <ikelly@splunk.com>
2021-11-23T08:23:36Z,2899,Fix the compatibility workflows (#2899)  * Fix workflow yaml for compatibility tests    * remove duplicate of com.google relocate in build.gradle
2021-11-19T10:56:55Z,2892,Reduce flakiness of TestBKDistributedLogManager (#2892)  * Got rid of OODME by ensuring the cleanup of resources.    * TestNonBlockingReadsMultiReader: load test base config    * localize max num of bookies effect to one test suite
2021-11-19T09:56:13Z,2880,Removed bookie port number from OrderedExecutor name (#2880)  Including the port number only complicates things for  admins who rely on OrderedExecutor metrics for alerts  and dashboards. Removing the port number reduces   the complexity for deployments which use various  non-standard bookie ports.
2021-11-19T09:55:40Z,2861,BP-44: OrderedExecutor metrics (#2861)  * Removed double nested TimedCallable and TimedRunnable    The TimedCallable and TimedRunnable are added by decorators  already which caused a second instance to be nested resulting  in metrics being recorded twice. This commit removes this  double nesting.    * Moved OrderedExecutor thread ordinal number from metric names to label    * OrderedExecutor thread metrics    OrderedExecutor metrics can be configured to be scoped  by thread. Enabled on the server-side BookieRequestProcessor  and left disabled in the client and all tests.
2021-11-19T09:54:19Z,2865,Journal metrics enhancement (#2865)  The following metrics changes added to provider greater  resolution to existing metrics:  - all journal metrics now include the journalIndex as a label  - journal memory max and used metrics moved into JournalStats    and scoped to the journal instance (rather than being and    aggregated metric).    Following changes to allow for time utilization/saturation  calculations:  - journal  force write and callback threads report time spent  - journal queue max size added as a gauge  - number of journal directories added as a gauge
2021-11-19T09:48:48Z,2866,Rejected requests counter metric (#2866)  Recording the number of requests that are rejected  due to overload of internal components is important  for diagnosing that a bookie is under stress.  Previously these events were only recorded as request  failures
2021-11-16T13:09:16Z,2893,Fix bookkeeper logger number not correct (#2893)  ### Changes    Fix bookkeeper logger number not correct
2021-11-14T10:11:34Z,2859,Remove unnecessary boxing unboxing (#2859)
2021-11-11T13:40:12Z,2864,Release note for 4.14.3 (#2864)  ### Motivation    Release note for 4.14.3
2021-11-11T07:31:40Z,2797,Make maxConcurrentZkRequests for gc configurable (#2797)
2021-11-11T01:15:04Z,2885,Fix typo in method name (#2885)  ---    *Motivation*    Fix typo in DBLedgerStorage. `getLedgerSorage` -> `getLedgerStorage`
2021-11-10T15:51:59Z,2858,Fix checkstyle on "microbenchmarks" (#2858)
2021-11-09T19:32:59Z,2883,fix: Stream Storage tests are flaky; statelib test times out (#2883)
2021-11-08T11:54:14Z,2881,Fix flaky AutoRecoveryMainTest (#2881)
2021-11-04T14:25:27Z,2876,There should only be a single BookieImpl constructor (#2876)  To have DI on the bookie  it's better to have a single constructor  that takes all the injected implementations. With a single  constructor  there's only one place modify in production code when we  want to inject something  rather than having the bookie need to know  how to create a "default" version (which often breaks encapsulation).    If we need convenience constructors for tests  they should live in the  tests.    Co-authored-by: Ivan Kelly <ikelly@splunk.com>
2021-11-03T16:18:28Z,2860,Return too many requests error when the write cache flush timeout occurs (#2860)  Return too many requests error when there is OperationRejectedException which occurs because of internal resource saturation
2021-11-03T00:54:34Z,2870,Add skip unrecoverable ledger option for bookkeeper shell recover command (#2870)  ### Motivation  When we use `bin/bookkeeper shell recover bookieId` command to recover specific bookie's ledgers  the recover process will exit when occurs recover ledger failed.    In our production bookkeeper cluster  we found some ledgers in Open state and has no entry.  When we call `bin/bookkeeper shell recover bookieId` command  it will traverse all the ledgers level by level. In the end  for each ledger  it will call the following code to process recover.  ```Java  Processor<Long> ledgerProcessor = new Processor<Long>() {              @Override              public void process(Long ledgerId  AsyncCallback.VoidCallback iterCallback) {                  recoverLedger(bookiesSrc  ledgerId  dryrun  skipOpenLedgers  skipUnrecoverableLedgers  iterCallback);              }  };  ```    In the `recoverLedger` method  it will call `asyncOpenLedgerNoRecovery` to open ledger and get LAC if the ledger in `OPEN` state. For the `getLAC` request  if the request ledger has no entry  it will return entry = -1 and return ERROR for this `getLAC` request.  https://github.com/apache/bookkeeper/blob/98ddf8149592572eebcfaf6bdd4916f295ffd9d7/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java#L756-L769    And for the `asyncOpenLedgerNoRecovery` callback  it will return error for this process. It will stop the recover process of the following ledgers.    In the end  the recover command runs failed  and the following ledger can't be recovered.    ### Changes  We should expose a flag for user to determine whether to move forward to recover the following ledgers when some ledgers recover failed.    So  I provide the parameter `sku` to handle this case.
2021-11-02T06:58:57Z,2855,fix: use correct lockpath  store Lock to heldLocks at ZkLedgerUnderreplicationManager#acquireUnderreplicatedLedger (#2855)
2021-10-29T16:44:25Z,2869,Update version to 4.15.0-SNAPSHOT (Gradle) (#2869)
2021-10-29T12:01:04Z,2847,Allow to run on java 17  catch InaccessibleObjectException in DirectMemoryCRC32Digest  (#2847)
2021-10-29T00:45:35Z,2849,Gradle build - some submodules are skipped  ### Motivation    In order to complete migration to Gradle we must build all the subprojects.    ### Changes    - Enabled `sh` integration tests with gradle  located in `tests/scripts/src/test/bash/gradle`  - Added these modules to the build      - `bookkeeper-http:servlet-http-server`       - `metadata-drivers:etcd`      - `tests:backward-compat:*`      - `tests:shaded:*`      - `stream:bk-grpc-name-resolver`  - DL shading process is now performed (before it didn't build any jar)  - Groovy tests (`tests:backward-compat:*`) now are triggered by the build/tests itself; with Maven  there is a "runner" project (`tests/integration-tests-base-groovy`); in Gradle is useless so it is skipped      ### Test    - Both `bin/bookkeper standalone` and `bin/bookkeper_gradle standalone` work locally  - Tests are passing locally      Master Issue: #2849      Reviewers: Henry Saputra <hsaputra@apache.org>  Prashant Kumar <None>  This closes #2850 from nicoloboschi/fix/2849/gradle and squashes the following commits:  00b49f4f5 [Nicolò Boschi] Fix common_gradle.sh regex bd739fdf5 [Nicolò Boschi] fix sh tests 43230ba2f [Nicolò Boschi] revert sh files. Avoid to modify maven files  create gradle versions to faciltate migration d1f95e40f [Nicolò Boschi] fix shaded deps bcab40ddb [Nicolò Boschi] fix build 5fd03414b [Nicolò Boschi] fix build 0082e0e1a [Nicolò Boschi] fix build 2c32ac117 [Nicolò Boschi] fixes 3bc0b2627 [Nicolò Boschi] bookkeeper-server-shaded-tests ba8913240 [Nicolò Boschi] shaded tests 6d39e33db [Nicolò Boschi] sh tests e0032bc6f [Nicolò Boschi] actually run arquillian groovy tests 08dcc3963 [Nicolò Boschi] backwards 2361f794f [Nicolò Boschi] hierarchical-ledger-manager 8388e1111 [Nicolò Boschi] current-server-old-clients 6a243441d [Nicolò Boschi] bc-non-fips 2faca014f [Nicolò Boschi] bk-grpc-name-resolver 991bc1172 [Nicolò Boschi] servlet-http-server 675ef7b81 [Nicolò Boschi] etcd b1d5e1434 [ZhangJian He] A empty implement in EtcdLedgerManagerFactory to let the project can compile (#2845) bd5c50bf3 [shustsud] Add error handling to readLedgerMetadata in over-replicated ledger GC (#2844) 746f9f6ff [Matteo Merli] Remove direct ZK access for Auditor (#2842) 411720040 [ZhangJian He] the compare should be >= instead of > (#2782) 14ef56fb7 [Prashant Kumar] BookieId can not be cast to BookieSocketAddress (#2843) e10f3fe6f [ZhangJian He] Forget to close preAllocator log on shutdown (#2819) 53954caae [shustsud] Add ensemble check to over-replicated ledger GC (#2813) 919fdd398 [Prashant Kumar] Issue:2840 Create bookie shellscript for gradle (#2841) 031d168ab [gaozhangmin] fix-npe-when-pulsar-ZkBookieRackAffinityMapping-getBookieAddressResolver (#2788) 3dd671c74 [Prashant Kumar] Migrate bookkeepr-server:test to gradle run unit tests excepts org.apache.bookkeeper.bookie. org.apache.bookkeeper.client org.apache.bookkeeper.replication org.apache.bookkeeper.tls. (#2812) f6903b8e8 [Jack Vanlightly] BP-44 USE metrics a4afaa490 [Matteo Merli] Eliminate direct ZK access in ScanAndCompareGarbageCollector (#2833) a9b576da2 [Yunze Xu] Release semaphore when addEntry accepts the same entries (#2832) 148bf2242 [Yun Tang] Ensure to release cache during KeyValueStorageRocksDB#closec (#2821) 4dc426000 [gaozhangmin] Heap memory leak problem when ledger replication failed (#2794) a522fa33b [Raúl Gracia] Issue 2815: Upgrade to log4j2 to get rid of CVE-2019-17571 (#2816) 04650521b [Nicolò Boschi] Upgrade httpclient from 4.5.5 to 4.5.13 (#2793) 594a05685 [Raúl Gracia] Issue 2795: Bookkeeper upgrade using Bookie ID may fail due to cookie mismatch (#2796) 354cf37c9 [Raúl Gracia] Upgraded dependencies with CVEs (#2792) e413c7094 [Raúl Gracia] Issue 2728: Entry Log GC may get blocked when using entryLogPerLedgerEnabled option (#2779) 883231ec8 [pradeepbn] Building bookkeeper with gradle on java11
2021-10-27T12:21:16Z,2838,Issue 2837: Remove unnecessary log4j bindings from Bookkeeper packages (#2838)
2021-10-27T07:58:12Z,2835,ISSUE #2835: BP-44 Addition of thread-scoped OpStatsLogger and Counter (#2839)  * Addition of thread-scoped stats    The Counter and OpStatsLogger have new variants that  add threadPool and thread labels to their metrics.  These new variants can be obtained via new methods  in the StatsLogger interface.
2021-10-26T01:11:59Z,2848,Remove no longer used Jenkins scripts and TravisCI references (#2848)  * Remove deprecated Jenkinsfile    * Remove Jenkins job  Travis refs  update doc/website for contributions    * readd newline
2021-10-25T07:08:29Z,2845,A empty implement in EtcdLedgerManagerFactory to let the project can compile (#2845)
2021-10-25T01:40:14Z,2844,Add error handling to readLedgerMetadata in over-replicated ledger GC (#2844)  ### Motivation  For each ledger whose metadata is not in ZK  following stack trace will be output:    ```  15:30:17.925 [GarbageCollectorThread-11-1] ERROR o.a.b.b.ScanAndCompareGarbageCollector - Exception when iterating through the ledgers to check for over-replication  java.util.concurrent.ExecutionException: org.apache.bookkeeper.client.BKException$BKNoSuchLedgerExistsException: No such ledger exists          at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)          at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)          at org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.removeOverReplicatedledgers(ScanAndCompareGarbageCollector.java:199)          at org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.gc(ScanAndCompareGarbageCollector.java:120)          at org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers(GarbageCollectorThread.java:372)          at org.apache.bookkeeper.bookie.GarbageCollectorThread.runWithFlags(GarbageCollectorThread.java:323)          at org.apache.bookkeeper.bookie.GarbageCollectorThread.safeRun(GarbageCollectorThread.java:301)          at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36)          at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)          at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)          at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)          at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)          at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)          at java.lang.Thread.run(Thread.java:748)  Caused by: org.apache.bookkeeper.client.BKException$BKNoSuchLedgerExistsException: No such ledger exists          at org.apache.bookkeeper.meta.AbstractZkLedgerManager$3.processResult(AbstractZkLedgerManager.java:397)          at org.apache.bookkeeper.zookeeper.ZooKeeperClient$19$1.processResult(ZooKeeperClient.java:994)          at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:575)          at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:508)  ```    It is noisy  makes the size of log files large and finally causes OOM during log rotation.  So we should suppress the stacktrace.    (This problem is due to [#2813](https://github.com/apache/bookkeeper/pull/2813).)    ### Changes  Add error handling to readLedgerMetadata in over-replicated ledger GC in order to suppress the stacktrace.
2021-10-23T04:21:27Z,2842,Remove direct ZK access for Auditor (#2842)  * Remove direct ZK access for Auditor    * Fixed unused imports    * Fixed checkstyle    * Fixed checkstyle in tests
2021-10-23T00:18:14Z,2782,the compare should be >= instead of > (#2782)
2021-10-22T21:58:40Z,2843,BookieId can not be cast to BookieSocketAddress (#2843)  Co-authored-by: Prashant Kumar <prashantk@splunk.com>
2021-10-22T17:18:58Z,2819,Forget to close preAllocator log on shutdown (#2819)  * Forget to close preAllocator log on shutdown    * Fix synchronize problem    * handle InterruptedException
2021-10-22T02:43:23Z,2813,Add ensemble check to over-replicated ledger GC (#2813)  ### Motivation  - Issue is as described in [PR#2797](https://github.com/apache/bookkeeper/pull/2797).  > In one day  zookeepers became high cpu usage and disk full.  > The cause of this is bookie's gc of overreplicated ledgers.  > Gc created/deleted zk nodes under /ledgers/underreplication/locks very frequently and some bookies ran gc at same time.  > As a result  zookeepers created a lot of snapshots and became disk full.    - I want to reduce the number of lock node creations and deletions in ZK.    ### Changes  - Add an ensemble check before creating the lock node.  This is to reduce the number of lock node creations and deletions in ZK.    - ~~If [PR#2797](https://github.com/apache/bookkeeper/pull/2797) was merged  this PR needs to be fixed.~~
2021-10-22T00:20:07Z,2841,Issue:2840 Create bookie shellscript for gradle (#2841)  Co-authored-by: Prashant Kumar <prashantk@splunk.com>
2021-10-21T12:48:47Z,2788,fix-npe-when-pulsar-ZkBookieRackAffinityMapping-getBookieAddressResolver (#2788)  Error log:    `16:21:20.140 [main] ERROR org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl - Failed to initialize DNS Resolver org.apache.pulsar.zookeeper.ZkBookieRackAffinityMapping  used default subnet resolver : java.lang.RuntimeException: java.lang.NullPointerException java.lang.NullPointerException`    `BookieAddressResolver` should be set before  `((Configurable) dnsResolver).setConf(conf);`      It will throw npe. when pulsar `ZkBookieRackAffinityMapping` invoke getBookieAddressResolver
2021-10-20T16:52:47Z,2812,Migrate bookkeepr-server:test to gradle run unit tests excepts org.apache.bookkeeper.bookie. org.apache.bookkeeper.client org.apache.bookkeeper.replication org.apache.bookkeeper.tls. (#2812)  Co-authored-by: Prashant Kumar <prashantk@splunk.com>
2021-10-20T16:33:39Z,2835,BP-44 USE metrics  BP-44: USE metrics. A proposal for improving BookKeeper metrics so that operators can employ the USE method for diagnosing performance issues.    Reviewers: Henry Saputra <hsaputra@apache.org>  Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2835 from Vanlightly/BP-44-use-metrics and squashes the following commits:  8d9baabf6 [Jack Vanlightly] Added link to USE method and listed each term of USE 5a0f67dcf [Jack Vanlightly] BP-44 USE metrics a9b576da2 [Yunze Xu] Release semaphore when addEntry accepts the same entries (#2832) 148bf2242 [Yun Tang] Ensure to release cache during KeyValueStorageRocksDB#closec (#2821) 4dc426000 [gaozhangmin] Heap memory leak problem when ledger replication failed (#2794) a522fa33b [Raúl Gracia] Issue 2815: Upgrade to log4j2 to get rid of CVE-2019-17571 (#2816) 04650521b [Nicolò Boschi] Upgrade httpclient from 4.5.5 to 4.5.13 (#2793) 594a05685 [Raúl Gracia] Issue 2795: Bookkeeper upgrade using Bookie ID may fail due to cookie mismatch (#2796) 354cf37c9 [Raúl Gracia] Upgraded dependencies with CVEs (#2792) e413c7094 [Raúl Gracia] Issue 2728: Entry Log GC may get blocked when using entryLogPerLedgerEnabled option (#2779) 883231ec8 [pradeepbn] Building bookkeeper with gradle on java11
2021-10-18T15:46:07Z,2833,Eliminate direct ZK access in ScanAndCompareGarbageCollector (#2833)  * Eliminate direct ZK access in ScanAndCompareGarbageCollector    * Removed unused imports    * Fixed zk ACLs    * Addressed comments    * Fixed checkstyle
2021-10-16T22:00:04Z,2832,Release semaphore when addEntry accepts the same entries (#2832)
2021-10-16T18:43:40Z,2821,Ensure to release cache during KeyValueStorageRocksDB#closec (#2821)
2021-10-15T00:23:22Z,2794,Heap memory leak problem when ledger replication failed (#2794)  ### Motivation    production environment  memory leak always happened  and there were ledger cannot be replicated successfully.        This cause by when `openLedgerNoRecovery` with `BKNotEnoughBookiesException`   the LedgerHandler won't  closed properly  caused memory leak    https://github.com/apache/bookkeeper/blob/c7236adc3cb659e65ae5ce53b7156569d7f50ebd/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java#L364-L424    ### Changes    close LedgerHandler when openComplete with exception
2021-10-15T00:16:02Z,2816,Issue 2815: Upgrade to log4j2 to get rid of CVE-2019-17571 (#2816)  ### Motivation  Upgrades to log4j2 to get rid of CVE-2019-17571.      ### Changes    The migration of log4j has been done mainly taking the official guidelines: https://logging.apache.org/log4j/2.x/manual/migration.html.  In this PR  the following changes are included:  - Replacement of `slf4j-log4j12` by `log4j-1.2-api`. Also included the `log4j-slf4j-impl` binding as well as the `log4j-core` library.  - Changes in `pom`  `gradle` and license files to reflect the above library upgrade.  - Test classes `TestOrderedExecutorDecorators`  `LoggerOutput`  `MdcContextTest`  as well as the class `FIleSystemUpgrade` made use of log4j1.2 API. This PR attempts to keep the same functionality with the new APIs.    ### Verification  - Existing tests are passing.  - log4j1.2 is removed from project: https://github.com/apache/bookkeeper/pull/2816#issuecomment-937818625  - Using `localbookie`  we observe that logs are shown correctly:  ```  2021-10-07T16:04:23 757 - INFO  - [main:GarbageCollectorThread@245] - Minor Compaction : enabled=true  threshold=0.20000000298023224  interval=3600000  2021-10-07T16:04:23 760 - INFO  - [main:GarbageCollectorThread@247] - Major Compaction : enabled=true  threshold=0.800000011920929  interval=86400000  2021-10-07T16:04:23 952 - INFO  - [main:BookieImpl@920] - Finished replaying journal in 2 ms.  2021-10-07T16:04:23 958 - INFO  - [SyncThread-7-1:SyncThread@135] - Flush ledger storage at checkpoint CheckpointList{checkpoints=[LogMark: logFileId - 0   logFileOffset - 0]}.  2021-10-07T16:04:23 980 - INFO  - [main:BookieImpl@1010] - Finished reading journal  starting bookie  2021-10-07T16:04:24 011 - INFO  - [BookieJournal-5000:Journal@919] - Starting journal on /tmp/localbookkeeper06554024139823286046test/current  2021-10-07T16:04:24 031 - INFO  - [ForceWriteThread:Journal$ForceWriteThread@478] - ForceWrite Thread started  2021-10-07T16:04:24 048 - INFO  - [BookieJournal-5000:JournalChannel@169] - Opening journal /tmp/localbookkeeper06554024139823286046test/current/17c5b11c65b.txn  ```  In addition to that  if we change the `log4j.properties` file  the changes are reflected in the console output  meaning that the legacy configuration works and changes can be correctly applied:  ```  Over Replicated Ledger Deletion : enabled=true  interval=86400000  Minor Compaction : enabled=true  threshold=0.20000000298023224  interval=3600000  Major Compaction : enabled=true  threshold=0.800000011920929  interval=86400000  Finished replaying journal in 5 ms.  Flush ledger storage at checkpoint CheckpointList{checkpoints=[LogMark: logFileId - 0   logFileOffset - 0]}.  Finished reading journal  starting bookie  Starting journal on /tmp/localbookkeeper015049859959001160726test/current  ForceWrite Thread started  Opening journal /tmp/localbookkeeper015049859959001160726test/current/17c5b143063.txn  ```  More verifications that logging works properly related to other Bookkeeper sub-components impacted may be needed.    Master Issue: #2815
2021-10-15T00:10:41Z,2793,Upgrade httpclient from 4.5.5 to 4.5.13 (#2793)  Upgrade httpclient from 4.5.5 to 4.5.13  (on gradle dependencies it was already on 4.5.13)     ### Motivation  Resolve security vulnerability  see https://github.com/advisories/GHSA-7r82-7xv7-xcpj
2021-10-13T15:52:37Z,2796,Issue 2795: Bookkeeper upgrade using Bookie ID may fail due to cookie mismatch (#2796)
2021-10-13T15:51:57Z,2792,Upgraded dependencies with CVEs (#2792)
2021-10-11T13:35:02Z,2779,Issue 2728: Entry Log GC may get blocked when using entryLogPerLedgerEnabled option (#2779)
2021-10-08T16:58:06Z,2640,Building bookkeeper with gradle on java11      Descriptions of the changes in this PR:      ### Motivation  This change enable gradle to build on java11     ### Changes  - generateJniHeaders for CpuAffinity using native gradle config rather than using javac rather than specifying it via command line in gradle  - Update gradle dependencies that helps build java11  - Update checkstyle to use native configurations from gradle     Master Issue: #2640      Reviewers: Prashant Kumar <None>  Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2817 from pradeepbn/java11 and squashes the following commits:  95c19de0d [pradeepbn] Merge pull request #1 from mauricebarnum/pr-2817-jni 049a510b9 [maurice barnum] use compileJava task to generate jni headers f690e90e4 [Pradeep Nagaraju] Replace javac to use gradle native config 9285c10a0 [Pradeep Nagaraju] Revert the changes to avoid deprecation of finalize() 22c3cfd5a [Pradeep Nagaraju] remove unwanted changes b41605931 [Pradeep Nagaraju] - Building bookkeeper with gradle on java11 - Use gradle native solution for using javac rather than specifying it via command line in gradle
2021-10-05T09:09:12Z,2798,Fix wrong time unit in the comments of MathUtils (#2798)
2021-10-05T09:07:29Z,2802,Add auditor get ledger throttle to avoid auto recovery zk session expire (#2802)
2021-10-05T08:59:28Z,2801,Issue 2787: TestPerChannelBookieClient.testEpollChannelTcpUserTimeout fails (#2801)
2021-10-05T08:58:56Z,2808,set response body for bookie  is_ready api (#2808)
2021-10-04T21:58:00Z,2811,[security] Upgrade Netty to 4.1.68.Final (#2811)
2021-09-29T07:48:52Z,2809,Migrate bookkeepr-server org.apache.bookkeeper.bookie.* tests to gradle (#2809)
2021-09-27T20:35:08Z,2783,Use try with resource to optimize code  Descriptions of the changes in this PR:    ### Motivation    Optimize code    ### Changes    1. Use try with resource to optimize close  2. remove isDebugEnabled    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #2783 from ruanwenjun/dev_wenjun_optimizeClosable
2021-09-27T20:31:57Z,2640,ISSUE #2640: BP-43 Migrate bookkeeper client tests to gradle  ### Motivation  Sometimes ago gradle was introduced to Bookkeeper    and with that build and release capabilities were built in Bookkeeper with gradle. But we never migrated bookkeeper to gradle.    Taking a first step towards gradle migration; This PR migrate all client unit tests of bookkeepr-server module to gradle   ### Changes  Replace maven test target with gradle    Master Issue: #2640    This is copy of the approved PR https://github.com/apache/bookkeeper/pull/2800    As github somehow is giving 404 with https://github.com/apache/bookkeeper/pull/2800 while merging it.  Reviewers: Boyang Jerry Peng <None>  Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  Andrey Yegorov <None>  This closes #2807 from pkumar-singh/merge_bookie_interface_injection_1  closes #2640
2021-09-24T00:47:07Z,2773,ISSUE #2773: Add db ledgers index rebuild op  ### Motivation    File corruption of the ledgers index (DbLedgerStorage) has happened in production and we currently have no good way of resolving it. There exists a locations index rebuild command  this issue describes a new command targeted at the ledgers index.    This command should only be run when either the bookie is offline  or when in readonly mode to avoid data loss. Container based environments may not be able to make the bookie go offline while also allowing the shell or bkctl to perform the operation.    The db ledgers index rebuild op does the following:    - scans all journal and entry log files to discover all ledger ids currently stored.  - builds a new index where each ledger is fenced and has an empty master key set.  - If all went well  replaces the original index with the new one    The bookie should then be restarted again (in normal mode) to load the rebuilt index.     Notable stuff:    The reason for setting fencing each ledger is that there is no safe way of setting the fenced status based on metadata while the bookie is running. If the command is run when the bookie is in readonly mode  it can still serve fence requests and any fencing that occurs while the rebuild is occurring will be lost  which breaks the data safety guarantees of the BookKeeper protocol. Given also that the bookie should at least be in readonly mode (else offline)  it is likely a member of the current ensemble of few ledgers so the impact should be minimal.  The reason for setting an empty master key is that firstly  an empty master key simply gets overwritten  so cannot cause an IllegalOpException. Secondly  if we use the password stored in metadata  then we need to be sure to use exactly the same digest algorithm as the client when it creates the ledgerKey  else the bookie will start failing all writes. This could potentially cause a problem in the future if the way the ledgerKey is generated changes (old clients would be incompatible after a ledgers index rebuild).    ### Changes    Adds two new commands. "rebuild-db-ledgers-index" rebuilds the db ledgers index by scanning the journal and entry log files. "check-db-ledgers-index" performs a read scan of the db ledgers index  this can be used when corruption is suspected.    Additionally:  - a test of the new rebuild op  - makes the Journal. listJournalIds() method public so that the command can iterate over the journal files.  - rewords some printed statements in the LocationsIndexRebuildOp to make it clear which index it is rebuilding (given that there are two indexes in the DbLedgerStorage).    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2774 from Vanlightly/rebuild-ledgers-index-op  closes #2773 and squashes the following commits:  93bcf2e78 [Jack Vanlightly] Fix checkstyle 5d679c8ef [Jack Vanlightly] Improved logging of ledgers index check and rebuild ops a9789870f [Jack Vanlightly] Add db ledgers index rebuild op
2021-09-08T22:25:33Z,2775,[STREAMSTORAGE] support an optional time to live (TTL) on a per table basis  === MOTIVIATION    Bookkeeper's state store is often used  especially through Pulsar  functions  to store processing state in a streaming application which  require persistent short term storage.  By allowing clients to set a  TTL  this data will get cleaned up by the system automatically.    === CHANGES    Specify the TTL via stream.StreamConfiguration.ttlSeconds  default is an  infinite TTL.    Note that changing the TTL on existing stream will have no effect until  the stream is next loaded by a storage container.    Update RocksDB to 6.22.1.1 to address failures when using TtlDb.    Descriptions of the changes in this PR:        ### Motivation    (Explain: why you're making that change  what is the problem you're trying to solve)    ### Changes    (Describe: what changes you have made)    Master Issue: #<master-issue-number>      Reviewers: Henry Saputra <hsaputra@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Prashant Kumar <None>  This closes #2775 from mauricebarnum/stream-table-expiration and squashes the following commits:  50471add7 [Maurice Barnum] update LICENSE files for rocksdb-6.22.1.1 caa8532d4 [Maurice Barnum] [STATESTORE] support an optional time to live (TTL) on a per table basis
2021-09-06T01:07:47Z,2768,Add metrics and internal command for QueryAutoRecoveryStatus  including underReplicatedSize metrics read/write latency  internal command for querying recovering ledgersInfo (#2768)  Motivation:    Current AutoRecovery does not have enough metrics or stat command that would help to monitor and debug. So we need to add metrics and admin stat interface to monitor the process of AutoRecovery.  For example  current recovering ledgerInfo and under replicated size  read/write latency in recovering.    Changes:    And QueryAutoRecoveryStatus command and under replicated size metric   read/write latency metric in recovering    Documentation:    Need doc.
2021-09-06T01:06:46Z,2765,Release note for 4.14.2 (#2765)  * Release note for 4.14.2  ---    *Motivation*    Rlease note update for 4.14.2
2021-08-30T12:31:16Z,2742,Abstract the FileChannel in the JournalChannel  ### Motivation    Make the FileChannel in the JournalChannel can use different implement.  We found we can use [pmemstore](https://github.com/pmem/pcj)  as the JournalChannel read from. So abstract the FileChannel in the  JournnalChannel to make us can have a different implementation.    ### Changes    - Add interface for supporting implement different FileChannel    This PR doesn't introduce any new things in the code. So make sure it can pass the CI    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Hang Chen <chenhang@apache.org>  Nicolò Boschi <boschi1997@gmail.com>  Andrey Yegorov <None>  This closes #2742 from zymap/pmem-provider
2021-08-27T18:01:10Z,2764,[STREAM STORAGE] Ensure progress while restoring from checkpoint.  ### Motivation    Sometimes the checkpoint restoration never completes. From the logs it looks  like it is stuck waiting for entries in distributedlog. But all the entries  have already been read. This looks like a race condition that causes the  reader to believe that there are more entries.    Although this can happen for any storage container  it is catastrophic when it  happens for root storage container. In that case all api calls start to fail.    ### Changes    This happens very rarely and is difficult to debug. Here we are adding a  protection around this deadlock. We will monitor the input stream to see we  are getting new data. If new data is not received within specified amount of  time  we will fail the restore process. This will fail the starting of the  storage container. After failure we will restart the storage container again.    I ran into this issue during my testing and was able confirm that we are able  to recover from this.    ```  2021-08-12T11:47:39.839+0000    org.apache.distributedlog.ReadAheadEntryReader  ReadAhead for 000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004:<default> is caught up and no log segments to read now    2021-08-12T11:47:39.834+0000    org.apache.distributedlog.logsegment.PerStreamLogSegmentCache   000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004 added log segment (logrecs_000000000000000001 : [LogSegmentId:2534  firstTxId:99  lastTxId:99  version:VERSION_V5_SEQUENCE_ID  completionTime:1628793488256  recordCount:1  regionId:0  status:0  logSegmentSequenceNumber:1  lastEntryId:0  lastSlotId:0  inprogress:false  minActiveDLSN:DLSN{logSegmentSequenceNo=1  entryId=0  slotId=0}  startSequenceId:0]) to cache.  2021-08-12T11:47:39.834+0000    org.apache.distributedlog.ReadAheadEntryReader  Starting the readahead entry reader for 000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004:<default> : number of segments: 1  top 10 segments = [[LogSegmentId:2534  firstTxId:99  lastTxId:99  version:VERSION_V5_SEQUENCE_ID  completionTime:1628793488256  recordCount:1  regionId:0  status:0  logSegmentSequenceNumber:1  lastEntryId:0  lastSlotId:0  inprogress:false  minActiveDLSN:DLSN{logSegmentSequenceNo=1  entryId=0  slotId=0}  startSequenceId:0]]  2021-08-12T11:47:39.834+0000    org.apache.distributedlog.logsegment.PerStreamLogSegmentCache   000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004 added log segment (logrecs_000000000000000001 : [LogSegmentId:2534  firstTxId:99  lastTxId:99  version:VERSION_V5_SEQUENCE_ID  completionTime:1628793488256  recordCount:1  regionId:0  status:0  logSegmentSequenceNumber:1  lastEntryId:0  lastSlotId:0  inprogress:false  minActiveDLSN:DLSN{logSegmentSequenceNo=1  entryId=0  slotId=0}  startSequenceId:0]) to cache.    2021-08-12T11:47:29.516+0000    org.apache.bookkeeper.stream.storage.impl.sc.ZkStorageContainerManager  Failed to start storage container (0)  2021-08-12T11:47:29.513+0000    org.apache.bookkeeper.stream.storage.impl.sc.StorageContainerRegistryImpl       De-registered StorageContainer ('0') when failed to start    2021-08-12T11:47:29.511+0000    org.apache.bookkeeper.statelib.impl.kv.RocksdbKVStore   Timeout waiting for checkpoint restore: Checkpoint{ID='cea4e286-5224-43ac-b6e0-7321d607f98e'  createdAt: 1628793488360 files: "CURRENT"\nfiles: "MANIFEST-000004"\nfiles: "OPTIONS-000008"\ntxid: "\\000\\000\\000\\000\\000\\000\\000\\000"\ncreated_at: 1628793488360\nfileInfos {\n  name: "CURRENT"\n  checksum: "0861415cada612ea5834d56e2cf1055d3e63979b69eb71d32ae9ae394d8306cd"\n}\nfileInfos {\n  name: "MANIFEST-000004"\n  checksum: "7e4ff7d93941139236f69906d42a9e387dec565966b0017b6e8b16650c6c8be5"\n}\nfileInfos {\n  name: "OPTIONS-000008"\n  checksum: "41c8a054439d7798f88992a7a2dcb96f189cce0ed7ddb4c71af3594edc6a7a14"\n}\n}    2021-08-12T11:47:29.489+0000    org.apache.bookkeeper.statelib.impl.rocksdb.checkpoint.CheckpointFile   Timeout waiting for copy: 000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004 last-read 0 current-read 0 runtime(ms) 300000    2021-08-12T11:42:29.467+0000    org.apache.distributedlog.ReadAheadEntryReader  Starting the readahead entry reader for 000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004:<default> : number of segments: 1  top 10 segments = [[LogSegmentId:2534  firstTxId:99  lastTxId:99  version:VERSION_V5_SEQUENCE_ID  completionTime:1628793488256  recordCount:1  regionId:0  status:0  logSegmentSequenceNumber:1  lastEntryId:0  lastSlotId:0  inprogress:false  minActiveDLSN:DLSN{logSegmentSequenceNo=1  entryId=0  slotId=0}  startSequenceId:0]]  2021-08-12T11:42:29.466+0000    org.apache.distributedlog.logsegment.PerStreamLogSegmentCache   000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004 added log segment (logrecs_000000000000000001 : [LogSegmentId:2534  firstTxId:99  lastTxId:99  version:VERSION_V5_SEQUENCE_ID  completionTime:1628793488256  recordCount:1  regionId:0  status:0  logSegmentSequenceNumber:1  lastEntryId:0  lastSlotId:0  inprogress:false  minActiveDLSN:DLSN{logSegmentSequenceNo=1  entryId=0  slotId=0}  startSequenceId:0]) to cache.  2021-08-12T11:42:29.466+0000    org.apache.distributedlog.logsegment.PerStreamLogSegmentCache   000000000000000000/000000000000000000/000000000000000000/checkpoints/cea4e286-5224-43ac-b6e0-7321d607f98e/MANIFEST-000004 added log segment (logrecs_000000000000000001 : [LogSegmentId:2534  firstTxId:99  lastTxId:99  version:VERSION_V5_SEQUENCE_ID  completionTime:1628793488256  recordCount:1  regionId:0  status:0  logSegmentSequenceNumber:1  lastEntryId:0  lastSlotId:0  inprogress:false  minActiveDLSN:DLSN{logSegmentSequenceNo=1  entryId=0  slotId=0}  startSequenceId:0]) to cache.    ```      Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2764 from sursingh/statestore-restore-timeout and squashes the following commits:  0b5cbeed4 [Surinder Singh] Change default timout to 1 Minute. 38fe39f02 [Surinder Singh] Ensure progress while restoring from checkpoint.
2021-08-27T17:11:56Z,2776,Use Pagination for GH Merge Script and remove Python2 script  We have more than 100 labels and the merge script is not able to download the list of labels  resulting in the impossibility to merge PRs.    Modifications:  - download all the pages of labels  - remove the Python2 script  Reviewers: Anup Ghatage <ghatage@apache.org>  Henry Saputra <hsaputra@apache.org>  This closes #2776 from eolivelli/fix/merge-script-pagination
2021-08-27T17:09:41Z,2640,Unit test run with gradle failing  Descriptions of the changes in this PR:        ### Motivation  Benchmark tests were failing due to     - Missing runtime test dependency of MetricsCore  - Lack of enough JVM memory.    ### Changes    - Include metricsCore as testDependency  - Increase heap size of 4 GB.      Master Issue: #2640      Reviewers: Henry Saputra <hsaputra@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2777 from pkumar-singh/build_with_gradle
2021-08-25T12:05:34Z,2482,ISSUE #2482: Added TCP_USER_TIMEOUT to Epoll channel config  ### Motivation    Added `TCP_USER_TIMEOUT` in Epoll channel config to limit the time a connection is left sending keepalives to a non-responding Bookie.    ### Changes    The original issue reported that in scenarios where Bookies may go down unexpectedly and change their IP (e.g.  Kubernetes)  the Bookkeeper client may be left for some time attempting to connect with the old IP of the restarted Bookie (see #2482 for details). To prevent this problem from happening (in Epoll channels)  we introduce the following changes:  - Epoll channels are now configured with `TCP_USER_TIMEOUT`. This parameter rules over the underlying TCP keepalive configuration (see https://datatracker.ietf.org/doc/html/rfc5482)  which may be defaulted to retry for too long depending on the environment (e.g.  10-15 minutes in our experience).  - To prevent adding more configuration parameters  the existing `clientConnectTimeoutMillis` value in `ClientConfiguration` is the one used to set `TCP_USER_TIMEOUT` due to its similarity.    ### Validation    We have reproduced the original testing environment in which this problem appears consistently:  - Cluster with 4 Bookies and 3 Kubernetes nodes  in addition to https://pravega.io which uses the Bookkeeper client.  - Deployed an application to do IO to Pravega (and therefore  to Bookkeeper).  - Periodically shut down a Kubernetes node  so Bookkeeper pods on it are restarted as well.    Considering this test procedure  without the proposed PR we consistently observe Bookkeeper clients getting stuck trying to contact with old IPs from Bookies. With this change  we confirmed via logs that the configuration change takes place and we have not been able to reproduce the original problem so far after performing multiple node reboots.    Master Issue: #2482    Reviewers: Flavio Junqueira <fpj@apache.org>  Enrico Olivelli <eolivelli@apache.org>  This closes #2761 from RaulGracia/issue-2482-close-idle-bookie-connection  closes #2482
2021-08-24T02:42:08Z,2713,Preparing for the release 4.14 (#2713)  Descriptions of the changes in this PR:    Updated py client's version to 4.14    ### Motivation    Preparing for the release  https://bookkeeper.apache.org/community/release_guide/#change-python-client-version
2021-08-18T16:40:03Z,2758,state store: getStream: log stream info  log the the tuple (namespace id  stream id  stream name) in RootStorageService getRange request.    ### Motivation    Server request metrics are labeled with the stream id  extracted from the routing header.  The stream name  (aka "table name") is not available but more useful.  Rather than making a (cacheable) RPC request to fetch  the id -> name mapping in the metrics  logging the information allows one to find the name without requiring  admin access to the state store service.      Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Henry Saputra <hsaputra@apache.org>  This closes #2758 from mauricebarnum/log-stream-name and squashes the following commits:  4ef7ac070 [Maurice Barnum] cleanup: remove extraneous "final" declarations 284b6430b [Maurice Barnum] state store: create and delete stream: log stream info
2021-08-18T02:45:45Z,2763,Site updates and release note for 4.14.2 (#2763)  ---    *Motivation*    Site updates and release note for 4.14.2
2021-08-13T08:53:23Z,2512,[SECURITY] Upgrade libthrift to 0.14.2 to address multiple CVEs  Fixes #2512    ### Motivation    See #2512     The current libthrift version 0.12.0 has multiple vulnerabilities:    - CVE-2019-0205   CVE-2019-0210   CVE-2020-13949    ### Motivation    - Upgrade libthrift version to 0.14.1 and fix compilation errors  - exclude new transitive dependencies org.apache.tomcat.embed:tomcat-embed-core and javax.annotation:javax.annotation-api  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #2695 from lhotari/lh-upgrade-libthrift
2021-08-13T03:17:34Z,2757,change log level from error to warn in getReadLacResponse (#2757)
2021-08-05T02:47:51Z,2754,Remove the `request` in the stream python client dependency (#2754)  ---    Master Issue: #2752    *Motivation*    As discussed at length in https://issues.apache.org/jira/browse/LEGAL-572  we found out that the chardet library used by requests library was a  mandatory dependency to requests and since it has LGPL licence  we  should not release any Apache Software with it.
2021-07-16T02:36:16Z,2751,[doc] Fix typo in bookkeeper config `tslProvider` (#2751)  It looks like an obvious typo that `tslProvider` should be `tlsProvider`  and the configuration item in the source code is also `tlsProvider`: https://github.com/apache/bookkeeper/blob/31e8d1b44ffafd867d0eb2774085e4b1141a7acb/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/AbstractConfiguration.java#L102
2021-07-13T22:18:10Z,2726,ISSUE #2726 Fix JAVA_HOME containing spaces  ### Motivation    Fix issue [#3726](https://github.com/apache/bookkeeper/issues/2726)      ### Changes    Add double quotation around `${JAVA}`  in `/bin/bookkeeper`.    Reviewers: Yong Zhang <zhangyong1025.zy@gmail.com>  Andrey Yegorov <None>  Sijie Guo <None>  This closes #2727 from Sunny-Island/fix-space-in-java-home  closes #2726
2021-07-09T15:43:47Z,2749,Log a warn before exiting when an illegal access not allowed is done on FileDescriptor#fd (#2749)
2021-07-05T07:22:23Z,2740,Fix Bouncy Castle fips incompatible issue (#2740)        ### Motivation    More details are provided in [Pulsar # 10937](https://github.com/apache/pulsar/issues/10937).    In #2631  the default BouncyCastle was changed from non-fips into fips version. But the default version of BouncyCastle in Pulsar is the [non-fips](https://github.com/apache/pulsar/blob/v2.8.0/pulsar-client/pom.xml#L56) one(aimed to make it compatible with the old version of Pulsar).     Bouncy Castle provides both FIPS and non-FIPS versions  but in a JVM  it can not include both of the 2 versions(non-Fips and Fips)  and we have to exclude the current version before including the other. This makes the backward compatible a little hard  and that's why Pulsar has to involve an individual module for [Bouncy Castle](https://pulsar.apache.org/docs/en/security-bouncy-castle).    And if we want to start BookKeeper with TLS enabled through Pulsar's binary  it will meet the following error:  ```  Exception in thread "main" java.lang.NoClassDefFoundError: org/bouncycastle/jcajce/provider/BouncyCastleFipsProvider   at java.base/java.lang.Class.forName0(Native Method)   at java.base/java.lang.Class.forName(Class.java:315)   at org.apache.bookkeeper.common.util.ReflectionUtils.forName(ReflectionUtils.java:49)   at org.apache.bookkeeper.tls.SecurityProviderFactoryFactory.getSecurityProviderFactory(SecurityProviderFactoryFactory.java:39)   at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:129)   at org.apache.bookkeeper.server.service.BookieService.<init>(BookieService.java:52)   at org.apache.bookkeeper.server.Main.buildBookieServer(Main.java:304)   at org.apache.bookkeeper.server.Main.doMain(Main.java:226)   at org.apache.bookkeeper.server.Main.main(Main.java:208)  Caused by: java.lang.ClassNotFoundException: org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider   at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)   at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)   at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)   ... 9 more  ```    This fix is to use the reflection to get the loaded bc version to avoid the hard-coded bc version.    ### Changes    Use the reflection to get the loaded bc version to avoid the hard-coded bc version  Add backward compatible test for bc-non-fips version
2021-06-27T21:58:39Z,2732,[Build/Security] Upgrade Freebuilder version and fix the dependency  Fixes #2732    ### Motivation    - Freebuilder 1.14.9 contains an outdate jquery js file which causes the library to be flagged as vulnerable with the highest threat level in Sonatype IQ vulnerability scanner. This also flags Bookkeeper and Pulsar as vulnerable with the highest threat level although it is a false positive and not an actual threat.    - Freebuilder shouldn't be exposed as a transitive dependency    - it's an annotation processor which should be defined      - [optional in maven](https://github.com/inferred/FreeBuilder#maven)      - [compileOnly in gradle](https://github.com/inferred/FreeBuilder#gradle)    ### Changes    - upgrade [Freebuilder](https://github.com/inferred/FreeBuilder) from 1.14.9 to 2.7.0  - make dependency optional in maven pom.xml  - use `compileOnly` instead of `implementation` in gradle build  Reviewers: Sijie Guo <None>  This closes #2734 from lhotari/lh-fix-freebuilder-dependency-issue
2021-06-24T03:49:47Z,2693,[Security] Upgrade vertx to 3.9.8  addresses CVE-2018-12541 (#2693)  Fixes #2511    ### Motivation    See #2511    The current vertx version is 3.5.3 which has a vulnerability  CVE-2018-12541 .    ### Changes    - Upgrade [vertx version to 3.9.8](https://github.com/eclipse-vertx/vert.x/releases/tag/3.9.8)  - Fix issue with deprecated API usage
2021-06-24T03:48:44Z,2708,BookKeeper-Client config to write ledger metadata with configured version (#2708)  ### Motivation    We need a way to use old bookie which doesn't support metadata-version-3 and upgrade bookkeeper-client with latest version. Right now  bk-4.12 writes ledger metadata with version-3 which will not be supported by bookie and replicator and replicator fails with below error  ```  2021-05-07.00:43:53.115 [main-EventThread] ERROR                  o.a.b.meta.AbstractZkLedgerManager   - Could not parse ledger metadata for ledger: 123456  java.io.IOException: Metadata version not compatible. Expected between 0 and 2  but got 3          at org.apache.bookkeeper.client.LedgerMetadata.parseConfig(LedgerMetadata.java:465)          at org.apache.bookkeeper.meta.AbstractZkLedgerManager$3.processResult(AbstractZkLedgerManager.java:414)          at org.apache.bookkeeper.zookeeper.ZooKeeperClient$19$1.processResult(ZooKeeperClient.java:994)          at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:572)          at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:508)    ```  So  until one upgrades the bookie version  allow bk-client to use the appropriate metadata version.
2021-06-24T03:48:03Z,2720,Add the `tlsCertificatePath` to the configuration file (#2720)  ---    Fixes #2699    *Motivation*    Add missing configuration `tlsCertificatePath` in the configuration file  and website description
2021-06-24T03:47:02Z,2735,[Security] Exclude grpc-okhttp dependency (#2735)  Fixes #2733    ### Motivation    The okhttp dependency version 2.7.4 is old and vulnerable. This dependency isn't needed and it causes Bookkeeper to be flagged for security vulnerabilities.    ### Changes    - exclude grpc-okhttp dependency which pulls in okhttp 2.7.4   - update license files
2021-06-24T03:46:09Z,2743,Print usage in autorecovery command if needed (#2743)  ### Motivation    I was trying to read the code to see how auto-recovery service works  just noticed the method `printUsage` was never called and the program doesn't print the usage even when '-h' is specified.    ### Changes    Print the usage of auto-recovery if '-h' is specified or additional unexpected arguments are provided when running the auto-recovery command.
2021-06-24T03:44:58Z,2744,Fix the typo in Auditor.java (#2744)  ### Motivation    'conif' seems to be a typo of `conf`.    ### Changes    Fixed the typo.
2021-06-17T01:18:24Z,2739,[STATESTORE] Cleanup local storage for statestore storage container  ### Motivation    While restoring a storage container  we fetch the checkpoint from the  checkpoint store. Currently this checkpoint will never get cleaned up. Every  time we restore the storage container on pod  a new checkpoint will get added.  Over period of time the disk usage keeps going up and eventually we have to  manually delete these stale checkpoints.    ### Changes    With this change  we will cleanup the local storage for a storage container  whenever we close the KVStore. This will ensure that stale checkpoints are not  left behind. It is possible that POD may restart before the cleanup can be  done. To avoid these  we will also ensure that local storage for the storage  container is cleaned up before we restore the storage container.    Reviewers: Henry Saputra <hsaputra@apache.org>  This closes #2739 from sursingh/storage-cleanup and squashes the following commits:  6bd477691 [Surinder Singh] Clean local storage for storage containers c74683695 [Surinder Singh] Add test case for local storage cleanup
2021-05-31T23:50:06Z,2724,Site updates and release notes for 4.14.1 (#2724)  * Site updates and release notes for 4.14.1    * Site updates
2021-05-27T23:29:36Z,2723,Refactor book keeper cluster test case  ### Motivation  BookKeeperClusterTestCase has historically exposed its members to all  subclasses  which would then manipulate them in many ways. There was  an array of objects for configurations  bookieServers  autorecovery   which implicit linking between the objects based on maps and indices.  Individual subclasses manipulated these arrays.    This makes it hard to add any dependency injection on the objects  managed by BookKeeperClusterTestCase as the objects. To add DI  we  need each object to have a bunch of other objects associated with  it. For example  for each Bookie  we need to create the  Journal. Maintaining these in separate arrays will lead to fragile  tests.    This change encapsulates all the testing objects in a per bookie  object  and only allows manipulation through methods. This will allow  us to group the objects needed for DI clearly.    Disable testFollowBookieAddressChangeTrckingDisabled  Reviewers: Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2723 from pkumar-singh/refactor_BookKeeperClusterTestCase and squashes the following commits:  47fb8121f [Prashant] Addressed code review comments 7f410ce96 [Ivan Kelly] Encapulate members of BookKeeperClusterTestCase c1847af5a [Prashant Kumar] Turn Bookie into an interface 9417b68ca [Andrey Yegorov] site update for release 4.14  this time actually updating the latest version in _config.yml (#2722)
2021-05-25T21:56:31Z,2717,Turn Bookie into an interface    ### Motivation    Bookie was previously a concrete class that was used and abused all  over the place  especially in tests. A classic example of the God  object antipattern. The extensive use in tests  resulted in test cases  which spin up many instances of the whole system  which is very heavy  and very slow  especially when trying to unit tests a particular  feature.    This change is the first step to resolving this situation. Bookie is  now an interface  implemented by BookieImpl. Subsequent changes will  break out parts of the interface  cleanup calls and add dependency  injection.  Reviewers: Matteo Merli <mmerli@apache.org>  Andrey Yegorov  Henry Saputra <hsaputra@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2717 from pkumar-singh/merge_back_to_oss and squashes the following commits:  3edee4958 [Prashant] Replace SettableFuture  with CompletableFuture db690262a [Ivan Kelly] Turn Bookie into an interface
2021-05-25T18:04:23Z,2722,site update for release 4.14  this time actually updating the latest version in _config.yml (#2722)  Finishing up the release
2021-05-25T16:59:55Z,2712,Docs and release notes update for BK 4.14.0 (#2712)  * Docs and relese notes update for BK 4.1.4.0    * Updated with recently merged PRs
2021-05-25T16:56:16Z,2719,Update bc tests to include versions up to 4.14.0  ### Motivation    4.14.0 release     ### Changes    followed https://bookkeeper.apache.org/community/release_guide/#verify-docker-image and used https://github.com/apache/bookkeeper/pull/2171 as example      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2719 from dlg99/bctests-4_14
2021-05-24T22:46:29Z,2718,fix prometheus metric provider bug and add test to cover label scope …  ### Motivation  After add label for prometheus metric by https://github.com/apache/bookkeeper/pull/2650  it will cause prometheus metric format check failed when no label specified for a statsLogger. The metric list as follow.  ```  replication_bookkeeper_client_bookkeeper_client_bookie_watcher_NEW_ENSEMBLE_TIME{success="false" quantile="0.9999"  } NaN  ```    ### Modification  1. add label empty check for `PrometheusTextFormatUtil`  2. add label scope check test cover  3. add prometheus metric regex pattern check in test case  Reviewers: lipenghui <penghui@apache.org>  Andrey Yegorov <None>  Matteo Merli <mmerli@apache.org>  Jia Zhai <zhaijia@apache.org>  Addison Higham <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2718 from hangc0276/chenhang/fix_bookeeper_metric_bug and squashes the following commits:  8590704db [hangc0276] format code a6942d49f [chenhang] fix prometheus metric provider bug and add test to cover label scope and metric format check bb8b1e0fe [Andrey Yegorov] Include gradle files into the source artifact for releases  exclude site2/** 732b6cf2a [Andrey Yegorov] [maven-release-plugin] prepare for next development iteration b0d9f1058 [Andrey Yegorov] [maven-release-plugin] prepare branch branch-4.14 8dc108b86 [Matteo Merli] y 73e22cacf [Don Inghram] ISSUE2620: RocksDB log path configurable 034ef8566 [Shoothzj] Fix logger member not correct; (#2605) b824a6029 [hangc0276] fix always select the same region set bug for RegionAwareEnsemblePlacementPolicy (#2658) 683ad4592 [Matteo Merli] Allow to attach labels to metrics (#2650) 809109663 [Matteo Merli] Allow to bypass journal for writes (#2401) 63867a99b [Matteo Merli] Impose a memory limit on the bookie journal (#2710) 87579b0a9 [Matteo Merli] Read entry error should print lastAddConfirmed in the log (#2707)
2021-05-14T06:22:55Z,2714,Include gradle files into the source artifact for releases  exclude site2/**  ### Motivation    gradle files weren't included into the source artifact of the release  site2/ was included.    ### Changes    Added gradle into the include pattern.  Added site2 into the exclude patterns.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2714 from dlg99/gradle-release
2021-05-10T01:33:07Z,,[maven-release-plugin] prepare for next development iteration
2021-05-10T01:33:01Z,,[maven-release-plugin] prepare branch branch-4.14
2021-05-09T21:01:13Z,2649,y  ### Motivation    In case of corrupted entry log  this exception can show up during the compaction phase:     ```  18:53:37.224 [GarbageCollectorThread-7-1] ERROR org.apache.bookkeeper.bookie.GarbageCollectorThread - Failed to compact entry log 16 due to unexpected error  java.lang.IndexOutOfBoundsException: index: 8  length: 8 (expected: range(0  0))   at io.netty.buffer.AbstractByteBuf.checkRangeBounds(AbstractByteBuf.java:1425) ~[netty-buffer-4.1.51.Final.jar:4.1.51.Final]   at io.netty.buffer.AbstractByteBuf.checkIndex0(AbstractByteBuf.java:1432) ~[netty-buffer-4.1.51.Final.jar:4.1.51.Final]   at io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1419) ~[netty-buffer-4.1.51.Final.jar:4.1.51.Final]   at io.netty.buffer.UnpooledUnsafeDirectByteBuf.getLong(UnpooledUnsafeDirectByteBuf.java:144) ~[netty-buffer-4.1.51.Final.jar:4.1.51.Final]   at org.apache.bookkeeper.bookie.EntryLogCompactor$CompactionScannerFactory$1.process(EntryLogCompactor.java:103) ~[bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.bookie.EntryLogger.scanEntryLog(EntryLogger.java:1011) ~[bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.bookie.EntryLogCompactor.compact(EntryLogCompactor.java:64) ~[bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.bookie.GarbageCollectorThread.compactEntryLog(GarbageCollectorThread.java:528) [bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.bookie.GarbageCollectorThread.doCompactEntryLogs(GarbageCollectorThread.java:462) [bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.bookie.GarbageCollectorThread.runWithFlags(GarbageCollectorThread.java:367) [bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.bookie.GarbageCollectorThread.safeRun(GarbageCollectorThread.java:316) [bookkeeper-server-4.11.0.SPLK.8715995.jar:?]   at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.11.0.SPLK.8715995.jar:?]   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_232]   at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_232]   at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_232]   at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_232]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_232]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_232]   at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.51.Final.jar:4.1.51.Final]   at java.lang.Thread.run(Thread.java:748) [?:1.8.0_232]  ```  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2649 from merlimat/compaction-exception and squashes the following commits:  1360e2388 [Matteo Merli] Make sure to log warning when entrySize is 0 42e0790d8 [Matteo Merli] Exception in BK GC with corrupted data files
2021-05-09T20:58:42Z,2698,ISSUE2620: RocksDB log path configurable  RocksDB configuration now allows a new value "dbStorage_rocksDB_logPath"  which allows the log files to be separated from the data storage. When  not set  Bookkeeper has no change in behavior.    Descriptions of the changes in this PR:        ### Motivation    (Explain: why you're making that change  what is the problem you're trying to solve)    ### Changes    (Describe: what changes you have made)    Master Issue: #<master-issue-number>      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  lipenghui <penghui@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2698 from dinghram/RocksDBLogPath and squashes the following commits:  bd8e212e9 [Don Inghram] Issue2620-RocksDB log path configurable: conf eeba05291 [Don Inghram] Issue2620-RocksDB log path configurable
2021-05-08T18:35:31Z,2605,Fix logger member not correct; (#2605)  Fix java doc problem    Co-authored-by: shoothzj <shooothzj@gmail.com>
2021-05-08T18:22:10Z,2658,fix always select the same region set bug for RegionAwareEnsemblePlacementPolicy (#2658)  * fix always select the same region bug for RegionAwareEnsemblePlacementPolicy    * format code    * add test for regionAwareEnsemblePlacementPolicy    * update code    * format code
2021-05-08T13:28:05Z,2650,Allow to attach labels to metrics (#2650)  * Allow to attach labels to metrics    * Removed testCache since it's now invalid    * Fixed checkstyle    * Unused imports    * Fixed test
2021-05-08T13:27:35Z,2401,Allow to bypass journal for writes (#2401)  * Allow to bypass journal for writes    * Added unit test to validate the new config    * Fixed test variable names
2021-05-08T06:07:52Z,2710,Impose a memory limit on the bookie journal (#2710)  * Impose a memory limit on the bookie journal    * Fixed checkstyle issues    * Fixed more checkstyle issues    * Added metrics for journal memory    * More checkstyle..    * Unused import
2021-05-08T00:54:56Z,2707,Read entry error should print lastAddConfirmed in the log (#2707)  * Read entry error should print lastAddConfirmed in the log    * Fixed test expectation of the log message
2021-05-07T16:38:50Z,2696,[SECURITY] Upgrade Netty to 4.1.63.Final  ### Motivation    - addresses several CVEs    ### Changes    - Upgrade Netty to 4.1.63.Final  - Upgrade netty-tcnative-boringssl-static to 2.0.36.Final  - adapt API deprecation in PooledByteBufAllocator API  Reviewers: Lari Hotari <None>  Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #2696 from lhotari/lh-upgrade-Netty-4.1.63.Final and squashes the following commits:  6003a374d [Lari Hotari] Experiment: exclude TLSv1.3 from testing fcbd707a6 [Lari Hotari] Handle TLS connection problems when TLSv1.3 is used 86788ef35 [Lari Hotari] [Security] Upgrade Netty to 4.1.63.Final b606da7bc [Lari Hotari] Upgrade Lombok to 1.18.20 0f22d238c [Andrey Yegorov] fix: Bookkeeper client throttling logic is based upon entryId instead of ledgerId e5e76667b [YANGLiiN] [DOC] fix the no striping occurs condition to Qw=E
2021-05-04T06:23:34Z,2697,Upgrade Lombok to 1.18.20  ### Motivation    - required for compilation on JDK 16  - see https://projectlombok.org/changelog    ### Changes    Upgrade Lombok version to `1.18.20` in `pom.xml` and `dependencies.gradle`.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Henry Saputra <hsaputra@apache.org>  This closes #2697 from lhotari/lh-upgrade-lombok_1.18.20
2021-05-03T18:44:55Z,2660,fix: Bookkeeper client throttling logic is based upon entryId instead of ledgerId  Descriptions of the changes in this PR:    Fixes: #2660     ### Changes    isWriteSetWritable() to use ledgerId for the client selection    Master Issue: #2660   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Ivan Kelly <ivank@apache.org>  This closes #2664 from dlg99/fix/2660
2021-05-03T18:43:05Z,2630,[DOC] fix the no striping occurs condition to Qw=E  Descriptions of the changes in this PR:        ### Motivation    the no striping occurs condition should Qw=E  not the Qw=Qa    ### Changes    update the condition to Qw=E      Reviewers: Andrey Yegorov <None>  This closes #2630 from yangl/protocol-doc-fix
2021-05-03T06:36:20Z,2694,[SECURITY] Remove jackson-mapper-asl dependency to resolve multiple CVEs  ### Motivation    - jackson-mapper-asl is not required since Zookeeper 3.6.x+ no more depends on jackson-mapper-asl library (ZOOKEEPER-3051)    ### Modifications    Remove jackson-mapper-asl dependency  Reviewers: Matteo Merli <mmerli@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2694 from lhotari/lh-remove-jackson-mapper-asl
2021-04-26T01:16:01Z,2701,Fixed unnecessary copy to heap  see https://github.com/apache/pulsar/pull/10330 (#2701)  Descriptions of the changes in this PR:    Handling CompositeByteBuf in a way that avoids unnecessary data copy.    ### Motivation    https://github.com/apache/pulsar/pull/10330    https://github.com/apache/pulsar/pull/10330#issuecomment-825619753    ### Changes    Handling CompositeByteBuf in a way that avoids unnecessary data copy.
2021-04-21T22:38:29Z,2690,[Build] Run PR builds for merge commit (#2690)  - instead of running the build for PR branch HEAD commit     run the commit for GitHub provided merge_commit_sha
2021-04-20T22:54:13Z,2640,ISSUE #2640: BP-43 Some clean up and making sure that all bookkeepr-se…  ### Motivation  Consolidate and ensure that at last all bookkeeper server test pass with gradle.   That essentially entails cleaning up direct dependencies.    ### Changes     % ./gradlew cleanTest bookkeeper-server:test    0  <============-> 99% EXECUTING [2m 54s]  <============-> 99% EXECUTING [9m 52s]  <============-> 99% EXECUTING [36m 52s]  <============-> 99% EXECUTING [54m 24s]  <============-> 99% EXECUTING [54m 25s]ompleted  16 skipped  <============-> 99% EXECUTING [1h 3m 16s]  <============-> 99% EXECUTING [1h 6m 39s]  <============-> 99% EXECUTING [1h 14m 37s]  <============-> 99% EXECUTING [1h 14m 38s]leted  19 skipped  <============-> 99% EXECUTING [1h 20m 59s]  <============-> 99% EXECUTING [1h 21m 0s]    I interrupted the tests after 777 tests after rebasing. But all the tests have passed before with same set of changes.    Master Issue: #2640    Reviewers: Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2692 from pkumar-singh/build_tests  closes #2640
2021-04-19T16:42:22Z,2686,Rocksdb tombstones  ### Motivation    After deleting many ledgers  seeking to the end of the RocksDB metadata can take a long time and trigger timeouts upstream. Address this by improving the seek logic as well as compacting out tombstones in situations where we've just deleted many entries.  This affects the entry location index and the ledger metadata index.    Reviewers: Andrey Yegorov  Prashant Kumar  This closes #2686 from mauricebarnum/rocksdb-tombstones and squashes the following commits:  c02996853 [Maurice Barnum] Partially compact RocksDB after removing deleted ledgers 0be68a1d0 [Maurice Barnum] KeyValueStorageRocksDB bounded key iterator: use RocksDB upper bound 0c5ef8f53 [Maurice Barnum] KeyValueStorageRocksDB.getFloor() - reimplement to avoid two seeks 114cc73b4 [Maurice Barnum] update rocksdb to 6.16.4 f489a056d [Surinder Singh] Fix test cases using gradle build (#2689) 9256dbab3 [Lari Hotari] Add current ip address  long hostname and short hostname to /etc/hosts (#2688) f1a1f1219 [Surinder Singh] staging and setting up vote for release candidates (#2681) 2dd4afecd [Prashant Kumar] ISSUE-2640: BP-43: Gradle integration with RAT plugin (#2683) 79768fee1 [Jack Vanlightly] ISSUE #2615: Fix for invalid ensemble issue during ledger recovery 646e59089 [Prashant Kumar] ISSUE #2640: BP-43 integrate gradle javadoc plugin d70153f76 [hangc0276] Update documentation with default value for openLedgerRereplicationGracePeriod config option
2021-04-16T20:45:31Z,2640,ISSUE #2640: BP-43 Integrate spotbugs plugin with gradle  ### Motivation    **Migrate bookkeeper to gradle spotbug plugin.**  spotbugs is gradle as well as maven plugin which checks for obvious bugs in source code.  **How to run**    `./gradlew spotbugsMain `    ### Changes    - Integrate gradle build with spotbugs plugin  - Second commit is for fixing issues reported by spotbugs plugin     ### Test  Just to validate it's working.   I introduced following bug.   ```  public void test() {  +  +        String[] field = {"a"  "b"  "c"  "s"  "e"};  +  +        //concatenates strings using + in a loop  +        String ip = "127.0.0.1";  +        String s = "";  +        for (int i = 0; i < field.length; ++i) {  +            s = s + field[i];  +        }  +  +        System.out.println(ip);  +  +    }  ```    spotbugs plugin reported following violation.  ```  <BugInstance type="SBSC_USE_STRINGBUFFER_CONCATENATION" priority="2" rank="18" abbrev="SBSC" category="PERFORMANCE" instanceHash="2aa8e4ebcc4cd86190fe3e7bd8a4913c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">      <ShortMessage>Method concatenates strings using + in a loop</ShortMessage>      <LongMessage>org.apache.bookkeeper.meta.LongZkLedgerIdGenerator.test() concatenates strings using + in a loop</LongMessage>      <Class classname="org.apache.bookkeeper.meta.LongZkLedgerIdGenerator" primary="true">        <SourceLine classname="org.apache.bookkeeper.meta.LongZkLedgerIdGenerator" start="58" end="350" sourcefile="LongZkLedgerIdGenerator.java" sourcepath="org/apache/bookkeeper/meta/LongZkLedgerIdGenerator.java" relSourcepath="java/org/apache/bookkeeper/meta/LongZkLedgerIdGenerator.java">          <Message>At LongZkLedgerIdGenerator.java:[lines 58-350]</Message>        </SourceLine>        <Message>In class org.apache.bookkeeper.meta.LongZkLedgerIdGenerator</Message>      </Class>  ```  Master Issue: #2640      Reviewers: Henry Saputra <hsaputra@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2682 from pkumar-singh/merge_internal_gradle_spotbugs  closes #2640 and squashes the following commits:  588373241 [Prashant] Fix for gradle spotbug plugin found violation 2bc79b067 [Prashant] ISSUE-2640: BP-43 Gradle migration integrating with spotbug gradle plugin f1a1f1219 [Surinder Singh] staging and setting up vote for release candidates (#2681) 2dd4afecd [Prashant Kumar] ISSUE-2640: BP-43: Gradle integration with RAT plugin (#2683) 79768fee1 [Jack Vanlightly] ISSUE #2615: Fix for invalid ensemble issue during ledger recovery 646e59089 [Prashant Kumar] ISSUE #2640: BP-43 integrate gradle javadoc plugin d70153f76 [hangc0276] Update documentation with default value for openLedgerRereplicationGracePeriod config option
2021-04-15T21:08:52Z,2689,Fix test cases using gradle build (#2689)  Co-authored-by: Surinder Singh <surinders@splunk.com>
2021-04-14T16:49:35Z,2688,Add current ip address  long hostname and short hostname to /etc/hosts (#2688)  - Fixes reverse DNS lookup for current hostname
2021-04-12T19:42:16Z,2681,staging and setting up vote for release candidates (#2681)  This change automates staging of release candidate. The artifacts are staged  to SVN and nexus repositories.    This change uses  https://github.com/vlsi/vlsi-release-plugins/blob/master/plugins/stage-vote-release-plugin/README.md.    Preparing release candidate:    1. Checkout release branch: `git checkout -b branch-4.14 origin/branch-4.14`  2. Update the version in version.gradle and commit the change  3. Create and stage release candidate. This will build and upload all release  artifacts to staging areas under nexus and SVN repos.  A template for Vote  email will also be generated. Link to the release notes will need to be  updated in the email template. A release candidate tag  will also be added.  ```  ./gradlew prepareVote -Pasf -Prc=1  ```  4. If needed additional release candidates can be create by running the above  command with appropriate `rc` value  5. Once the voting is done  the release can be published using:  ```  ./gradlew publishDist -Pasf -Prc=1  ```  6. Remove stale artifacts:  ```  ./gradlew removeStaleArtifacts -Pasf  ```    Configuration:    * Following configuration can be added to $HOME/.gradle/gradle.properties.  ```  signing.gnupg.keyName=...  asfCommitterId=...  asfNexusUsername=...  asfNexusPassword=...  asfGitSourceUsername=...  asfGitSourcePassword=...  asfGitSitePreviewUsername=...  asfGitSitePreviewPassword=...  asfSvnUsername=...  asfSvnPassword=...  ```  * The above config can also be passed from commandline `-P<property>=<value>`    Testing:    The change was testing useing a local setup based on  https://github.com/vlsi/asflike-release-environment    Co-authored-by: Surinder Singh <surinders@splunk.com>  Co-authored-by: Matteo Merli <mmerli@apache.org>
2021-04-12T18:36:54Z,2683,ISSUE-2640: BP-43: Gradle integration with RAT plugin (#2683)  Co-authored-by: Prashant <prashantk@splunk.com>  Co-authored-by: Matteo Merli <mmerli@apache.org>
2021-04-12T18:06:52Z,2615,ISSUE #2615: Fix for invalid ensemble issue during ledger recovery  Ensures that only entries of the current ensemble are included in the ledger recovery process  thus avoiding a ledger recovery failure scenario where it tries to append an ensemble with a lower first entry id than the prior ensemble.    Descriptions of the changes in this PR:    This PR includes a small change in the LedgerRecoveryOp that avoids a scenario where ledger recovery tries to create an invalid ensemble thereby failing. This could cause data unavailability for as long as trigger conditions last.    During ledger recovery  only entries of the current ensemble can be included in the read and write back phase. Prior ensembles  if any  are immutable. But it is possible  in a multi-ensemble ledger  for the current ensemble to return an LAC of -1. This then causes the recovery to read entries from prior ensembles and write them back to the current ensemble. This does not cause any data loss  but it is wasteful of both space and time. The main issue is that if an ensemble change occurs when writing back entries  it will try and create a new ensemble with first entry id of 0. This causes an IllegalStateException as there is a check before the CAS metadata op to ensure that the ensemble does not have an entry id lower than an existing ensemble.    If a bookie of the current ensemble were to be down  then the ledger would be unrecoverable until it became available again.     The solution is that the lowest safe LAC for recovery is: first entry id of current ensemble - 1.    ### Changes    Change to LedgerRecoveryOp as described above.  New unit test in LedgerRecoveryTest2.    Master Issue: #2615    Reviewers: Andrey Yegorov  Enrico Olivelli <eolivelli@gmail.com>  Flavio Junqueira  This closes #2654 from Vanlightly/fix-invalid-ensemble-change  closes #2615
2021-04-12T16:08:42Z,2640,ISSUE #2640: BP-43 integrate gradle javadoc plugin  ### Motivation    **Migrate bookkeeper to gradle javadoc plugin.**    **How to run**    `./gradlew javadoc`    ### Changes  - Integrate gradle build with javadoc plugin  **Few points to note**    - This integration is same/similar to the maven javadoc plugin integration.    Master Issue: #2640    Reviewers: Henry Saputra <hsaputra@apache.org>  This closes #2684 from pkumar-singh/merge_internal_gradle_javadoc  closes #2640
2021-04-10T14:07:19Z,2644,Update documentation with default value for openLedgerRereplicationGracePeriod config option  ### Motivation  `openLedgerRereplicationGracePeriod` default value doc doesn't consistent with the code    ### Changes  1. update default value doc for bk_server.conf  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Michael Marshall <None>  lipenghui <penghui@apache.org>  This closes #2644 from hangc0276/chenhang/fix_openLedgerRereplicationGracePeriod_default_value_doc
2021-04-09T17:30:20Z,2640,ISSUE #2640: BP-43 create shaded jar for bookkeeper-server and distrib…  …utedlog-core    Descriptions of the changes in this PR:      ### Motivation  **Gradle migration**   With maven shaded Jar was created for bookkeeper-sever as well as distributedlog-core.  Though shaded jar was not being used by anybody.  There has been some difference in layout of shaded jar produced by maven and gradles.    Maven produced shaded jar just shades bookkeeper classes and leaves transitive dependency unshaded and as part of dependency in POM file. This behavior is not supported in gradle shadow plugin. Therefore gradle produced shaded jar shades not only bookkeer-server but also its transitive and direct dependencies and leaving nothing in pom file as dependency.     ### Changes  Create gradle build for shading bookkeeper-sever and distributedlog-core    Master Issue: #2640     Reviewers: Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2678 from pkumar-singh/merge_internal_gradle_6  closes #2640 and squashes the following commits:  3f9cb7e9f [Matteo Merli] Merge branch 'master' into merge_internal_gradle_6 acbc20dac [Prashant Kumar] ISSUE #2640: BP-43 Integrate checkstyle with gradle f46021c4c [Prashant] ISSUE-2640: BP-43 create shaded jar for bookkeeper-server and distributedlog-core 59786c97f [Prashant Kumar] ISSUE #2640: BP-43: Exclude smoke tests for now can be enabled when we move to gradle.
2021-04-08T23:42:21Z,2640,ISSUE #2640: BP-43 Integrate checkstyle with gradle  ### Motivation    **Migrate bookkeeper to gradle.**  Checkstyle is gradle as well as maven plugin which checks for code formatting spacing etc.   **How to run**    `./gradlew checkstyleMain  `    ### Changes  Integrate gradle build with checkstyle plugin      Master Issue: #2640      Reviewers: Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2680 from pkumar-singh/merge_internal_gradle_checkstyle  closes #2640
2021-04-08T22:12:44Z,2640,ISSUE #2640: BP-43: Exclude smoke tests for now can be enabled when we move to gradle.  Descriptions of the changes in this PR:    ### Motivation    **Migrate bookkeeper to gradle.**  Current smoke tests in OSS do not run and do not do anything useful.   They are quite old and need to move to testcontainer and away from Arquallian.   That requires code change. Therefore punting running these tests with gradle too    until everything moved to gradle.   ### Changes    Exclude Smoke tests from run.    Master Issue: #2640      Reviewers: Andrey Yegorov  Matteo Merli <mmerli@apache.org>  This closes #2671 from pkumar-singh/merge_internal_gradle_4  closes #2640
2021-04-07T21:24:41Z,2673,ISSUE-2640: BP-43 Build microbenchmark with gradle and run microbenchmark (#2673)  Co-authored-by: Prashant <prashantk@splunk.com>
2021-04-06T04:02:57Z,2675,Fix logic in Bookkeeper forceAllowCompaction to run only when force is set or configured interval (#2675)  Without the attached fix  when forceAllowCompaction and isForceGCAllowWhenNoSpace are set. The majorCompaction runs with every garbage collection. This results due to the fact that enableMajorCompaction which takes a negative interval into account to disable compaction always returns true since the difference in time will always be larger than -1. The time check must be "and" with the enableMajorCompaciton for the time check to be valid. And the force flag may also be valid when the isForce(Major/Minor)CompactionAllow is set to true which will validate the threshold in the force case is set.
2021-04-06T04:02:43Z,2670,Issue 2638: Compaction Limits (#2670)  This resolves issue 2638  by allowing a customer to set a limit on the duration of the major and minor compaction runs. This allows the customer to balance the needs for compaction against the need for normal garbage collection. Unbounded execution of compaction can starve the garbage collection process  and may lead to extended periods of high disk IO. By setting a upper bound on the execution duration for the garbage collection  we can ensure a balance is maintained between both GC and Compaction processes.    Logging has been improved to allow a user to see the complete usage of the buckets  vs. those that were compacted  so that they can decide on any further tuning that may be required.    Test cases have been added to ensure limits are enforced properly and that defaulting of the values is correctly implemented.    * 2638-CompactionLimits    * align config parameters    * Refactor Limit to MaxTimeMs
2021-04-05T17:22:04Z,2674,sign published packages (#2674)  Add signing plugin to sign artifacts using PGP. For details see  https://docs.gradle.org/current/userguide/signing_plugin.html    This was testing by publishing to local maven repository:  ```  $ gradlew bookkeeper-server:publishMavenPublicationToMavenLocal    $ ls -ln ~/.m2/repository/org/apache/bookkeeper/bookkeeper-server/4.14.0-SNAPSHOT/  total 10568  -rw-r--r--  1 501  20  1596624 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT-tests.jar  -rw-r--r--  1 501  20      650 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT-tests.jar.asc  -rw-r--r--  1 501  20  2254279 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT.jar  -rw-r--r--  1 501  20      650 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT.jar.asc  -rw-r--r--  1 501  20     6983 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT.module  -rw-r--r--  1 501  20      650 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT.module.asc  -rw-r--r--  1 501  20     6251 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT.pom  -rw-r--r--  1 501  20      650 Mar 31 13:07 bookkeeper-server-4.14.0-SNAPSHOT.pom.asc  -rw-r--r--  1 501  20     1817 Mar 31 13:07 maven-metadata-local.xml    ```    signing can be disable using following using `ORG_GRADLE_PROJECT_skipSigning`:    ```  ORG_GRADLE_PROJECT_skipSigning=1 gradlew :bookkeeper-server:publishMavenPublicationToMavenLoca  ```    Co-authored-by: Surinder Singh <surinders@splunk.com>
2021-04-01T06:42:44Z,2645,Defect-Fix Compaction status report into correct buckets. (#2645)  The compaction status report is off by 1.    When compaction is enabled  the 10% log is always empty. Setting the compaction threshold to .2 we were seeing the number of compacted entrylogs that were removed  match the sum of the 20% and 30% buckets. While the 10% bucket remained empty. Increasing the threshold to .3 we would see the sum of the first 4 buckets compacted (10%-40%). Also with the 10% bucket empty.    Upon inspection of the code  the code is using the .ceil function to calculate the bucket index to be updated. This means that 10% bucket will never be used. However  there could be a rare 100% case in which the code runs into a index out of bounds exception when the entrylog is actually 100% used. The index calculation should be using floor and not the ceil call using the next index lower. So usage of .00 to .9 ends up in the 0 index instead of the current calculation which puts the .0 - .9 in the 1 index.    This will leave the 100% index empty most of the time  as rarely will the entry logs be 100% used.
2021-03-31T17:07:58Z,2666,Build distributions with gradle (#2666)  Building:  ```  ./gradlew :bookkeeper-dist-src:distTar :bookkeeper-dist-server:distTar :bookkeeper-dist-bkctl:distTar :bookkeeper-dist-all:distTar  ```    The package can be found under corresponding build/distributions  ```  $ find bookkeeper-dist -name *.tar.gz -path *distributions*  bookkeeper-dist/bkctl/build/distributions/bkctl-4.14.0-SNAPSHOT.tar.gz  bookkeeper-dist/all/build/distributions/bookkeeper-all-4.14.0-SNAPSHOT.tar.gz  bookkeeper-dist/server/build/distributions/bookkeeper-server-4.14.0-SNAPSHOT.tar.gz  bookkeeper-dist/build/distributions/bookkeeper-4.14.0-SNAPSHOT-src.tar.gz  ```    Co-authored-by: Surinder Singh <surinders@splunk.com>
2021-03-30T06:31:11Z,2667,Fix a typo in bookkeeper script  ### Motivation    Bookkeeper script is failing to start. The variable is not being interpreted as a string. Instead we trying to run this as command and failing.    ```  $ ./bin/bookkeeper localbookie 3  JAVA_HOME not set  using java from PATH. (/usr/bin/java)  ./bin/bookkeeper: line 149: BOOKIE_EXTRA_OPTS: command not found  ./bin/bookkeeper: line 149: -Dorg.bouncycastle.fips.approved_only=true: command not found  ```    ### Changes    Add quotes around the variable definition.      Reviewers: Matteo Merli <mmerli@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2667 from sursingh/fix-bookkeeper-script
2021-03-28T01:21:26Z,2653,Correct the argument of the recover command of bookie shell (#2653)
2021-03-28T01:21:10Z,2663,ISSUE-2640: BP-43: Run integration tests with current source code. Build BKCTL. (#2663)  Co-authored-by: Prashant <prashantk@splunk.com>
2021-03-26T19:14:11Z,2662,Migrate bookkeeper-benchmark and stats module to gradle (#2662)  Co-authored-by: Surinder Singh <surinders@splunk.com>
2021-03-25T19:48:48Z,2661,Fix settings.gradle formatting (#2661)  Co-authored-by: Ali Ahmed <alia@splunk.com>
2021-03-24T18:49:43Z,2659,ISSUE-2640: BP-43: Gradle: Run tests in :stream gradle (#2659)  * Make gradle use os specific paths in build    * ISSUE-2640: BP-43: make unit tests run with gradle.    Co-authored-by: Ali Ahmed <alahmed.se@gmail.com>  Co-authored-by: Prashant Kumar <prashantk@splunk.com>
2021-03-23T21:06:00Z,2656,Upgrade Lombok version (#2656)  - 1.18.18 includes fixes for IDE compatibility (IntelliJ  Eclipse  Netbeans).    This is relevant while developing Bookkeeper.    - see https://projectlombok.org/changelog for more details
2021-03-23T21:04:14Z,2657,ISSUE-2640: BP-43: Build :stream source with gradle (#2657)  Add maven publication with the group and artifact ids fixed up to what  maven was generating.    Co-authored-by: Ivan Kelly <ikelly@splunk.com>
2021-03-19T17:01:50Z,2636,BP-43 CI/CD migration to gradle (#2636)  Gradle: Build bookkeeper-server with gradle and run unit tests    Co-authored-by: Prashant <prashantk@splunk.com>
2021-03-18T21:08:36Z,2646,Auto-throttle read operations (#2646)  * Auto-throttle read operations    * Fixed checkstyle issues    * More checkstyle fix    * Renamed variable    * Fix after var name changed
2021-03-18T19:02:13Z,2641,Add checksum validation for SST files (#2641)  Normally the SST file are immutable. A SST file from previous checkpoint can  be reused in subsequent checkpoints. This fact is used to avoid unnecessary  upload of SST files.    However there are scenarios in which just the name comparison doesn't work.  It is possible that the checkpoint process doesn't complete (due to  crash/restart). In such cases the stale SST files are left behind. When the  storage container is restarted  it will be correctly restored from previous  checkpoint. When we do a checkpoint on this new state  a new SST files  are created. Since we only compare the SST file names  we assume that files is  already available in the checkpoint store.    At best the size of the new files will mismatch  and restore will fail. But if  the size of the files match  restore will succeed and we will have invalid  data in the state store.    With this change we are adding the checksum for the SST files. The checksum  will be appended to the name when the SST file is uploaded. This will ensure  that the correct files are always uploaded    Co-authored-by: Surinder Singh <surinders@splunk.com>
2021-03-18T18:25:06Z,2647,Limit read-ahead bytes to the size of the read cache (#2647)  * Limit read-ahead bytes to the size of the read cache    * Update bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/storage/ldb/SingleDirectoryDbLedgerStorage.java    Co-authored-by: lipenghui <penghui@apache.org>    Co-authored-by: lipenghui <penghui@apache.org>
2021-03-18T18:16:16Z,2623,Issue 2622: Fix usage of JournalQueueSize and JournalCbQueueSize; JournalCbQueueSize should be bounded (#2623)  * Fix usage of JournalQueueSize and JournalCBQueueSize; JournalCBQueueSize should be bounded    * Fix capitalization
2021-03-18T18:15:22Z,2643,adjust default rocksDbBlockCache size to 10%/numberOfLedgers of direct memory (#2643)  * adjust default rocksDbBlockCache size to 10%/numberOfLedgers of direct memory instead of 10% of direct memory    * update bk_server configuration doc    Co-authored-by: Matteo Merli <mmerli@apache.org>
2021-03-17T23:12:46Z,2651,Fixed get-pip URL in Dockerfile (#2651)
2021-03-12T07:20:31Z,2614,Add fencing to recovery reads to avoid data loss issue  Descriptions of the changes in this PR:    ### Motivation    Adding the fencing flag to recovery reads avoids a data loss scenario as described in [issue 2614](https://github.com/apache/bookkeeper/issues/2614)    ### Changes    Added the fencing flag to recovery reads. Refactored some mocking unit test code to introduce fencing and allow two writers to share the same bookie state. Added a new unit to verify the fix. You can recreate the initial problem by removing the fencing flag from recovery reads and running the new unit test.    Master Issue: #2614  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrey.yegorov@datastax.com>  This closes #2616 from Vanlightly/fix-fencing
2021-03-09T11:06:41Z,2635,Handle corrupted checkpoints  ### Motivation    If a checkpoint is corrupted  checkpoint restoration will fail. Currently we will keep  retrying to restore the same checkpoint. The system will never recover from this.  The only way out is to manually remove the checkpoint from the zookeeper    ### Changes    When a checkpoint is corrupted  we need to try and restore from previous checkpoint.  This  is done recursively till we hit a checkpoint that works. If none of the checkpoints  work  we will fallback to a `nullcheckpoint` which will initialize rocksdb from scratch  and replay all state from journal.    Instead of just dealing with the latest checkpoint  we now return a list of checkpoints  ordered by age. We then simply walk this list and stop as soon as a checkpoint is  successfully restored. We currently only keep a single checkpoint   but with this change  we can potentially keep `N` checkpoints to provide more robustness.       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrey.yegorov@datastax.com>  This closes #2635 from sursingh/currupt-checkpoint
2021-03-08T11:04:18Z,2596,Allow force compact entry log when disabling entry log compaction  ---    Master Issue: #2596    *Motivation*    Sometimes user will disable the entry log compaction to reduce the  I/O load. But we should allow forcing compact the entry even if  the entry log compaction is disabled.    *Modifications*    - Add a configuration to allow force compaction      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  lipenghui <penghui@apache.org>  This closes #2626 from zymap/allow-force-gc-without-interval
2021-03-08T01:15:07Z,2627,Allow DBLedgerStorage to force GC by disk listener (#2627)  * Allow DBLedgerStorage to force GC by disk listener  ---    (If this PR fixes a github issue  please add `Fixes #<xyz>`)    Fixes #2596    *Motivation*    The isForceGCAllowWhenNoSpace does not work for the DBLedgerStorage.  Currently  the behavior of the isForceGCAllowWhenNoSpace is It is a  disk listener to decide whether to start the compaction task while  the disk of the Ledger almost full. It should be the same behavior  when we call gc endpoint manually.    *Modifications*    - Add dir listener for the SignleDirectoryDbledgerStorage    * Add listener number tests
2021-03-05T22:06:52Z,2639,BP-43 CI/CD migration to gradle (#2639)  Co-authored-by: Prashant <prashantk@splunk.com>
2021-03-04T08:50:54Z,2632,Fix NetworkTopologyImpl#getLeaves returning set with null value in case of non existing scope  Descriptions of the changes in this PR:    NetworkTopologyImpl#getLeaves(String scope) was returning set with null value  when requested scope did not exist.  I've added null check in NetworkTopologyImpl#doGetLeaves(String scope)  used by NetworkTopologyImpl#getLeaves method to not have null node returned as leaf node.    It would be nice to have this merged also with non master branch of bookeeper so maintenance releases could have that fix.    ### Motivation  I've found my Apache Pulsar cluster polluted with log:  ```   12:01:46.462 pulsar2-dev pulsar-broker {"logLevel":"ERROR" "logThread":"pulsar-io-23-1" "logger":"org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl" "message":"found non-BookieNode: null as leaf of defaultrack: /default-rack" "stack_trace":null}  ```    After digging I've found that  because https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L324  was returning HashSet with null node  when no bookkeepers were in /default-rack.    ### Changes  - Modified doGetLeaves() method to return empty HashSet instead of HashSet with null element when scope node can't be found.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrey.yegorov@datastax.com>  This closes #2632 from mkozioro/fix-do-get-leaves
2021-03-04T08:47:52Z,2631,Make Bookkeeper FIPS compliant by default  Descriptions of the changes in this PR:  Mailing list thread: [link](http://mail-archives.apache.org/mod_mbox/bookkeeper-dev/202102.mbox/browser)    ### Motivation    FIPS is 'Federal Information Processing Standard'. Basically it's a set of guidelines for security functions such as encryption/decryption/RNG etc. Applications running in FIPS mode are said to be more secure as they adhere to more stringent standards.    Java's security framework is extensible via the JCE (Java crypto extension) allows us to use libraries which implement these functions. In general we use BouncyCastle as it has an active  supportive community and also maintains the fips versions of their libraries.    Pulsar currently has FIPS support but it's not on by default  I had a chat with jiazhai about it and he mentioned that there is no specific reason as to why we run without it.    This is an attempt to get Apache BookKeeper FIPS compliant by default. If all tests pass and there are no performance regressions  we can merge this in.    ### Changes    - Added dependency of FIPS approved BouncyCastle  - Excluded the use of non FIPS BouncyCastle libraries.  - Added flag to start up script which will make it fips compliant.    Reviewers: Henry Saputra <hsaputra@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2631 from Ghatage/fipsCompliance
2021-02-25T18:20:00Z,,Release 4.13 update
2021-02-25T18:12:42Z,2607,Doc and release notes update for 4.13  Descriptions of the changes in this PR:    release 4.13    Release notes file is site/docs/4.13.0/overview/releaseNotes.md    ### Motivation and changes    Updating docs and release notes for 4.13      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2607 from dlg99/master-4.13-doc2 and squashes the following commits:  b70b9c41e [Andrey Yegorov] Doc and release notes update for 4.13 23b268906 [Andrey Yegorov] [maven-release-plugin] prepare for next development iteration
2021-02-24T07:55:10Z,2624,Update the NOTICE file to 2021 for copyright.  Very simple fix to update the year in the NOTICE file to 2021.    Fixes #2624   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2621 from hsaputra/update_notice_year_2021
2021-02-17T23:18:51Z,2601,Fix docker image build - add python3  ### Motivation  Building the docker image does not work anymore  see #2601     ### Changes  Add python3 to the list of available packages    ## How to verify  cd docker  docker build --build-arg BK_VERSION=4.12.1 -t testbk .    Fixes #2601   Reviewers: Andrey Yegorov <None>  This closes #2609 from eolivelli/fix/docker-image-python3
2021-02-17T20:13:14Z,2608,Release script does not work on MacOs Big Sur  Descriptions of the changes in this PR:    Fixed the script/docker run command to mount to `/home/$USER` instead of mac-style `/Users/$USER`.     ### Motivation    `dev/release/000-run-docker.sh` failed to mount source dir (got empty dir instead)  printed permissions errors like  ```  mkdir: cannot create directory '/root': Permission denied  Can not write to /root/.m2/copy_reference_file.log. Wrong volume permissions? Carrying on ...  ```    ### Changes    see above      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2608 from dlg99/master-release-docker-mac
2021-02-16T19:55:08Z,,[maven-release-plugin] prepare for next development iteration
2021-02-16T19:53:27Z,,[maven-release-plugin] prepare branch branch-4.13
2021-02-16T11:19:02Z,2506,ISSUE #2506: Skip unavailable bookies during verifyLedgerFragment  Descriptions of the changes in this PR:    This PR improves the `verifyLedgerFragment` method in the `LedgerChecker` by skipping calls to bookies that are known to be unavailable. The "bad bookies" are calculated by using metadata available in ZK and accessed by the `BookKeeperAdmin`. Note that `verifyLedgerFragment` will still run checks on all other bookies that appear available.    ### Motivation    The motivation for this change is demonstrated in #2506. As this code currently works  there are a ton of calls made to unavailable bookies with the intent of calculating bad (unavailable) bookies. This proposed change would greatly decrease the number of calls that the auditor and the replicator need to make to calculate which ledgers need replicating.    ### Changes    1. Added `getUnavailableBookies` method to the `BookKeeperAdmin`. This method could attempt to use caching  but it's not actually called that often  so I think caching might not add complexity without much value.  2. Updated `verifyLedgerFragment` method signature to take a collection of `unavailableBookies`.    Master Issue: #2506    ### Testing  If these changes are acceptable  I'd like some help identifying the best way to test these changes. I already added some coverage for the `getUnavailableBookies` method  but I haven't explicitly tested the fundamental change this PR proposes. Thanks!  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrey.yegorov@datastax.com>  This closes #2597 from michaeljmarshall/leverage-available-bookies  closes #2506
2021-02-15T07:28:33Z,2592,Fix for licenses problems  Fix problems found with check-binary-licence   Master Issue: #2592    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrey.yegorov@datastax.com>  This closes #2603 from dianacle/2592-licence-check-fix
2021-02-13T10:34:10Z,2599,Upgrading dropwizard to 3.2.5  Descriptions of the changes in this PR:    Upgraded Dropwizard Metrics to 3.2.5  that is the same version used by ZooKeeper 3.6.2    ### Motivation    Upgraded Dropwizard Metrics to the same version used by ZooKeeper 3.6.2 (and Pulsar 2.8)    ### Changes    pom + license files    Master Issue: #2599      Reviewers: Nicolo  Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2602 from dlg99/master-dw-update
2021-02-10T08:27:55Z,2594,Fix failing test in /stream  Descriptions of the changes in this PR:    GrpcChannelsTest and BKRegistrationNameResolverTest fail in /stream      ### Motivation    fix tests    ### Changes    BKRegistrationNameResolverTest failed because the bookieAddressResolver tried to use clientDriver before clientDriver's initialization. Fixed initialization order.    GrpcChannelsTest failed because of the grpc.netty-shaded conflict with unshaded grpc.netty    Picked up eolivelli 's changes to run stream tests on CI    Master Issue: #2594      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2595 from dlg99/master-stream-test-fix
2021-02-09T11:48:13Z,2587,Fix hanging tests tests TestStorageServerClientManagerImpl  Descriptions of the changes in this PR:    **Motivation**  Fixing hanging tests TestStorageServerClientManagerImpl and other tests in the directory    Some tests were not running because they were hanging waiting on future while storage container was being fetched.  But inproc grpc server was running on endpoint fake-server while client was connecting on fake-server:4181    **Changes**  Make GRPC inproc server run on fake-server:4181 and client connect on fake-server:4181  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrey.yegorov@datastax.com>  This closes #2587 from pkumar-singh/fix_hanging_unit_tests
2021-02-09T08:50:07Z,2581,Upgrading GRPC version to 1.33  Netty to 4.1.50Final and ETCD client driver  Descriptions of the changes in this PR:    upgraded GRPC  Will need to upgrade GRPC in pulsar as well    Upgrading:  - GRPC version to 1.33  - Netty to 4.1.50Final  - ETCD client driver  - TestContainers    ### Motivation    TableService stopped working under load.  jstack points to a problem with GRPC that is fixed in later versions    ### Changes    upgraded GRPC    Master Issue: #2581      Reviewers: Nicolo Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Lari Hotari <lari.hotari@datastax.com>  This closes #2582 from dlg99/master-grpc-upgrade
2021-02-09T07:36:43Z,2589,Fix javadoc for getAllBookies in RegistrationClient interface  Descriptions of the changes in this PR:    Basic javadoc update from what looks to be an accidental copy from another javadoc.    I opened https://github.com/apache/bookkeeper/issues/2588 to clarify what the meaning of "all" is. Either way  I'm sure we just need to update the javadoc as I did in this PR.    If https://github.com/apache/bookkeeper/issues/2588 reveals something interesting  it might be worth updating this javadoc to include that information.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2589 from michaeljmarshall/fix-get-all-bookies-javadoc
2021-02-05T22:01:34Z,2576,[Doc] Add descriptions for BookKeeper metadata store (#2576)  * add    * update    Co-authored-by: Anonymitaet <anonymitaet_hotmail.com>
2021-02-04T07:40:07Z,2579,Upgrade protobuf to 3.14.0 (latest)  Descriptions of the changes in this PR:    Upgraded protobuf dependency    ### Motivation    unit tests log "WARNING: Illegal reflective access by com.google.protobuf.UnsafeUtil" on Java11  This has been fixed in protobuf since version 3.7    ### Changes    Upgraded protobuf;   updated code to remove use of deprecated methods    Master Issue: #2579      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2580 from dlg99/master-proto
2021-02-03T07:30:11Z,2574,fix: BKAsyncLogWriter swallows rootcause of the WriteException  Descriptions of the changes in this PR:    Added first exception as a rootcause for the WriteException    ### Motivation    simplify troubleshooting    ### Changes    Added first exception as a rootcause for the WriteException    Master Issue: #2574      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2575 from dlg99/master-alw-exception
2021-02-03T07:28:07Z,2577,Fix: Multiple tests failing in /stream subproject  Descriptions of the changes in this PR:    Fixed (some of) the test failures.    Other tests need more work  some of them succeed on retry  some might fail but for different reasons.  To be continued.    ### Motivation    the tests shall pass    ### Changes    Fixed: missing dependencies for some subprojects  Fixed: mock setup for some tests    Master Issue: #2577      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Prashant Kumar  This closes #2578 from dlg99/master-test-fix
2021-02-02T09:21:54Z,2567,ISSUE #2567: Save last revision in rocksdb    Descriptions of the changes in this PR:    Save latest revision in rocksdb.    ### Motivation  Currently while restoring the complete transaction log is replayed.   As the transaction log builds up over time  it takes longer and longer to restore the storage containers on a new pod.    ### Changes    Instead we will save the revision in the rocksdb. We will use the revision retrieved after  restoring the last checkpoint to skip ahead in the journal logs and only replay the entries  that are not included in the checkpoint    Master Issue: #2567       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <andrea.yegorov@datastax.com>  Matteo Merli <mmerli@apache.org>  This closes #2568 from sursingh/save-last-version  closes #2567
2021-02-02T09:13:08Z,2572,fix: TableStoreImplTest failed because of NPE in AbstractStateStoreWithJournal initialization (test/mock issue)  Descriptions of the changes in this PR:    fixed mock creation.    ### Motivation    tests fail    ### Changes    fixed mock creation  Master Issue: #2572      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2573 from dlg99/master-fix-tabletest-npe
2021-02-02T01:57:15Z,2559,Stream storage endpoint from hostname to return fully-qualified name in Java 11+  Descriptions of the changes in this PR:    Update how hostname is retrieved when using hostname as identifier for stream storage to work consistenly between Java 8 and Java 11.    ### Motivation    Between Java 8 and Java 11  the value returned by `InetAddress.getLocalHost().getHostName()` changed from being the fully qualified name to just the short hostname. When running in a Kubernetes environment  it is necessary for the endpoint to be identied by its fully qualified name so that clients can connect.     This same change was made in Pulsar in https://github.com/apache/pulsar/pull/6235.    I have tested this change in Kubernetes environment using Java 11.    ### Changes    This is a simple change from `getHostName` to `getCanonicalHostName()`.    Master Issue: #2559      Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2571 from cdbartholomew/stream-storage-endpoint-java11
2021-02-01T09:54:43Z,2561,Limit log output to prevent in case of the large group of the log segments  Descriptions of the changes in this PR:    Limit logged data    ### Motivation    Overly long log line at ReadAheadEntryReader  Found a log with single log line of over 5 mil characters long  "org.apache.distributedlog.ReadAheadEntryReader - Starting the readahead entry reader for ..." + the details of ~16000 segments.    ### Changes    Output details of up to 10 segments plus count of segments.    Master Issue: #2561      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolo Boschi <boschi1997@gmail.com>  This closes #2562 from dlg99/master-log
2021-02-01T09:52:06Z,2565,Handling checkpoint corruption in case of bookie crash  Descriptions of the changes in this PR:    Allowed fallback to previous checkpoint  assuming that corrupt checkpoint means that checkpointing did not complete and the journal is intact.    ### Motivation    Reliability and resilience of teh table service.    ### Changes    Allowed fallback to previous checkpoint  assuming that corrupt checkpoint means that checkpointing did not complete and the journal is intact.    Master Issue: #2565      Reviewers: Surinder Singh  Enrico Olivelli <eolivelli@gmail.com>  This closes #2566 from dlg99/master-checkpoint-corruption
2021-02-01T09:47:46Z,2570,Fix the current site to allow click links in doc  Since there will be some time before we get site2 up and running  sending  this fix to allow links in doc content ot be clickable.    Currently  if user go to https://bookkeeper.apache.org/docs/latest/ the links  in the doc can not be click since the div overlay of navigator on left is  covering the content body.    The simple proposed fix is to set width of navigator container class to  certain width to not cover the body content.    To verify behavior and proposed fix difference:    1. Go to https://bookkeeper.apache.org/docs/latest/ and try to click the `WAL` link. You will not see the cursor change to hand icon to click the link  2. Now  visit the proposed fix at https://hsaputra.github.io/bookkeeper-staging-site/docs/latest/  then when  you hover on top of `WAL` link you should see the cursor change to hand point and allow you to click the link and navigate to the URL.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2570 from hsaputra/fix_anchor_doc
2021-01-29T20:03:29Z,2563,ISSUE #2563: Fix SST file corruption.  Fix SST File corruption during checkpointing    ### Motivation    Since the SST files are shared among checkpoints  this will not be resolved by future checkpoints. We will fail to restore all future checkpoints that depend on this file.    ### Changes    The record is sent asynchronously. We need to use a copy of the passed buffer  in the record. The ownership is retained by the caller and will be potentially  changed by the caller. In case of corruption the later blocks were  overwriting the previous blocks resulting in corruption      Master Issue: #2563       Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #2564 from sursingh/fix-sst-corruption  closes #2563
2021-01-28T08:12:05Z,2552,Fixed: DLCheckpointStore rethrows exceptions as FNFE but swallows the rootcause  DLCheckpointStore rethrows exceptions as FNFE but swallows the rootcause  Same as https://github.com/apache/bookkeeper/pull/2553 but for master branch    Descriptions of the changes in this PR:    added .initCause for the new FNFE exception to preserver it    ### Motivation    got the  ERROR org.apache.bookkeeper.statelib.impl.rocksdb.checkpoint.RocksCheckpointer - Failed to restore rocksdb ...  java.io.FileNotFoundException: ..../metadata  without any additional info for the rootcause (other than stack pointing to the DLCheckpointStore)    DLCheckpointStore appears to re-throw exceptions as FNFE without preserving the rootcause    ### Changes    added .initCause    Master Issue: #2552    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2555 from dlg99/master-fnfe
2021-01-28T07:23:54Z,2559,Allow stream storage to use hostname instead of IP address  Descriptions of the changes in this PR:    Allow stream storage to use hostname instead of IP address    ### Motivation    issue #2559    ### Changes    Allowed use of the host name for the endpoint.  Changes by cdbartholomew    Master Issue: #2559      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2560 from dlg99/master-stream-hostname
2021-01-28T07:19:00Z,2550,Fixed failing tests for /stream.  Descriptions of the changes in this PR:    Fixed tests for /stream  RocksDB initialization.  Same as https://github.com/apache/bookkeeper/pull/2551 but for master branch    ### Motivation    Tests were failing with " “java.lang.UnsatisfiedLinkError: 'long org.rocksdb.LRUCache.newLRUCache(long  int  boolean  double)'”".    ### Changes    Fixed following suggestion form https://github.com/facebook/rocksdb/issues/6789  Added  `    static {          RocksDB.loadLibrary();      }`  to extract the native library from the jar file etc.    Master Issue: #2550        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2554 from dlg99/master-streams-tests
2021-01-27T12:56:32Z,2557,ISSUE #2557: Bookkeeper docker image build fails because of deprecated Python version for pip  Descriptions of the changes in this PR:    ### Motivation    Fix Docker image build for Bookkeeper.    ### Changes    This PR just makes sure that the `pip` version used in the Dockerfile is compatible with Python 2.7. We may need to consider cherry-picking this PR to branches of Bookkeeper that are not end-of-life.     Master Issue: #2557    Signed-off-by: Raúl Gracia <raul.graciaemc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2558 from RaulGracia/issue-2557-fix-docker-image-build  closes #2557
2021-01-27T11:10:45Z,2538,Fix BookKeeper shell "list bookies" in case of downbookie and reduce noisy log during re-replication in case of down bookie  ### Motivation    When a bookie is down you can see many error both on command line tools and during replicator work.    Also the CLI is not working at all    ```    This is the error on "bookkeeper shell listbookies" when a bookie is downb  org.apache.bookkeeper.client.BKException$BKBookieHandleNotAvailableException: Bookie handle is not available   at org.apache.bookkeeper.discover.ZKRegistrationClient.getBookieServiceInfo(ZKRegistrationClient.java:248) ~[org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.client.DefaultBookieAddressResolver.resolve(DefaultBookieAddressResolver.java:43) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.tools.cli.helpers.CommandHelpers.getBookieSocketAddrStringRepresentation(CommandHelpers.java:45) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.tools.cli.commands.bookies.ListBookiesCommand.printBookies(ListBookiesCommand.java:124) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.tools.cli.commands.bookies.ListBookiesCommand.run(ListBookiesCommand.java:113) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.tools.cli.commands.bookies.ListBookiesCommand.run(ListBookiesCommand.java:43) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.tools.cli.helpers.DiscoveryCommand.apply(DiscoveryCommand.java:57) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.tools.cli.helpers.ClientCommand.apply(ClientCommand.java:60) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.bookie.BookieShell$ListBookiesCmd.runCmd(BookieShell.java:1202) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:236) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:2235) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]   at org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:2326) [org.apache.bookkeeper-bookkeeper-server-4.12.0.jar:4.12.0]    ```    ### Changes    Reduce the log level  and save printing useless stacktraces:  - CommandsHelpers -> prevent error on the CLI in case of down bookie (this is a blocker for the usage of the CLI)  - PerChannelBookieClient -> any time you try to connect to a down bookie  - DefaultBookieAddressResolver -> duplicate log line  the error already bubbles up on the caller  Reviewers: Flavio Junqueira <fpj@apache.org>  This closes #2538 from eolivelli/fix/reduce-logs
2021-01-27T07:43:23Z,2516,Sync 4.12.0 autorecovery doc to lastest  Descriptions of the changes in this PR:    Copying documentation updates for auto recovery from the `4.12.0` directory to the `latest` directory based on eolivelli's request in https://github.com/apache/bookkeeper/pull/2507.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2516 from michaeljmarshall/update-latest-documentation
2021-01-27T07:42:09Z,2520,[improve log info] fix typo (#2520)
2021-01-27T07:41:02Z,2533,fix default value in bk_server.conf  sync with code default value  ### Motivation  Fix the default value in `bk_server.conf`  sync with the default value in code.    For `readAheadCacheBatchSize` in code default value.  ``` Java  private static final int DEFAULT_READ_AHEAD_CACHE_BATCH_SIZE = 100;  readAheadCacheBatchSize = conf.getInt(READ_AHEAD_CACHE_BATCH_SIZE  DEFAULT_READ_AHEAD_CACHE_BATCH_SIZE);  ```  So  it should be 100 in `bk_server.conf` default configuration.    For `dbStorage_readAheadCacheMaxSizeMb` in code default value.  ```Java  public static final String READ_AHEAD_CACHE_MAX_SIZE_MB = "dbStorage_readAheadCacheMaxSizeMb";  private static final long DEFAULT_READ_CACHE_MAX_SIZE_MB = (long) (0.25 * PlatformDependent.maxDirectMemory())              / MB;  long readCacheMaxSize = getLongVariableOrDefault(conf  READ_AHEAD_CACHE_MAX_SIZE_MB                   DEFAULT_READ_CACHE_MAX_SIZE_MB) * MB;  ```  So  it should be 25% of direct memory in `bk_server.conf` default configuration.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2533 from hangc0276/update_doc_default_value
2021-01-27T07:38:26Z,2543,Allow to configure Prometheus HTTP Server bind address  Descriptions of the changes in this PR:    make prometheus bind addr can cofigure    ### Motivation    For security  make prometheus bind addr can config.  For compatibility  make default value is 0.0.0.0    ### Changes    make prometheus bind addr can cofigure    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2543 from Shoothzj/promethes_addr
2021-01-27T07:26:44Z,2505,Check np for LifecycleComponent close  Descriptions of the changes in this PR:     Check NP of  BookKeeper Stream Storage Server LifecycleComponents    ### Motivation    Fix issue #2505      ### Changes    (Describe: what changes you have made)    Master Issue: #2505       Reviewers: Flavio Paiva Junqueira <fpj@apache.org>  Enrico Olivelli <eolivelli@apache.org>  This closes #2542 from rudy2steiner/Stream_npe_check
2021-01-27T07:20:06Z,2556,Fix javadoc for LedgerMetadata's method getAllEnsembles (#2556)
2021-01-23T20:20:46Z,2548,Fix the broken links and links to archive pages. (#2548)  There are some broken and obsolete archive links in the README.    Update them to point to latest Documentation site.    Co-authored-by: Henry Saputra <hsapura@apache.org>
2021-01-13T22:48:47Z,2532,Issue 2531 - Fix noisy stacktrace at boot (#2532)  ### Motivation  The exception is managed with a fallback  printing the stacktrace would be misleading    ### Changes  - Changed log level from info to debug for the log line  - Removed the exception from the log line    Master Issue: #2531
2021-01-11T10:36:10Z,,Move Dockerfile to 4.12.1
2021-01-11T10:25:04Z,,Apache BookKeeper 4.12.1 release notes
2020-12-28T07:11:59Z,,Remove reference to thirdparty untrusted github actions - remove reference to untrusted styfle/cancel-workflow-action - add workflow_dispach event in order to be able to trigger the execution manually from release branches
2020-12-23T23:23:30Z,2522,ISSUE #2522: Update jcommander from 1.48 to 1.78  Descriptions of the changes in this PR:        ### Motivation  Certain bookkeeper shell commands when bookkeeper is bundled with pulsar because of conflicting jcommander versions    ### Changes  Updates jcommander to 1.78  same as pulsar.    Master Issue: #2522   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2523 from anvinjain/jcmd-1.78-update  closes #2522
2020-12-23T21:32:39Z,2525,Activate GitHub Actions on all PRs and on push  ### Motivation    Currently we are not running PR validation for Pull Requests against release branches (as branch-4.12).  Also we are not running tests on master branch and we do not have Jenkins anymore    ### Changes  - Enable PR validation for pull requests against all release branches  - Enable GitHub actions on "push"    Reviewers: Anup Ghatage <ghatage@apache.org>  Lari Hotari <None>  This closes #2525 from eolivelli/fix/activate-github-actions-all-branches
2020-12-19T16:40:31Z,2509,Upgrade libraries Common Compress and Hadoop (only tests) to fix vulnerabilities  ### Motivation and Changes  Upgraded libraries mentioned in #2509 #2510 #2511 #2512 #2513   Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@apache.org>  This closes #2515 from Ghatage/upgradeLibs
2020-12-11T23:01:30Z,2519,Allow DNSToSwitchMapping to access BookieAddressResolver  In order to allow Pulsar to leverage BookieId with custom Bookie-To-Rack Mapping (ZkBookieRackAffinityMapping) we need to inject the BookieAddressResolver into it.    There is not way to do it currently because it is created by the BookKeeper client  and we have to inject the same BookieAddressResolver used by the client itself.    *Changes*  - add new setBookieAddressResolver method (use 'default' methods in order to preserve backward compatibility  - call the new method in every point in which we instantiate a DNSToSwitchMapping and when we receive an instance at construction time    *Compatibility*  - this change is 100% compatible with previous versions  Reviewers: Rajan Dhabalia <rdhabalia@apache.org>  Anup Ghatage <ghatage@apache.org>  This closes #2519 from eolivelli/fix/dnsswitch-access-bookieaddress-resolver
2020-12-11T16:54:52Z,2517,BookKeeper Standalone does not work after ZK upgrade - missing third party deps  With the upgrade to ZooKeeper 3.6.2 the two dependencies "snappy java" and "metrics-core" are to be explicitly added at runtime in order to make the ZooKeeper server work.    This fix is for "bin/bookkeeper standalone"  that is not working anymore    Related commit that broke "standalone" mode:  https://github.com/apache/bookkeeper/commit/79cbf19a449a2dc96745fc563a489375b0846a09    How to verify this change:  - on current master "bin/bookkeeper standalone" does not work  - on this branch it works  Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Anup Ghatage <ghatage@apache.org>  Diana Clementi <diana.clementi@gmail.com>  This closes #2517 from eolivelli/fix/standlone-zookeeper-362
2020-12-09T06:30:19Z,2463,ISSUE #2463: java.lang.NullPointerException with metadataServiceUri = zk:///ledger  …s (Default on Docker image) #2463    Avoid NPE and throw IllegalArgumentException in case of invalid service metadata URI    Master Issue: #2463   Reviewers: Anup Ghatage <ghatage@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2469 from nicoloboschi/fix/2463/zk-errors  closes #2463
2020-12-07T02:52:53Z,2507,Add Some Clarifications to the AutoRecovery Documentation  Descriptions of the changes in this PR:    ### Motivation    I recently started using Apache Bookkeeper as part of my Apache Pulsar cluster. In learning some of the operational tasks related to managing the bookies and autorecovery  I noticed a few places where the documentation could be improved.    ### Changes    The changes are all to the `AutoRecovery.md` file for version 4.12.0. They might apply to earlier versions  but I'm not sure how documentation updates are handled. My first change is to explicitly mention the way to turn off the AutoRecovery daemon on the bookie nodes. This configuration was not obvious to me as a new user of the project  and I accidentally had recovery workers running on all nodes. (Regarding that  I mention in the PR that it is possible to run the process on bookie and autorecovery nodes. Perhaps this isn't an intended use case though? If that is so  it should be mentioned in the documentation.) I also added a clarification to the `disable` auto recovery documentation because it wasn't obvious to me that running the script would stop autorecovery for the whole cluster.    Thanks!  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2507 from michaeljmarshall/document-autorecovery-more
2020-12-07T02:51:45Z,2500,[DOCS] Update dbStorage_writeCacheMaxSizeMb configuration description  Fixes #2500     ### Motivation    The dbStorage_writeCacheMaxSizeMb configuration is not described clearly.    ### Changes    Refine the description in the broker.conf file.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2502 from Jennifer88huang/master and squashes the following commits:  505527085 [Jinfeng Huang] update 0de963832 [Jinfeng Huang] update dbStorage_writeCacheMaxSizeMb
2020-12-07T02:50:36Z,2498,getBookieInfo is stuck if no bookie is up (#2498)  ### Motivation  getBookieInfo is stuck if no bookie is up    ### Changes  Fix the problem  add a test case.  Also the getBookieInfoTimeout configuration was not  used  we were using the read entry timeout.
2020-12-07T02:49:19Z,2496,Start HTTP Server in Bookie Standlone Mode (#2496)  ### Motivation  - when you launch "bookkeeper standalone" service the system does not take into account the HTTP Server configuration  - the HTTP Server is important because it allows to use the HTTP API https://bookkeeper.apache.org/docs/latest/admin/http/  - the standalone service is very useful when you are working on client applications (like BKVM)    ### Changes    - consider HTTP server configuration in 'bin/bookkeeper standalone' command  - add default example configuration  - add VertxHttpServer to dependencies of Standalone Module  - the change is basically a copy and paste of this part of Main.java  but applied to the Main class of the Standalone Starter  which is a separate code: https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/server/Main.java#L327       ## Verify this change  After this change when you run "bookkeeper standalone" the HTTP API will be enabled  For instance you can check the Bookie API with  http://localhost:8080/api/v1/bookie/info
2020-12-04T20:58:47Z,2503,Upgrade ZooKeeper to 3.6.2  - upgrade ZooKeeper dependency  - add explicit dependency on Snappy Java  needed by ZooKeeper Server    Please note that ZooKeeper server also needs Drop Wizard Metrics Core  but we are already bundling it      Reviewers: Matteo Merli <mmerli@apache.org>  This closes #2503 from eolivelli/fix/upgrade-zk-3.6.2 and squashes the following commits:  4bf20168d [Enrico Olivelli] fix DLOG tests c71938008 [Enrico Olivelli] fix DLog tests a410c5633 [Enrico Olivelli] fix benchmarks module 0a008e73c [Enrico Olivelli] Add metrics core ea8562271 [Enrico Olivelli] Upgrade ZooKeeper to 3.6.2 - upgrade dependency - add explicit dependency on Snappy Java  needed by ZooKeeper Server
2020-12-04T16:11:19Z,2451,ISSUE #2451: Add sidebar to the documentation page  Descriptions of the changes in this PR:    This PR introduces changes for adding the sidebar to the new docusaurus based website.    ### Motivation    The #2426 Pull Request introduced the changes for new docuasurus based website  However the new website still do not have sidebar similar to our current website. This PR introduces changes for adding the missing sidebar.    ### Changes    Added link to the getting-started README in the _sidebars.json_.    Master Issue: #2451     ### Testing Details -     I have build the changes locally and have verified that the sidebar is getting rendered properly. Here is the screenshot of the new sidebar -     <img width="1680" alt="Screenshot 2020-11-28 at 12 23 28" src="https://user-images.githubusercontent.com/17764661/100495736-8d359b00-3174-11eb-853a-3d67f15dc5a4.png">    Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2501 from Abhey/Issue-2451  closes #2451
2020-11-25T16:33:18Z,2282,Bump nokogiri from 1.10.7 to 1.10.8 in /site (#2282)  Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.10.7 to 1.10.8.  - [Release notes](https://github.com/sparklemotion/nokogiri/releases)  - [Changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md)  - [Commits](https://github.com/sparklemotion/nokogiri/compare/v1.10.7...v1.10.8)    Signed-off-by: dependabot[bot] <support@github.com>    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
2020-11-24T13:06:46Z,2437,ISSUE #2437: Fix typo in ledgers data directory for Docker  Fix typo for `ledgers` directory    Descriptions of the changes in this PR:        ### Motivation    Typo in the documentation that can leads to issue (data not persistent across docker restarts)    ### Changes    Fix typo (added the `s` to `ledgers`)    Master Issue: #2437       Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Minardi <minardi.matteo@hotmail.it>  This closes #2438 from rdehouss/patch-1  closes #2437
2020-11-24T13:03:17Z,2484,Publish BP-38 BookieEndpointInfo for BookKeeper Standalone mode  ### Motivation    When you run "bin/bookkeeper standalone" the server does not publish BP-38 endpoint info.  This way you cannot use bookieId (BP-41).    ### Changes    Fix BookieService in "standalone" package  that is very like to the BookieService in "bookkeeper-server".  The code cannot be reused  even if the name is similar the overall design of the class hierarchy is different.    Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #2484 from eolivelli/fix/standalone-bp38
2020-11-21T17:45:47Z,2493,Opportunistic Striping  ### Motivation  If you have a very small cluster  3 bookies  you must use **2-2-2** as replication parameters in order to guarantee durability and tolerate the failure of at least one bookie.  With this situation you cannot leverage the striping feature of BookKeeper  when **ensembleSize > writeQuorumSize**.    With striping you can distribute your data among all of the bookies  and use better the available disk space.  You can also exploit the ability to write to/read from more disks (bookies) in parallel  achieving better overall performances.    With this change we introduce a new client option "opportunistic striping"  that basically tells to the BK client to use as much bookies as configured in the ensembleSize parameter in the best case scenario  and to use less and less bookies  up to the configured writeQuorumSize.    ### Changes  - New ClientConfiguration option "opportunisticStriping"  - in case of opportunisticStriping the client is allowed to use less bookies than the requested ensemble size  up to writeQuorumSize  - add test cases  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Anup Ghatage <ghatage@apache.org>  This closes #2493 from eolivelli/fix/bp-43-impl-auto-striping
2020-11-18T16:53:52Z,2442,[DOC] Issue #2442] New website Project Page  Descriptions of the changes in this PR:     Update our new website project Privacy policy page    ### Motivation        we decide to use new website framework and skeleton to renew our website    ### Changes      Add Privacy policy     Master Issue: #2442         Reviewers: Anup Ghatage <ghatage@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Abhey Rana <abhey.mnnit@gmail.com>  This closes #2481 from rudy2steiner/site_project  closes #2442
2020-11-18T16:51:11Z,2491,Upgrade to Curator 5.1  Descriptions of the changes in this PR:    Curator 5.x support ZooKeeper 3.6.x.  This change is needed to able the upgrade of Pulsar to ZooKeeper 3.6.2     ### Changes    Upgrade Curator    Reviewers: Anup Ghatage <ghatage@apache.org>  This closes #2491 from eolivelli/fix/test-curator-5
2020-11-17T08:33:54Z,2489,Set BK 4.11.1 as stable  move 4.9.x to EOL (#2489)  Co-authored-by: Enrico Olivelli <eolivelli@apache.org>
2020-11-17T08:23:13Z,2487,[RELEASE 4.12.0] fix version 4.12 after release  the link in site/releases.md is not updated  this is to fix the issue.  update the version in [docker/Dockerfile](https://github.com/apache/bookkeeper/blob/master/docker/Dockerfile).  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2487 from jiazhai/add_412_link
2020-11-17T00:39:55Z,2478,Apache BookKeeper 4.12.0 Release notes (#2478)  * Prepare website structure for 4.12.0    * Apache BookKeeper 4.12.0 release notes    * fix release notes  add pr/issue links    Co-authored-by: Enrico Olivelli <eolivelli@apache.org>  Co-authored-by: Jia Zhai <zhaijia@apache.org>
2020-11-11T02:06:56Z,,for 4.12 release  change python client verison to 4.12.0 from 4.12.0-alpha-0
2020-11-10T09:46:17Z,,[maven-release-plugin] prepare for next development iteration
2020-11-10T09:46:06Z,,[maven-release-plugin] prepare branch branch-4.12
2020-11-10T09:18:32Z,2472,Add Add ForceAuditChecksCmd to reset auditor checks last run time (#2472)  Motivation  Reset the last run time for auditor checks. Reboot auditor leader immediately to trigger the checks. This is mostly used for testing infra and get the sanity check of a cluster on demand.    Changes  Added a new shell command and tests
2020-11-10T09:13:28Z,2413,[Issue 2408] (#2413)  1. fix documentation concept part about default ledger manager.  2. fix documentation protocol part about  missing Qw value.
2020-11-06T09:01:16Z,2467,ISSUE #2467: Remove redundant synchronized  1. Remove redundant synchronized  2. rename fi.getSizeSinceLastwrite -> fi.getSizeSinceLastWrite  3. fix typo  Reviewers: Sijie Guo <None>  This closes #2468 from Technoboy-/issue-2467  closes #2467
2020-11-06T07:25:27Z,1979,ISSUE #1979 Metrics link missing  Fixes #1979     The link for `Metrics` is broken. However  the `Metrics` file is empty. Therefore  I temporarily removed the link in all versions. The same problem happened to `configuration parameters`.    I closed pr #2386 as it brought changes from the master instead of a new branch.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2400 from sijia-w/fix-1979  closes #1979
2020-11-06T07:23:50Z,2388,ISSUE #2388: Bookie Http Service Servlet for Embedded Bookie  Descriptions of the changes in this PR:        ### Motivation    Expose bookie http service by servlet     ### Changes    *  Introduce Servlet for bookie http service  *  Jetty http server and test bookie http service servlet    Master Issue: #2388    Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2403 from rudy2steiner/bookie_servlet  closes #2388
2020-11-06T07:22:02Z,2480,Upgrade Guava to 30.0-jre  - Upgrade Guava to 30.0.jre (see https://github.com/google/guava/releases)  - adapt code  as Futures.addCallback(3-args) has been removed (see https://github.com/google/guava/commit/dfb00017144bf48c408bc4cfcebadc0a0498dc73)  Reviewers: Sijie Guo <sijie@apache.org>  Jia Zhai <zhaijia@apache.org>  This closes #2480 from eolivelli/fix/upgrade-guava
2020-11-04T15:13:47Z,1262,ISSUE #1262: Remove Deprecated CodahaleMetricsProvider  CodahaleOpStatsLogger and …  …CodahaleStatsLogger classes.    ### Motivation    We have deprecated these classes since 2018 and moved them to the codahale package.    ### Changes    Removed the deprecated files.    Master Issue: #1262  #762  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2459 from Ghatage/BOOKKEEPER-1262/cleanupDeprecatedCode  closes #1262
2020-11-04T11:11:07Z,2475,add channel information if catch exception in BookieRequestHandler  ### Motivation  fix #2475   add channel information if catch exception in BookieRequestHandler        Reviewers: Anup Ghatage <ghatage@apache.org>  Nicolò Boschi <boschi1997@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2479 from aloyszhang/add-channel-info
2020-11-04T07:26:08Z,2460,Limit maven http connection pool TTL in Github flows (#2460)  ### Motivation    Fixes "Transfer failed for https://repo.maven.apache.org/...  .jar: Connection reset" type of failures in Github Flows environment such as  ```  Error:  Failed to execute goal on project bookkeeper-common: Could not resolve dependencies for project org.apache.bookkeeper:bookkeeper-common:jar:4.12.0-SNAPSHOT: Could not transfer artifact org.jctools:jctools-core:jar:2.1.2 from/to central (https://repo.maven.apache.org/maven2): Transfer failed for https://repo.maven.apache.org/maven2/org/jctools/jctools-core/2.1.2/jctools-core-2.1.2.jar: Connection reset -> [Help 1]  ```    ### Changes    Set `maven.wagon.httpconnectionManager.ttlSeconds` to 25 seconds.  Besides this  set `maven.wagon.http.retryHandler.count` to 3 retries.    https://issues.apache.org/jira/browse/WAGON-545  contains a recommendation "Azure users shall set the TTL to 240 seconds or less."    The reason for the 25 second TTL is to ensure that it's shorter than any common  firewall or NAT timeout. Some NATs have a 30 second idle timeout although  that is very rare. There shouldn't be harm in using the 25 second TTL since  the connection pool will be able to pool connections well with a 25 second TTL.    The documentation for `maven.wagon.httpconnectionManager.ttlSeconds` is  available in the source code:  https://github.com/apache/maven-wagon/blob/wagon-3.4.1/wagon-providers/wagon-http-shared/src/main/java/org/apache/maven/wagon/shared/http/AbstractHttpClientWagon.java#L297-L305    Documentation for `maven.wagon.http.retryHandler.count` is in  https://maven.apache.org/wagon/wagon-providers/wagon-http/  "Any retry handler can only react to exceptions when executing the request and  receiving the response head. It will not salvage in-flight failures of ongoing  response body streams." Therefore the retry count setting is a bit  different than expected. WAGON-545 explains that ConnectionExceptions  aren't part of the retried exceptions by default. If such issues become  problems  it's possible to configure the retry handler in a more fine  grained way.    This is similar to the change made in Pulsar: https://github.com/apache/pulsar/pull/8386
2020-11-04T07:25:30Z,2476,Fix Default Java Home in apachebookkeeper/bookkeeper-current image (#2476)  ### Motivation    You can easily build locally a docker image regarding the "current" version  that is the code that you have currently on your git repository using these commands:    ```  mvn clean install -DskipTests  mvn install -f tests/docker-images/current-version-image/pom.xml -DintegrationTests  ```    ```   # start ZooKeeper server locally  docker run --network=host zookeeper:latest  ```    ```  # start one Bookie  docker run --network=host --env BK_zkServers=localhost:2181 --env BK_bookieId=bk1 --env BK_allowLoopback=true --env BK_bookiePort=3181 apachebookkeeper/bookkeeper-current  ```    but in current master  after the first switch to JDK11 the Dockerfile of the "apachebookkeeper/bookkeeper-current" is broken and points to a broken path for the JAVA_HOME env entry.    ### Changes  Change the default JAVA_HOME to the good path    Co-authored-by: Enrico Olivelli <eolivelli@apache.org>
2020-11-03T10:34:33Z,2441,Protobuf should be serialized to direct memory instead of heap memory (#2441)  Descriptions of the changes in this PR:    ### Motivation    Protobuf serialization is the last step of the netty pipeline. Currently  we allocate a heap buffer while serializing  and pass it down to netty library. In `AbstractChannel#filterOutboundMessage()`  netty copies that data to a direct buffer if  it is currently in heap (otherwise skips it and uses it directly).  This change helps in reducing unncessary CPU cycles for buffer copies and also helps alleviate pressure off the GC  since there is  less churn of memory. In some stress tests  I see a reduction upto 33% in number of GC's with the same avg running duration in BK Client.  The workload does writes of different sizes  ranging from 1 KB to 512 KB.  Bookies aren't usually CPU bound. This change improves READ_ENTRY code paths by a small factor.      ### Changes    Used direct memory for buffer allocation versus heap memory      * Added comments
2020-11-03T10:05:45Z,2450,ZookeeperClient should retry instantly on zk session expiry (#2450)  Descriptions of the changes in this PR:    ### Motivation    Currently  we wait for `sessionTimeoutMs` before initiating a new zk cnxn. Session expiry is recevied only  when zk quprum is in a healthy state and can acquire a quorum to expire a session.  All other connection loss retries happen at zk client library transparently.    There is not much benefit waiting at BK client level.    ### Changes    Updated the values for backoff and maxbackoff to 0 seconds.        * ZookeeperClient should retry instantly on zk session expiry    Currently  we wait for `sessionTimeoutMs` before initiating a new zk cnxn. Session expiry is recevied only  when zk quprum is in a healthy state and can acquire a quorum to expire a session.  All other connection loss retries happen at zk client library transparently.    * Added comments
2020-11-03T10:03:44Z,2470,Introduce new retry policy for metadata operations (#2470)  Descriptions of the changes in this PR:    ### Motivation  Current retry backoff policy is truly exponential  hence retries are spaced out at large intervals. There is maxBackOff time that limits it  but it doesn't have a concept of deadline. Hence  applications with shorter SLA's have issues dealing with ZK failures and recovering from it.    ### Changes    The new policy introduces an aggressive retry mechanism with the backoff constants as less exponential. The deadline ensures that we retry at least once at the deadline. The stack trace would indicate the operation at risk.    This doesn't update the product code  which is still in testing. I am splitting PR's for for sake of reviews.      * Introduce new retry policy for metadata operations    * Spotbugs error fix
2020-11-02T07:23:22Z,2302,Autorecovery may hang indefinitely when zookeeper connection blips  Descriptions of the changes in this PR:    ### Motivation    In certain circumstances  all AR processes were running but not performing any replication. Thus ledgers remain under-replicated for periods more than the threshold defined by our monitoring system. The reason is that the latch here gets countdown only under certain condition.    ### Changes    Ensure that countdown latch is released for any ZK event. Also log the zk event.    Master Issue: #2302   Reviewers: Enrico Olivelli <eolivelli@apache.org>  Anup Ghatage <gathage@apache.org>  This closes #2471 from karanmehta93/ar-zk-bug
2020-11-02T03:13:18Z,2474,Issue 1533: DbLedgerStorage does not persist ExplicitLAC: Information (Header) of TransientLedgerInfo is not persisted (#2474)  Motivation  DbLedgerStorage does not persist "ExplicitLAC" on RocksDB  so when you restart a Bookie the information is lost.  This work can be considered a follow up of @reddycharan work at #1527    Changes  persist ExplicitLAC on DBLedgerStorage  save ExplicitLAC on RocksDB (it is an optional field  so this change is backward compatible)  enable testExplicitLACIsPersisted test even for DBLedgerStorage  on TransientLedgerInfo rewind the ByteBuf in order to be able to use it again while writing to RocksDB  use computeIfAbsent in getOrAddLedgerInfo (code clean up  but code looked strange  probably subject to some possible race condition)  Master Issue: #1533      * Issue 1533: DbLedgerStorage does not persist ExplicitLAC: Information (Header) of TransientLedgerInfo is not persisted    * final fix and fix checkstyle    * restore tests    Co-authored-by: Enrico Olivelli <eolivelli@apache.org>
2020-10-30T17:27:13Z,2473,Upgrade jetty to 9.4.33.v20201020  Jetty versions 9.4.32.v20200930 and earlier have a security vulnerability  so upgraded to the latest stable version.  https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27216  Reviewers: Rajan Dhabalia <rdhabalia@apache.org>  Anup Ghatage <ghatage@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2473 from massakam/upgrade-jetty
2020-10-29T10:31:37Z,1901,Read ExplicitLAC in asyncReadLastConfirmed - enable ExplicitLAC in new API (#1901)  - Readers will handle explicit LAC transparently  - V2 Readers stay with old PiggyBackLAC    Descriptions of the changes in this PR:  In readLastAddConfirmed we are going to call readLac which is an RPC supported from BK 4.5 which returns both the Piggybacked LAC and the Explicit LAC.  This way readers will be able to advance their view of the LAC even in case of writers which are using ExplicitLAC.  **This change enables users of the new API to leverage ExplicitLAC**    Client which are using v2 protocol will fallback to Piggybacked LAC as readLAC is not available in v2 protocol.    ### Motivation  This way new API users will be able to use ExplicitLAC    ### Changes    Call LedgerHandle#asyncReadExplicitLastConfirmed inside LedgerHandle#asyncReadLastConfirmed in case of non v2 protocol.    * Read ExplicitLAC in asyncReadLastConfirmed  - Readers will handle explicit LAC transparently  - V2 Readers stay with old PiggyBackLAC    * fix client mock tests    * fix checkstyle    * add test case    * fix checkstyle    * fix typo    Co-authored-by: eolivelli <eolivelli@apache.org>
2020-10-29T10:28:36Z,2422,BP-42: New Client API - list ledgers  Implementation of BP-42    ### Motivation  Enhance new client API  added methods for  - listing ledgers  - access to ledger metadata    ### Changes    - Added new interfaces in "api" client package for ledgers listing  - Added new method `getLedgerMetadata(long ledgerId)` to BookKeeper interface  - Added `getLedgerId()` to LedgerMetadata type  -- Ledger metadata ser/deser are not changed since ledgerId is not stored inside ZK data node     Updated all tests using `LedgerMetadataBuilder` because ledgerId is now required in order to call `build()` method    Master Issue: #2422   Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2457 from nicoloboschi/fix/2422/bp-42-list-ledgers
2020-10-29T02:15:59Z,2454,ISSUE #2454: Typo of naming LedgerStorage#setExplicitlac  Fix #2454 .  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2456 from Technoboy-/issue-2454  closes #2454
2020-10-28T20:42:32Z,2464,[BUILD] Use Cancel workflow action to cancel outdated PR build jobs  ### Motivation    Currently a single user can cause the Github Actions / Workflows based CI to get overloaded when commits are pushed to a PR branch frequently  one by one. To mitigate this issue  cancel any previous Github Actions runs that are not completed for a given workflow   for a particular branch / PR. This can be achieved by using the https://github.com/marketplace/actions/cancel-workflow-action .  [There are multiple cancel actions available](https://github.community/t/github-actions-cancel-redundant-builds-not-solved/16025/22). This particular one was picked based on its popularity.    ### Modifications    Append each workflow with the cancel workflow action step.    A similar change was made in Pulsar CI in PR https://github.com/apache/pulsar/pull/8393  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Anup Ghatage <ghatage@apache.org>  This closes #2464 from lhotari/lh-cancel-previous-build
2020-10-28T20:37:02Z,2465,Make protoc-gen-grpc-java.version match grpc.version  ### Motivation    protoc-gen-grpc-java is part of grpc libraries.  Usually it doesn't make sense to use a version other  than the current grpc version. Currently 2 different versions are used.    It seems that it has been forgotten to upgrade protoc-gen-grpc-java.version   when grpc.version has been upgraded from 1.12.0 to 1.18.0    ### Changes    Make protoc-gen-grpc-java.version match grpc.version by referencing it with ${grpc.version}  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2465 from lhotari/lh-protoc-gen-grpc-java-version
2020-10-27T16:01:52Z,2453,BP-41 Cleanup tools logs  ### Motivation    BP-41 introduces the new bookieId concept  and tools have to be improvement in order to provide better user experience.    ### Changes    - Fix NPE while shutting down the ZKRegistration client no function impact)  - Clean up logs in general  - Print "bookieId" instead of Bookie Address in "bin/bkctl bookies list" command  - Print bookieId at Bookie startup (using standard scripts)  Reviewers: Jia Zhai <zhaijia@apache.org>  Anup Ghatage <ghatage@apache.org>  This closes #2453 from eolivelli/fix/bp41-tools1
2020-10-27T13:58:41Z,2209,BP-40: Convert all System.*.print statements to LOG.* statements  ### Motivation    In order to have an audit log of all user interactions  all print statements which come from such interactions need to be logged.  We have two user driven ways to mutate BookKeeper:  * BookieShell  * bkctl  Both internally use the same code from `tools/cli`    ### Changes    The logging in the code was inconsistent. At times we used `System.out.println` and at times we used `LOG.info`.  As a part of this work item we change these in the following way:    * For every `cli` class  confirm if a Logger object is present  if not create one.  * Convert all `System.out.println()` -> `LOG.info()`  * Convert all `System.err.println()` -> `LOG.error()`    ### Ramifications    BookieShell uses `log4j.shell.properties`  bkctl uses `log4j.cli.properties`    Both log4j property files have `CONSOLE appenders`  so the like previous `System.out.println()`  the new `LOG` statements will also be printed to console.  This is mentioned explicitly as certain upstream consumers / scripts utilize BookieShell / bkctl to assess the state of the BK cluster.    Master Issue: #2209     Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2455 from Ghatage/BP-40/auditLogging
2020-10-23T05:54:10Z,2170,ISSUE #2170: Cleaned up error message for NoNodeException for lostBook…  …ieRecoveryDelay when Auditor is not initialized.    ### Motivation    If Auditor has not been initialized  running `lostBookieRecoveryDelay` from bookie shell will result in a stack trace and `NoNodeException`.    ### Changes    Added a catch clause which:  * Cleans up stack trace  * Explains that the Auditor is not up yet  which means the znode for `lostbookierecoverydelay` has not been created yet.  * Prints exception    Master Issue: #2170       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2452 from Ghatage/BOOKEEPER-2170  closes #2170
2020-10-21T23:47:11Z,2448,Update website after 4.11.1 release:  - fix BP page  - fix versions list  - fix download page and releases history  - add script to publish the website manually  - tagged as "stable" 4.10.0  - tagged as EOL every release < 4.9.2  - removed stale information about next releases (if we do not have a real plan it is better to not write stale information)  - merge BK 4.11.1 release notes    the procedure to publish the new website manually is:  - git clone https://github.com/apache/bookkeeper  - cd bookkeeper/site  - docker/ci.sh  - scripts/publish-website-manually.sh          Reviewers: Anup Ghatage <ghatage@apache.org>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2448 from eolivelli/fix/update-website-after-4.11.1-release
2020-10-21T15:59:05Z,2443,ISSUE #2443: Complete community page in the new docusaurus website  Descriptions of the changes in this PR:    This PR introduces changes to complete the community page of the new up-coming docusaurus based website.    ### Motivation    The #2426 Pull Request introduced the changes for new docuasurus based website  However few of the pages like community and project were incomplete. This PR introduces the changes to complete the community page.    ### Changes    I have added the markdown files for the following web-pages -   * bookkeeper-proposals  * coding-guide  * community-meetings  * contributing  * issue-report-guide  * mailing-lists  * papers-and-presentations  * release-guide  * release-management  * testing-guide    I have also updated the code in community.js to refactor the way tables for PMC and committers is getting generated  So that we get the best out of the react based framework.    ### Testing Details -     I have build the changes locally and have verified that all the links are rendering properly or not. Here is the screenshot of the new community web-page.    ![Screenshot 2020-10-19 at 18 36 34](https://user-images.githubusercontent.com/17764661/96454852-11be0100-123a-11eb-8a8f-ca49ec663d7b.png)      Master Issue: #2443     Reviewers: Anup Ghatage <ghatage@apache.org>  This closes #2447 from Abhey/Issue-2443  closes #2443
2020-10-21T15:47:59Z,2449,Fix JAVA_HOME in Dockerimage and allow it to be overwritten  - Fix Java 11 Path in Dockerfile  - Allow to overwrite JAVA_HOME in entrypoint.sh and healthcheck.sh  Reviewers: Ravi Sharda <None>  This closes #2449 from eolivelli/fix/docker-image-jdk11-2
2020-10-20T14:36:31Z,2396,BP-41 Bookie Address changes tracking  - Allow the client to follow Bookie Address Changes  - If a Bookie changes network address the clients will be able to connect to the new addresess  - In order to leverage the most of this feature the Bookie must configure a fixed bookieId (see BP-41)   - add flag enableBookieAddressTracking to enable/disable this feature  as it needs a ZK watch for every active bookie in the cluster and if you have a static cluster there is no need to invalidate the local cache and issue more ZK requests  - handle ZK session expiration events  when the ZK client is not receiving watch notifications it could miss bookie address changes  so we have to eagerly flush the whole local cache of bookie addresses      This is part of BP-41  Master ticket #2396    Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Anup Ghatage <ghatage@apache.org>  This closes #2435 from eolivelli/fix/bp41-client-discovery-cache
2020-10-20T06:34:35Z,2446,Issue 2445: Builds of Docker tag bookkeeper:latest are failing (#2446)
2020-10-19T12:15:29Z,2446,Issue 2445: Builds of Docker tag bookkeeper:latest are failing (#2446)  Fixes #2445 by not overriding BK_VERSION variable in case of "latest" tag      Co-authored-by: Enrico Olivelli <enrico.olivelli@diennea.com>
2020-10-16T15:15:52Z,2436,Detect Java 11 JRE and not only JDK  - Use 'lib/modules' in order to detect a modern JDK  - With this change we can detect both JDK and JRE    Reviewers: Jia Zhai <zhaijia@apache.org>  Anup Ghatage <None>  Nicolò Boschi <boschi1997@gmail.com>  This closes #2436 from eolivelli/fix/support-jdk11-jre
2020-10-16T14:59:34Z,2387,Update to OpenJDK11 in Docker image  Descriptions of the changes in this PR:  - Update "master" docker image to BK 4.11.0  - Update to OpenJDK11 the main Docker image and the Docker image used for integration tests  - We are not using "JRE" because it does not bundle jshell and our script detects the presence of JDK11+ from the presence of file "jshell"    Master Issue: #2387    Reviewers: Ravi Sharda <None>  Jia Zhai <zhaijia@apache.org>  This closes #2433 from eolivelli/fix/test-jdk11-upgrade-docker
2020-10-14T14:35:33Z,2377,ISSUE #2377: Relax grpcio requirement for python client to support python3.8 on mac os      Descriptions of the changes in this PR:    Require a grpcio version that is minor of 1.28. This allow to install the 1.27.2 that has a pre-compiled wheel for python 3.8 on mac os.  Add tests for python 3.8      ### Motivation    grpcio 1.25.0 does not allow the installation using python 3.8 on mac os x. This is due to the fact that the pre-compiled wheels have not been published before 1.26.0    ### Changes      Updated the setup.py to relax a bit the requirement for grpcio  Add python3.8 as tested version  Updated the setup.py to install the latest pymmh3 version. **Note**: master tests are broken  I've updated the library and removed the 'signed' parameter that does not exists not anymore.    Master Issue: #<master-issue-number>    cc eolivelli       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2432 from ca-simone-chiorazzo/bugfix/2377-relax-grpcio-python-dep-for-python-3.8-on-mac-os  closes #2377
2020-10-09T15:37:44Z,2422,BP-42: new api list ledgers  Descriptions of the changes in this PR:        ### Motivation      The new Client API (org.apache.bookkeeper.client.api.BookKeeper) aims to replace obsolete BookKeeper API but some features are not implemented yet  like the functionalities provided by BookKeeperAdmin.  For example  it does not expose a method to list available ledgers  comparable to BookKeeperAdmin#listLedgers().  low.    ### Changes    - Ledgers listing  - Simpler access to LedgerMetadata  - Ledger id inside LedgerMetadata    Master Issue: #2422      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2423 from nicoloboschi/bp42-new-api-list-ledgers
2020-10-08T04:29:45Z,2425,ISSUE #2425: Typo for method name  Descriptions of the changes in this PR:    ### Motivation    Rename the method name:  ```  PerChannelBookieClientPool#initialize  LedgerHandle#isWriteSetWritable  ```  And some typos.      Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2427 from Technoboy-/issue-2425  closes #2425
2020-10-08T04:28:33Z,2407,Create a Jenkinsfile to configure new ASF CI env  - create a Jenkinsfile configuration  - the file is copied from Andor Molnar's work on Apache ZooKeeper project    This will run the tests on JDK8 and JDK11 for every active branch on the repository  Reviewers: Sijie Guo <None>  This closes #2407 from eolivelli/fix/jenkinsfile
2020-10-08T04:27:40Z,2416,fix #2416 bookie format redundant clean ledgerDirs and indexDirs (#2417)  bookie format redundant clean ledgerDirs and indexDirs
2020-10-08T04:22:24Z,2429,Certificate role based authorization in Apache Bookkeeper. (#2429)  This feature allows a predefined set of services to be 'whitelisted' to be able to access bookkeeper based on their client certificates. _This feature is disabled by default._      **Motivation**  As BookKeeper and its supported services move to a cloud friendly service based architecture  it becomes of utmost importance to monitor and allow only certain qualified services to be able to access the data in BK.  We have TLS based authentication  however  any service with the rootCA can access Bookkeeper clusters which is not desirable.    **Changes**    To enable if  we have to set 2 configuration options in server config.    1. Set `bookieAuthProviderFactoryClass` config option to use BookieAuthZFactory  `bookieAuthProviderFactoryClass=org.apache.bookkeeper.tls.BookieAuthZFactory`    2. Set `authorizedRoles` to a comma separated list of roles present in client certificates' OU field.  `authorizedRoles=pulsar-broker-1 pulsar-broker-2`    Read further for details on how to implement these in your client certificates and how to wire it up.    So this feature can be broken down into two parts:        Certificate and roles      Server configuration for authorized roles    **Details:**  _Certificate and roles:_  Here is an example of how the SUBJECT field of a final certificate for Apache Pulsar running in the cloud would look like:        CN=apache.bookkeeper.org      O=apache-pulsar      OU=0:pulsar-broker-role;1:cluster-1      L=San Francisco      S=CA      C=US    This shows that this bookkeeper client certificate is owned by the apache pulsar service has the role ‘pulsar-broker-role’ for entities in ‘cluster-1’.  Only those services with pulsar-broker-role should be able to access it.  We can add more fields separated by commas to increase the upstream application clusters to be able to access this bookkeeper cluster.    For example: `OU=0:herddb-readonlyNode herddb-readwriteNode;1:herddb-cluster2`    Such separation of access based on services is paramount to keeping this secure as many upstream users of BookKeeper are financial institutions  databases and other services.    _Server configuration for authorized roles_  Once we have a certificate whose SUBJECT field has the OU attribute with the roles we want to authorize  on the Bookie side  we need to specify which roles are allowed.  We make this happen by introducing a server configuration option called `authorizedRoles`.  Since we have only static options  this will be set in stone as long as the bookie booted up with it.  If in case we need to change the allowed roles  we’ll need to stop the bookie  update the configuration file and then restart the bookie.  We can have multiple roles which are authorized as the OU field can have multiple comma separated values for roles.    This is a redo of stale PR #2355     Master Issue: #2354
2020-10-08T04:15:40Z,2430,Do not hide Maven log in github actions  Set log level to INFO.    fpj noticed that sometimes Maven build fails but the action completes successfully  Reviewers: Sijie Guo <None>  This closes #2430 from eolivelli/fix/info-github-actions
2020-10-06T08:53:15Z,2426,New Bookkeeper docusaurus based website  The Apache Bookkeeper website is a custom built website. While that is cool  its also additional maintenance for the PMC/Committers.  sijie suggested that we can follow the same path as the Pulsar project and have a docusaurus based website which  uses markdown heavily and is easier to manage and update.    This is a a WIP and this draft PR is to keep the PMC/Committers updated about the progress on the website.    The goal of this PR is to be able to create a basic skeleton of the website with the following pages (and their sub pages) fully fleshed out:  * Project  * Community  * Blog  * Landing page    So with this  the only thing that remains is the rest of the versioned documentation.  That work can be done in smaller modules as follow ups.  This PR will be opened for review and then can be merged once the above mentioned pages are declared to be complete.    cc eolivelli   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2426 from Ghatage/docusaurus-website-poc
2020-10-06T08:49:05Z,2428,Update Copyright year to 2020 in NOTICE files  Changes:  - update Copyright reference year to 2020 in main NOTICE file and in templates for the binary distributions  Reviewers: Nicolò Boschi <boschi1997@gmail.com>  Flavio Junqueira <fpj@apache.org>  Alessandro Luccaroni <luccaronia@gmail.com>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #2428 from eolivelli/fix/update-year-notice
2020-09-26T06:46:15Z,2419,fix doc (#2419)  the web site rendering error in section reference/cli/ updateBookieInLedger Options
2020-09-21T14:34:28Z,2414,Fix potential NullPointerException when local book keeper stop on exit  Descriptions of the changes in this PR:     - Fix potential NullPointerException when local book keeper stop on exit.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2414 from gaoxinge/fix
2020-09-21T09:44:58Z,2285,Spammy log when one bookie of ensemble is down #2285  Descriptions of the changes in this PR:        ### Motivation    Resolves #2285    ### Changes    We write "bookie server unavailable log" every 30 seconds per bookie client  Reviewers: Enrico Olivelli <eolivelli@apache.org  Sijie Guo  <sijie@apache.org>  This closes #2393 from nicoloboschi/fix/2285/spammy-logs  closes #2285
2020-09-19T11:32:03Z,2412,BP-41 make bookieId configurable (#2412)  ### Motivation  This is the bookie side implementation of BP-41    ### Changes  - add new `bookieId` configuration option  - implement Bookie#getBookieId  - add test cases  - make all BookKeeperClusterTestCase to use a random UUID as bookieId in order to increase code coverage  - add useUUIDasBookieId flag to BookKeeperClusterTestCase for test cases that require using hostname:port  - add a default BookieServiceInfo provider in tests  - enable Auditor to use BookieId and not BookieSocketAddress.toBookieId()  - use BookieId for LocalTransport addresses  - in Cookie.java rename BookieHost to BookieId (only in Java code  no data format changes)    Master Issue: #2396    Co-authored-by: Enrico Olivelli <enrico.olivelli@diennea.com>
2020-09-11T05:01:46Z,2378,Updated netty netty-boringssl and rocksdb  ### Descriptions of the changes in this PR:    -Updated netty netty-boringssl and rocksdb to latest version for aarch64 support  -Updated deprecated methods of rocksdb to remove compilation warning and resolve build failure of bookkeeper-server on amd64 and aarch64 platforms as Werror flag is enabled.    ### Motivation  Build of the bookkeeper-server package was failing on amd64 and aarch64 platforms.    ### Changes  There are many methods that are marked deprecated in rocksdb  but in use by bookkeeper package.  So updated those methods in bookkeeper package according to current rocksdb implementation.  Also updated netty netty-boringssl and rocksdb to latest version as they are having aarch64 support.    Master Issue: #2378     Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2379 from odidev/bookkeeper_aarch
2020-09-11T04:59:22Z,2409,fix maven-javadoc-plugin configuration.  Descriptions of the changes in this PR:    change the doclint configuration in pom.xml         ### Motivation    when you clone the project there is always warning in IntelliJ IDEA    ### Changes    change the doclint configuration in pom.xml  according to https://stackoverflow.com/questions/52547306/maven-javadoc-plugin-not-accepting-additionalparam-xdoclintnone-additionalpa      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2409 from WJL3333/fix_maven_pom_doclint_config
2020-09-10T17:57:20Z,2410,Upgrade the `vertx` version to 3.5.3  Signed-off-by: xiaolong.ran <rxlapache.org>    ### Motivation    As the https://github.com/apache/pulsar/issues/7931 said  CVE-2018-12540 has been raised on vertx 3.4.1 which is found in the pulsar dependencies.     ### Changes    - Upgrade the vertx version from 3.4.1 to 3.5.3  - Update license files      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2410 from wolfstudy/xiaolong/upgrade-vertx-version
2020-09-07T07:07:56Z,2404,BP-41 BookieId - client side implementation (#2404)  ### Motivation    This is the client side implementation of BP-41  see the design doc here  https://github.com/apache/bookkeeper/blob/master/site/bps/BP-41-bookieid.md    ### Changes    - Introduce BookeId concept  - Separated BookieId from BookieSocketAddress  - in LedgerMetadata we use now BookieId and not BookieSocketAddress  - a BookieId is basically a wrapper around a string  - BookieId is compatible with BookieSocketAddress  - In order to *resolve" a BookieId to a BookieSocketAddress we use a BookieAddressResolver  - the DefaultBookieAddressResolver implementation uses BookieServiceInfo metadata  read from ZooKeeper in order to discover the current network address of the Bookie (see BP-38)    Unfortunately the patch is huge due to the changes in the client API and LedgerMetadata. This patch tries to be the smallest set of changes  see #2396 for the list of the follow up patches that will be contributed.    Notes:  - The new client and the bookie is 100% compatible with previous Bookies and Clients (and integration tests were not touched)  - We are going to introduce  in a follow up patch  a flag to not use the metadata on ZooKeeper for the resolution of the BookieSocketAddress  in order to save resources  - The ability to configure a custom BookieId  different from the network address will come in a separate patch        Master Issue: #2396     Co-authored-by: Enrico Olivelli <eolivelli@apache.org>  Co-authored-by: Enrico Olivelli <enrico.olivelli@diennea.com>
2020-08-26T23:46:28Z,2402,Trigger flush if write cache is full while waiting (#2402)  Under heavy load  the write cache can fill up faster than it can be  flushed. When this occurs  something needs to trigger the  flush. Previously we've triggered the flush and then gone into a loop  waiting to be able to add to the write cache. However  if the  currently active write cache fills while we are waiting for the  flushing write cache to be flushed  we can end up in a situation where  nothing is able to flush because all I/O threads are waiting for the  write cache to empty.    The solution is to move the flush into the loop so that if we fail to  add to the cache  we flush the write cache if it is needed.    Co-authored-by: Ivan Kelly <ikelly@splunk.com>
2020-08-15T06:34:18Z,,Issue 2399 Move CI builds to ci-hadoop.apache.org - rename self job seed configuration in order to disable it temporary
2020-08-13T08:43:48Z,2327,Bookie Client add quarantine ratio when error count exceed threshold  ### Motivation  When bookie client read/write data from/to bookie servers  it will check the health of each connected server in sepecific interval. Once the amount of errors reached the threshold  the bookie server will be quarantined for server miniutes (configurated by `bookieQuarantineTimeSeconds`) by the bookie client.    In most circumstance  there are large amount of bookie clients connected to one bookie server  like pulsar broker. Once the bookie server runs in heavy load  most of bookie clients will receive errors and trigger quarantine in the same time  and then quarantine the server for several miniutes. After a few miniutes passed by  the quarantined server will be put back in the same time for most bookie clients  which will lead to periodic oscillation of in/out throughput of the server. It is the obstacle of tunning the throughput of the bookkeeper cluster.    ### Changes  I introduce a quarantine probability to determine whether to quarantine the server for the client  avoiding quaraninte the heavy load server in the same time for most of bookie client.    I also expose the quarantine stats to prometheus.  Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  This closes #2327 from hangc0276/bookieClient_Quarantine_ratio
2020-08-13T08:42:17Z,2358,Active ledgers on entry log file  Descriptions of the changes in this PR:    ### Motivation    For troubleshooting bookkeeper disk usage issues  having a tool to list the ledgers that are still alive in the entry log file is super useful.    ### Changes    * Add ListActiveLedgerCommand on BookieShell    Master Issue: #2358         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2369 from rudy2steiner/active_ledger_command
2020-08-13T08:39:44Z,2376,NP check for print BookieSocketAddress and a better format  Descriptions of the changes in this PR:        ### Motivation    NP check for print BookieSocketAddress and a better format to fix issues #2376 and #2371    ### Changes  * NP check for print BookieSocketAddress on listbookies command  * A better format mentioned on #2376     Master Issue: #2376 #2371         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #2380 from rudy2steiner/list_bookie
2020-08-13T08:38:23Z,2381,The latency of BenchThroughputLatency may be wrong due to Integer overflow when we do a large scale benchmark test  - When` latency.size` is  is more than `20 000 000`(e.g  `25000000`)   `(size * percentile) / 100` will be a negative number due to Integer overflow and the latency will be wrong.  - For example: `size `= 25000000  `percentile `= 99  `sampleSize `= -18199672  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2381 from maoling/BenchThroughputLatency-latency-wrong
2020-08-13T08:36:04Z,2392,Fix site 'responsbility' typo  ### Motivation    Found 'responsbility' typo  Reviewers: Sijie Guo <None>  This closes #2392 from nicoloboschi/fix-doc-typo
2020-08-13T08:33:57Z,2197,Issue #2197: bkctl binary distribution needs a 'logs' directory  Fix #2197    Create "logs" directory before run bkctl cli  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2389 from nicoloboschi/fix/2197/bkclt-logs  closes #2197
2020-08-13T08:32:26Z,2385,Issue #2385: NullPointerException in Zookeeper multiple operations execution with 3.6.1  Fix for #2385    Now we avoid to send out multiple operations request to ZooKeeper when there are not operations to execute  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2390 from nicoloboschi/fix/2385/zk-npe  closes #2385
2020-08-13T03:32:54Z,2397,BP-41 Separate BookieId from Bookie Network Address (#2397)  This is the design document of "BP-41 Separate BookieId from Bookie Network Address"    Master Issue: #2396
2020-07-27T13:06:29Z,2384,Track ZooKeeper errors as causes of ZKException  Descriptions of the changes in this PR:    ### Motivation    Every time a problem with ZK arises you don't see it in the exception chain of the BKException (in this case ZKException) and you end up with errors like:  ```  org.apache.bookkeeper.client.BKException$ZKException: Error while using ZooKeeper          at org.apache.bookkeeper.client.SyncCallbackUtils.finish(SyncCallbackUtils.java:83)          at org.apache.bookkeeper.client.SyncCallbackUtils$SyncAddCallback.addComplete(SyncCallbackUtils.java:251)          at org.apache.bookkeeper.client.AsyncCallback$AddCallback.addCompleteWithLatency(AsyncCallback.java:91)          at org.apache.bookkeeper.client.PendingAddOp.submitCallback(PendingAddOp.java:430)          at org.apache.bookkeeper.client.LedgerHandle.errorOutPendingAdds(LedgerHandle.java:1784)          at org.apache.bookkeeper.client.LedgerHandle$5.safeRun(LedgerHandle.java:574)  ```    ### Changes  Add a "cause" to every ZKException.    ### Notes  There are very few places that cannot be fixed because they are still using the old callback based mechanism without CompletableFuture. Those points are not changed in order to make the patch simple but still useful.          Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #2384 from eolivelli/fix/zkexception-chain
2020-07-27T06:59:51Z,2383,fix fillReadAheadCache stat bug  These code blocks will not be executed:  dbLedgerStorageStats.getReadAheadBatchCountStats().registerSuccessfulValue(count);  dbLedgerStorageStats.getReadAheadBatchSizeStats().registerSuccessfulValue(size);    ### Motivation    fix fillReadAheadCache stat bug    ### Changes    Replace return with break to exit the while loop      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #2383 from holmes07/master
2020-07-27T06:52:46Z,2344,[SITE] Improve the user experience of the site  ### Motivation    Improve the user experience of the site.    ![image](https://user-images.githubusercontent.com/20113411/82639390-325a3e80-9c3b-11ea-8a27-6347c6f7178c.png)    ### Changes    **Compare:**  https://lamber-ken.github.io/docs/4.10.0/getting-started/installation/  https://bookkeeper.apache.org/docs/4.10.0/getting-started/installation/    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Minardi <minardi.matteo@hotmail.it>  This closes #2344 from lamber-ken/improve-site
2020-07-24T02:53:56Z,2264,Issue 2264: Bookie cannot perform Garbage Collection in case of corrupted EntryLogger file  - in case of corrupted entry log file the bookie cannot perform GC  - handle the case of an unexpected negative entrysize    ### Changes    Stop scanning the file    Master Issue: #2264    Reviewers: Jia Zhai <zhaijia@apache.org>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #2373 from eolivelli/fix/issue2264-corruptedfile
2020-07-12T22:26:31Z,2372,[bookkeeper-site] fix latest version of bookkeeper website  ### Motivation    After generating website using [script](http://bookkeeper.apache.org/community/release_guide/#update-website)  it seems somhow it has updated site with incorrect version. I still have to find out where was the issue while generating the website. But fixing it for now to correct the version on website.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2372 from rdhabalia/fix_site
2020-07-09T09:37:30Z,2363,Create CI jobs for branch-4.11  Create CI jobs for releases on branch-4.11.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2363 from rdhabalia/4.11-infra
2020-07-08T06:27:44Z,2367,Add slack-digest script which generates per channel digest emails to …  …be emailed to the respective mailing lists.    Original script by merlimat from his [private repo](https://github.com/merlimat/slack-email-digest).  Copied to BK repo for use with the BookKeeper project.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2367 from Ghatage/slack-digest-jenkins
2020-07-08T06:22:20Z,2360,Release note 4.11 note  ### Motivation  Adding Release-note for 4.11.0    Please review commit https://github.com/apache/bookkeeper/pull/2361/commits/98dbb911353b4fa2262ae8ee79210f7b81bbf7c8    *Note:* This PR is based on #2360 . I will rebase this PR once #2360 is merged.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2361 from rdhabalia/release_note_4.11_note
2020-07-08T06:21:31Z,2370,Bump Python client version: 4.12.0-alpha-0  ### Motivation  Bump up python client version 4.12.0-alpha-0  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2370 from rdhabalia/py_412
2020-06-24T06:37:39Z,2364,Fix distributedlog Maven reactor module  - fix version  - add explicitly distributedlog to the modules of Stream project  - fix checkstyle on distributedlog  it wasn't executed    Reviewers: Rajan Dhabalia <rdhabalia@apache.org>  This closes #2364 from eolivelli/fix/fix-dlog-dep
2020-06-20T19:03:31Z,,[maven-release-plugin] prepare for next development iteration
2020-06-20T19:03:23Z,,[maven-release-plugin] prepare branch branch-4.11
2020-06-20T17:24:54Z,2362,Change Python client version to 4.11.0  According to the release guide  before cutting a release we have to remove the 'alpha' qualifier from Python client version  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2362 from rdhabalia/python_client
2020-06-18T07:04:18Z,2321,[BOOKIE-SHELL] Add cmd to change bookie-address into ledger metadata  ### Motivation  In a large bookie cluster environment  we frequently require a utility to change bookie-ip with a different bookie-ip in ledger's metadata in different scenarios such as:  1. Host Re-IP: requires updating ledger metadata and reuse the host without losing/copying data  2. Backup-restore usecase while doing cluster level data migration.  Therefore  we frequently need a tool to update bookie-ip with a new bookie-ip in existing ledgers' ensemble metadata.    ### Modification  Add CLI command to update bookie-id in ledger metadata.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  Jia Zhai <zhaijia@apache.org>  This closes #2321 from rdhabalia/reip
2020-06-12T15:06:31Z,2205,Ledger having a Empty segment is causing ReplicasCheck scrutiny to fail      Descriptions of the changes in this PR:    - in Auditor.ReadLedgerMetadataCallbackForReplicasCheck  fixing logic for empty segments  - added test for validating areEntriesOfLedgerStoredInTheBookie for empty middle segment  - added testcase for ledger with more empty segments.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2205 from reddycharan/fixreplicascheck
2020-06-12T15:05:39Z,2206,Remove lock from URManager’s state only if lock znode deletion has succeeded        Descriptions of the changes in this PR:    - in ZkLedgerUnderreplicationManager.releaseUnderreplicatedLedger remove ‘lock’   from ‘heldLocks’ only if lock znode deletion has succeeded.  - This is needed because  if RW.logBKExceptionAndReleaseLedger fails to delete   the lock znode  then it needs to be tried once more in the finally block of   'rereplicate(long ledgerIdToReplicate)’ before giving up and shutting down RW.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2206 from reddycharan/fixzklossissue
2020-06-08T12:24:32Z,2348,[BUG] Fix redundant statistics  ### Motivation    Fix redundant statistics  run 5 bookies `bin/bookkeeper localbookie 10`  then show bookieinfo    ```  ./bin/bookkeeper shell bookieinfo  ```    **Wrong result**  ```  Free disk space info:  10.101.52.18(10.101.52.18):5004:        Free: 34930151424(34.93GB)      Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5003:        Free: 34930151424(34.93GB)      Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5002:        Free: 34930151424(34.93GB)      Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5000:        Free: 34930151424(34.93GB)      Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5005:        Free: 34930151424(34.93GB)      Total: 255850758144(255.85GB)  Total free disk space in the cluster:   174650757120(174.65GB)  Total disk capacity in the cluster:     1279253790720(1.279TB)  ```    **Right result**  ```  Free disk space info:  10.101.52.18(10.101.52.18):5004:        Free: 33172185088(33.172GB)     Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5003:        Free: 33172185088(33.172GB)     Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5002:        Free: 33172185088(33.172GB)     Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5006:        Free: 33172185088(33.172GB)     Total: 255850758144(255.85GB)  10.101.52.18(10.101.52.18):5005:        Free: 33172185088(33.172GB)     Total: 255850758144(255.85GB)  Total free disk space in the cluster:   33172185088(33.172GB)  Total disk capacity in the cluster:     255850758144(255.85GB)  ```      Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2348 from lamber-ken/bk-info-command
2020-06-08T12:21:57Z,2352,[BOT] Implement ci bot using github-script  ### Motivation    `GitHub Action` is deprecated! Implement ci bot using `actions/github-script`  instead.    https://github.com/actions/github    https://github.com/actions/github-script    ### Changes    Implement ci using `actions/github-script`  based on https://github.com/zymap/bot/tree/v1.0.1  Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Yong Zhang <zhangyong1025.zy@gmail.com>  Sijie Guo <None>  This closes #2352 from lamber-ken/bot-v2
2020-06-08T12:18:01Z,2356,[BUG] Fix avoid invoke init drivers repeatedly  ### Motivation    static code blocks are always invoked when the class is initialized  when client connect to bookkeeper server  output repeat init log    ```  2020-06-04 10:10:24 751 INFO  org.apache.bookkeeper.meta.MetadataDrivers                    - BookKeeper metadata driver manager initialized  2020-06-04 10:10:24 753 INFO  org.apache.bookkeeper.meta.MetadataDrivers                    - BookKeeper metadata driver manager initialized  2020-06-04 10:10:24 753 INFO  org.apache.bookkeeper.meta.MetadataDrivers                    - BookKeeper metadata driver manager initialized  ```    ### Changes    Remove redundant initialization code.  Reviewers: Jia Zhai <zhaijia@apache.org>  Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2356 from lamber-ken/bk-init-repeat
2020-06-01T13:24:07Z,2351,[BUG] Fix class not found compilation failure  ### Motivation    Fix compilation failure after merged https://github.com/apache/bookkeeper/pull/2338    ![image](https://user-images.githubusercontent.com/20113411/83361037-3a8f4800-a3b8-11ea-9691-ea2842a18cfd.png)    ### Changes    Fix wrong package location.        Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@apache.org>  This closes #2351 from lamber-ken/misscleass
2020-05-30T18:02:22Z,2331,[CLEAN] Fix missing Override annotation  ### Motivation    **Code clean**    - An overridden method should be marked with Override annotation  once the method signature in the abstract class is changed  the implementation class will report a compile-time error immediately.    - Exception class names must be ended with Exception    - The negation operator is not easy to be quickly understood    ### Changes    - Fix missing `Override` annotation  - `NoIndexForLedger` to `NoIndexForLedgerException`   - `!(n.doubleValue() > max.doubleValue())` to `(n.doubleValue() <= max.doubleValue())`      Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2331 from lamber-ken/bb-clean
2020-05-30T18:01:27Z,2338,[BUG] Fix bookie port conflict when using LocalBookKeeper  ### Motivation    When using `bin/bookkeeper localbookie 10`  always output following exception  and run failed.    ```  java.net.BindException: Address already in use    at sun.nio.ch.Net.bind0(Native Method)    at sun.nio.ch.Net.bind(Net.java:433)    at sun.nio.ch.Net.bind(Net.java:425)    at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)    at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)    at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)    at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)    at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)    at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)    at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)    at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)    at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)    at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)    at java.lang.Thread.run(Thread.java:748)  ```      ### Changes    Use `PortManager` to obtain available ports based on initialPort.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2338 from lamber-ken/fix-localbookeeper-error
2020-05-30T18:00:15Z,2342,[CLEAN] Replace google.charsets with java.charsets  ### Motivation    `com.google.common.base.Charsets` and `java.nio.charset.StandardCharsets` exist in the code base at the same time  we can improve them.    ### Changes    Replace `com.google.common.base.Charsets` with `java.nio.charset.StandardCharsets`.    Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Sijie Guo <None>  This closes #2342 from lamber-ken/clean-charsets
2020-05-30T17:56:31Z,2346,[CLEAN] Replace com.google.common.base.Optional with java.util.Optional  ### Motivation    `com.google.common.base.Optional` and `java.util.Optional` exist in the code base at the same time.    ### Changes  Replace `com.google.common.base.Optional` with `java.util.Optional`.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  lamber-ken <None>  This closes #2346 from mino181295/merge-optional
2020-05-30T00:39:58Z,2350,[LOG] Change ERROR to INFO log level  ### Motivation    When use shell command  it output nothing caused by `ERROR` level.    **OLD** (output nothing)  ```  bin/bookkeeper shell readlogmetadata 0  ```  **FIX**  ```  bin/bookkeeper shell readlogmetadata 0    06:58:01 364 INFO  Print entryLogMetadata of entrylog 0 (0.log)  06:58:01 467 INFO  Failed to get ledgers map index from: 0.log : No ledgers map index found on entryLogId0  06:58:01 471 INFO  --------- Lid=0  TotalSizeOfEntriesOfLedger=59  ---------  ```    ### Changes    - Remove duplicate definition `VERBOSECONSOLE `  - Change `ERROR` to `INFO`    Reviewers: Sijie Guo <None>  This closes #2350 from lamber-ken/bk-improve-shell-log-level
2020-05-27T06:17:16Z,2311,ISSUE #2311: Adds support to decode metadata in the API that list ledgers  Descriptions of the changes in this PR:    ### Motivation    The current list ledgers API output the metadata in a serialized binary format  which is not friendly to human operators and external tools  and is not consistent with the output of the [API that gets the metadata](https://bookkeeper.apache.org/docs/4.9.2/admin/http/#endpoint-apiv1ledgermetadataledger_idledger_id).    ### Changes    The PR adds a parameter called `decode_meta`  and output the ledger metadata in decoded format when the parameter presents and the value of it is 'true'.    Master Issue: https://github.com/apache/bookkeeper/issues/2311      Reviewers: Sijie Guo <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2312 from fantapsody/decode_metadata  closes #2311
2020-05-27T06:15:52Z,2334,[CLEAN] remove duplicate property key in log4j.properties  ### Motivation    1. Fix duplicate key in log4j.properties  2. `http` to `https` in `README`    ### Changes    ![image](https://user-images.githubusercontent.com/20113411/82162451-369ef880-98d7-11ea-9217-777721bba545.png)    ![image](https://user-images.githubusercontent.com/20113411/82162816-d2c9ff00-98d9-11ea-967e-53646d351753.png)    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2334 from lamber-ken/clean-log
2020-05-27T06:14:01Z,2213,BP-38: Publish Bookie Service Info on Metadata Service  Starting from the implementation of the #2213 PR     ### Changes    - Adding the ability for the Bookie to advertise on the Metadata Service (ZooKeeper) the exposed ports/services  like the HTTP service  Metrics  - Implemented the Protobuf serialization of the BookieServiceInfo  - Added the command EndpointInfoCommand to retrieve remote bookie endpoint information both for "bkctl" and "bookkeeper shell".  Usage: `  bin/bookkeeper shell endpointinfo -bookieid <bookieaddress>  `    Master Issue: #2215   Proposal Doc: https://bookkeeper.apache.org/bps/BP-38-bookie-endpoint-discovery  Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2314 from mino181295/single/endpoint-discovery-impl
2020-05-23T12:41:59Z,2337,[BUG] Fix flaky testLedgerOpenAfterBKCrashed  ### Motivation    `BookieFailureTest#testLedgerOpenAfterBKCrashed` is a flaky test case  it cause some pr failed.    ```  org.apache.bookkeeper.client.BKException$BKLedgerRecoveryException: Error while recovering ledger    at org.apache.bookkeeper.client.SyncCallbackUtils.finish(SyncCallbackUtils.java:83)    at org.apache.bookkeeper.client.SyncCallbackUtils$SyncOpenCallback.openComplete(SyncCallbackUtils.java:157)    at org.apache.bookkeeper.client.LedgerOpenOp.openComplete(LedgerOpenOp.java:232)    at org.apache.bookkeeper.client.LedgerOpenOp$1.safeOperationComplete(LedgerOpenOp.java:201)    at org.apache.bookkeeper.client.LedgerOpenOp$1.safeOperationComplete(LedgerOpenOp.java:193)    at org.apache.bookkeeper.util.OrderedGenericCallback.operationComplete(OrderedGenericCallback.java:62)    at org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$TimedGenericCallback.operationComplete(BookkeeperInternalCallbacks.java:189)    at org.apache.bookkeeper.client.ReadOnlyLedgerHandle.lambda$recover$5(ReadOnlyLedgerHandle.java:295)    at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)    at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:736)    at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)    at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1977)    at org.apache.bookkeeper.client.LedgerRecoveryOp.submitCallback(LedgerRecoveryOp.java:136)    at org.apache.bookkeeper.client.LedgerRecoveryOp.onEntryComplete(LedgerRecoveryOp.java:202)    at org.apache.bookkeeper.client.ListenerBasedPendingReadOp.submitCallback(ListenerBasedPendingReadOp.java:67)    at org.apache.bookkeeper.client.PendingReadOp$LedgerEntryRequest.fail(PendingReadOp.java:170)    at org.apache.bookkeeper.client.PendingReadOp$SequenceReadRequest.sendNextRead(PendingReadOp.java:392)    at org.apache.bookkeeper.client.PendingReadOp$SequenceReadRequest.logErrorAndReattemptRead(PendingReadOp.java:435)    at org.apache.bookkeeper.client.PendingReadOp.readEntryComplete(PendingReadOp.java:581)    at org.apache.bookkeeper.proto.BookieClientImpl$2.safeRun(BookieClientImpl.java:369)    at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36)    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)    at java.lang.Thread.run(Thread.java:748)  ```    ![image](https://user-images.githubusercontent.com/20113411/82434983-3add3880-9ac6-11ea-96a3-24fbd71d16d4.png)    ### Changes    Test case should cover following situation  which shutdown any one of bookies  and try to open ledger with no bookie recovery.   ```  Bookies: 4  ensSize: 3  writeQuorumSize: 2  ackQuorumSize: 2  ```      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2337 from lamber-ken/bk-fix-wrong-test
2020-05-23T12:39:57Z,2343,[BUG] Fix wrong jdk version on install doc page  ### Motivation    We have adopted `lamada expression` and `stream api` in code base  it needs jdk1.8 at least.    e.g org.apache.bookkeeper.meta.zk.ZKMetadataClientDriver  ```  Override  public void setSessionStateListener(SessionStateListener sessionStateListener) {      zk.register((event) -> {          // Check for expired connection.          if (event.getType().equals(EventType.None) && event.getState().equals(KeeperState.Expired)) {              sessionStateListener.onSessionExpired();          }      });  }  ```    ![image](https://user-images.githubusercontent.com/20113411/82619119-a4b12b80-9c07-11ea-92e5-a1e3f5f9ff6b.png)    ### Changes    Update `Java Development Kit 1.6` to `Java Development Kit 1.8`    Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  This closes #2343 from lamber-ken/clean-fix-install-doc
2020-05-19T06:22:35Z,2321,[BOOKKEEPER-TOOL] Fix update rate-limiting for update-ledger command  ### Motivation  Right now  `UpdateLedgerCmd` provides option `updatespersec` to throttle number of writes on zk. However  it throttles number of reads instead writes. Because of that it takes long time to complete this command as it slows down the read instead applying throttling while writing to zk.    ### Modification  - Apply throttling while updating zk.  - If writes are being throttled then we also want to avoid accumulating reads so  added `maxOutstandingReads` option to manage max concurrent reads.    **Note:** We also need this change for #2321 .. so  I will rebase #2321 once this PR is merged.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2336 from rdhabalia/update_rate
2020-05-19T05:59:38Z,2301,Handle NPE when inet address is not able to resolve network address      Descriptions of the changes in this PR:    *Motivation*    ```  06:00:53.731 [BookKeeperClientScheduler-OrderedScheduler-0-0] ERROR org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy - Unexpected exception while handling joining bookie pulsar-tls-bookie-0.pulsar-tls-bookie.pulsar.svc.cluster.local:3181  java.lang.NullPointerException: null   at org.apache.bookkeeper.net.NetUtils.resolveNetworkLocation(NetUtils.java:77) ~[org.apache.bookkeeper-bookkeeper-server-4.10.0.jar:4.10.0]  ```    *TEST*    The `getAddress` is final method. It is hard to mock.    The method has been covered by other tests.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2301 from sijie/fix_network_utils
2020-05-19T05:58:44Z,2322,Add /api/v1/bookie/info REST API  Descriptions of the changes in this PR:    This adds an additional HTTP REST endpoint to expose the bookie's info (only storage numbers for now).    ### Motivation    I was looking for an HTTP endpoint that returned the info of only the current bookie  but couldn't find one. The only similar API I've found was `/api/v1/bookie/list_bookie_info`  however it connects to all bookies and may take a long time to respond (plus its response format is difficult to parse).    ### Changes    I've added a new API at `/api/v1/bookie/info` that returns a response like:  ```json  {    "freeSpace" : 0     "totalSpace" : 0  }  ```    Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #2322 from fretiq/add-bookie-info-api
2020-05-19T05:57:56Z,2305,Issue #2305: Bookies should not be allowed to come up without a cookie in metadata store.  ### Motivation  Currently we allow bookies to come up even if they don't have a cookie in the metadata store.  The cookie is an identity of a registered bookie and a bookie should not be allowed to come up without it.    ### Changes  Update handling of bookie boot up. Add test.  This scenario is rarely expected but can happen in case of corruption or errant deletion of znodes for cookies    Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2306 from Ghatage/disableBootup-Wo-Cookie  closes #2305
2020-05-19T05:56:26Z,759,QuorumCoverage should only count unknown nodes  The original patch was contributed by ivankelly in PR #2303  I have only fixed checkstyle and removed two tests that were wrong.    Quorum coverage checks if we have heard from enough nodes to know that  there is no entry that can have been written to enough nodes that we  haven't heard from to have formed an ack quorum.    The coverage algorithm was correct pre-5e399df.    5e399df(BOOKKEEPER-759: Delay Ensemble Change & Disable Ensemble  Change) broke this  but it still seems to have worked because they had  a broken else statement at the end. Why a change which is 100% about  the write-path changed something in the read-path is a mystery.    dcdd1e(Small fix wrong nodesUninitialized count when checkCovered)  went on to fix the broken fix  so the whole thing ended up broke.    The change also modifies ReadLastConfirmedOp to make it testable.  Reviewers: Sijie Guo <None>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #2333 from eolivelli/pr2303
2020-05-19T05:55:12Z,2329,Fix wrong module artifactId  ### Motivation    Fix wrong maven artifactId  there are three module use the same artifactId.    ### Changes    ![image](https://user-images.githubusercontent.com/20113411/81897790-e4fe2180-95e9-11ea-9449-92941fe4c1bc.png)      Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2329 from lamber-ken/bk-fix-wrong-artifactId
2020-05-17T12:14:36Z,2156,[BOOKIE-MTLS] add support of hostname verification  ### Motivation    Right now  bookkeeper-client is not able to perform [hostname-verification](https://tersesystems.com/blog/2014/03/23/fixing-hostname-verification/) when it connects to broker over tls. Hostname-verification feature is already implemented in almost all [http-client](https://github.com/apache/httpcomponents-client/blob/master/httpclient5/src/main/java/org/apache/hc/client5/http/ssl/DefaultHostnameVerifier.java) but it's not supported by [netty](https://stackoverflow.com/questions/13315623/netty-ssl-hostname-verification-support) yet. therefore  client should be able to perform hostname-verification as per [RFC-2181](https://tools.ietf.org/html/rfc2818#section-3.1)    ### Modifications    - added client configuration to enable hostname-verification (default disable)  - use [http-client](https://github.com/apache/httpcomponents-client/blob/master/httpclient5/src/main/java/org/apache/hc/client5/http/ssl/DefaultHostnameVerifier.java) but it's not supported by [netty](https://stackoverflow.com/questions/13315623/netty-ssl-hostname-verification-support) to perform hostname-validation rather adding custom logic.  - add httpclient-apache dependency into LICENSE and NOTICE files.    ### Result    Bookkeeper client will be able to perform hostname verification while creating ssl session with bookie.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2156 from rdhabalia/hostname
2020-05-17T11:50:23Z,2326,Bump jackson.version from 2.9.7 to 2.11.0 (#2326)
2020-05-17T11:47:36Z,2332,[CI] Using master action code for checking rerun commands   The rerun checks CI can not use ref to get all failure test actions. So I change to use sha of the commits to get all failure test actions to rerun. https://github.com/zymap/bot/pull/3/files  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2332 from zymap/fix-bot
2020-05-07T07:23:04Z,2106,Issue #2106: Update ZookKeeper dependency to 3.5.7  Descriptions of the changes in this PR:  Updated ZooKeeper dependency from 3.4.13 to 3.5.7  Excluded transitive dependency to netty-all.  Updated maven-shade-pluging configuration in 'distributedlog-core-shaded' project. Package 'org.apache.jute' was moved to a ZooKeeper dependency (org.apache.zookeeper:zookeeper-jute)  so i added the artifact to the artifactSet.    Updated license files:  - updated Zookeeper to 3.5.7  - removed Jline 2.11  - removed Netty 3.10.1  - added Zookeeper-jute 3.5.7    Master Issue: #2106       Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #2112 from dmercuriali/fix/#2106-update-zookeeper  closes #2106
2020-05-05T18:24:13Z,2294,Do not download SNAPSHOT during GitHub actions checks  ### Motivation    Sometimes GitHub actions checks are stuck in downloading SNAPSHOTs  there is not need for it    ### Changes    Add "-nsu" option to every Maven invokations and remove "-Dstream" that is now useless.  I am also adding "-B" that suppresses the "Progress" noise in logs    This fix relates to #2294  Reviewers: Anup Ghatage <None>  Matteo Minardi <minardi.matteo@hotmail.it>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #2323 from eolivelli/fix/no-snapshot-updates and squashes the following commits:  69b7817a4 [Enrico Olivelli] Add -B 3fa4523b2 [Enrico Olivelli] GitHub Actions: do not look for SNAPSHOT updates
2020-05-04T10:21:07Z,2309,Rerun the failed tests by comments  ---    *Motivation*    Currently  non-committers cannot rerun the failure tests  we need to  provide the ability to let non-committer to rerun the failed tests.  I wrote a Github Actions that can rerun the failed test by comments  `rerun failure tests` and add it to the bookkeeper ci process.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2309 from zymap/rerun-failure-job
2020-05-04T10:18:43Z,2212,Issue #2212: Fix issues in Bookkeeper Docker image that prevented containers from starting up  Descriptions of the changes in this PR:    ### Motivation    This PR modifies the Apache Bookkeeper Docker image to fix issues that were causing errors upon container bootstrap. The containers would exit soon after they were launched. See issue #2212 for a description of such an error.     Note that the problems that are fixed in this PR were observed:    * when launching containers using both Docker Compose and Kubernetes.    * when we were trying to upgrade the image to: `4.9.2`. It is highly likely that the issue is observed in other versions (except for `4.7.3`) too.    * when launching both a standalone container as well as a cluster of three containers.    ### Changes  The major changes made in this PR are as follows:   * Updates the `Dockerfile` to install `zk-shell`.   * Update the `init_bookie.sh` file to:     * Use `zk-shell` instead of `/opt/bookkeeper/bin/bookkeeper org.apache.zookeeper.ZooKeeperMain` command that doesn't work.     * Use `opt/bookkeeper/bin/bookkeeper shell initnewcluster` for initializing the cluster instead of the previously used command that did not work.     * Increase the time a container waits for an in-flight `initnewcluster` operation.     * Make the comments more descriptive.  * Modifies `bin/common.sh` to handle the condition when file `/proc/sys/net/ipv6/bindv6only` is missing in the system. This can prevent a container from starting up in some cases. We have seen this issue on some Kubernetes-based environments.   * Fixes errors in `docker-compose.yml` file.     *Note:* Some of the changes made in this PR are modeled after changes made by sijie for `v4.7.2` in PR #1666 .    ### Master Issue  #2212         Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2219 from ravisharda/startup-failure-docker-image  closes #2212
2020-05-02T07:51:49Z,2307,[DOC] SSLContextFactory -> TLSContextFactory  ### Motivation  From 4.6.0 SSLContextFactory has been changed into TLSContextFactory. but some of the doc not updated.    ### Changes  Updated related doc.  Reviewers: Sijie Guo <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2307 from jiazhai/doc_outdate_ssl
2020-05-02T07:50:45Z,2310,ISSUE #2310: Adds the autorecovery status service.  Descriptions of the changes in this PR:        ### Motivation    It would be convenient to support enable  disable  or check the status of autorecovery with REST API  just like what does in the toggle command.    ### Changes    Adds an API to enable  disable  and get the current status of autorecovery at `/api/v1/autorecovery/status`.    Master Issue: #2310       Reviewers: Sijie Guo <None>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Minardi <minardi.matteo@hotmail.it>  This closes #2313 from fantapsody/autorecovery_status  closes #2310
2020-04-21T20:37:04Z,2201,Bump libthrift from 0.9.3 to 0.12.0 (#2201)  Bumps [libthrift](https://github.com/apache/thrift) from 0.9.3 to 0.12.0.  - [Release notes](https://github.com/apache/thrift/releases)  - [Changelog](https://github.com/apache/thrift/blob/master/CHANGES.md)  - [Commits](https://github.com/apache/thrift/compare/0.9.3...v0.12.0)    Signed-off-by: dependabot[bot] <support@github.com>    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
2020-04-21T20:32:13Z,2271,Fix mistakes in documentation  Fix minor mistakes in the sentences of the documentation          Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #2271 from yehohanan7/patch-1
2020-04-21T20:27:30Z,2278,Add forkCount option to parallelize build and tests  ### Motivation  Current code forks a new JVM per module. (bookkeeper-server  bookkeeper-proto etc)  This means one fork per module for build and testing  no parallelism within the module where majority of the time goes.  We need parallelism within a module during the test execution so we can have the builds complete faster and have the artifacts shipped out quicker.    ### Changes  We use the maven surefire plugin but don't define the `forkCount` and hence set it to default of 1.  This means it executes each module with one thread.  This change sets `forkCount` to 5  enabling parallelism in testing and drastically reducing total turnaround time. (by about 2/3rds!)    *Total build+test time without this change*  ```  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------  [INFO] Total time:  01:06 h  [INFO] Finished at: 2020-03-05T02:01:29-08:00  [INFO] ------------------------------------------------------------------------  ```  *Total build+test time with this change*  ```  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------  [INFO] Total time:  18:23 min  [INFO] Finished at: 2020-03-05T02:38:22-08:00  [INFO] ------------------------------------------------------------------------  ```    ### Things to watch  Added parallelism may cause some flappers but with much trial and error I have come to the number `5`. The flappers are usually only from conflict in obtaining the same port number.  If needed  we can increase the retryCount  but as of now I consistently don't see any flappers at a `forkCount` of 5  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2278 from Ghatage/parallelizeBuildAndTests
2020-04-21T20:21:28Z,2274,ISSUE #2274: The 'metaformat' command does not delete 'idgen' znode  Descriptions of the changes in this PR:    ### Motivation    After `metaformat`  ledgerId does not count from 0 because，the `metaformat` command does not delete `idgen` znode.    ### Changes    In the `AbstractZkLedgerManagerFactory` avoid skipping the igen and idgen-long nodes    Master Issue: #2274  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2315 from mino181295/leadger-metaformat  closes #2274
2020-04-21T15:00:34Z,2317,Force to use Python grpcio less then 1.26.0  - it looks like a newer version of grpcio has been published and we were using open version range  - by forcing a closed ended range of version we workaround the error in integration tests  Reviewers: Jia Zhai <zhaijia@apache.org>  Matteo Minardi <minardi.matteo@hotmail.it>  This closes #2317 from eolivelli/fix/integration-tests-python
2020-04-13T07:26:07Z,2230,Fix batch read data in cache does not take effect  Descriptions of the changes in this PR:        ### Motivation    Fix batch read data in cache does not take effect    ### Changes    (Describe: what changes you have made)    Master Issue: #2230   Fixes: #2230         Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2231 from liudezhi2098/issue-branch-xxx
2020-03-31T19:12:16Z,2245,[bookie-server-config] Avoid considering empty journalDirectories  As discussed at : https://github.com/apache/pulsar/issues/6042    ### Issue  We have config management tool which manages bookie-server configuration and sets empty value of `journalDirectories` if bookie-server is still wants to use single journal dir: `journalDirectory`. In this case  bookie-server doesn't consider `journalDirectory` value and keeps empty list of `journalDirectories` which stats bookie with invalid configuration.    ### Expected behavior  Bookie-server should parse empty configuration `journalDirectories=` properly and avoid picking up empty value of `journalDirectories` and in that case  bookie-server should fallback to `journalDirectory` config.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2245 from rdhabalia/journal_dir
2020-03-30T00:16:40Z,2298,Allow build on JDK14 - upgrade Groovy compiler  ### Motivation    Current version of Groovy compiler for integration tests do not support JDK14    ### Changes    Update Groovy Compiler  Update dockerfile-maven-plugin as well      Reviewers: Sijie Guo <None>  This closes #2298 from eolivelli/fix/build-jdk14
2020-03-30T00:14:05Z,2300,Unable to enable TLS if using v2 protocol  Descriptions of the changes in this PR:    *Motivation*    TLS is enabled using `startTLS` but the `startTLS`  is a v3 protobuf request. So if the client is  configured to use v2 protocol  the client is not  able to decode `startTLSResponse`.    *Modifications*    This change is to improve the v2 protocol response handling for  handling `startTLS` response.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2300 from sijie/fix_tls_v2_protocol
2020-03-24T18:22:41Z,2297,Update Arquillian Cube to 1.18.2  ### Motivation  Update Arquillian to latest version  Reviewers: Rajan Dhabalia <rdhabalia@apache.org>  This closes #2297 from eolivelli/fix/update-arquillian
2020-03-23T16:02:26Z,2281,[BOOKIE-LEDGER-RECOVERY] Fix bookie recovery stuck even with enough ack-quorum response  ### Motivation  As discussed at https://github.com/apache/pulsar/issues/6505     Bk-client was not able to recover ledger which has 2 write/ack quorum and one of the bookie went down and recovery was kept failing and bookkeeper client was not able to recover the ledger.    **BK-Client log**    ```  20:44:43.721 [BookKeeperClientWorker-OrderedExecutor-1-0] ERROR org.apache.bookkeeper.client.ReadLastConfirmedOp - While readLastConfirmed ledger: 1234567 did not hear success responses from all quorums  20:44:43.721 [bookkeeper-io-12-27] ERROR org.apache.bookkeeper.proto.PerChannelBookieClient - Could not connect to bookie: [id: 0xb8b97441  L:/1.1.1.1:1234]/1.1.1.2:3181  current s  tate CONNECTING :   io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: No route to host: /1.1.1.2:3181          at io.netty.channel.unix.Errors.throwConnectException(Errors.java:112) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.unix.Socket.finishConnect(Socket.java:269) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.doFinishConnect(AbstractEpollChannel.java:665) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]          at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:642) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]          at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:522) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]          at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:423) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]          at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:330) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]          at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) [netty-common-4.1.31.Final.jar:4.1.31.Final]          at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.31.Final.jar:4.1.31.Final]          at java.lang.Thread.run(Thread.java:834) [?:?]  Caused by: java.net.ConnectException: finishConnect(..) failed: No route to host  ```    **Ledger metadata**    ```  BookieMetadataFormatVersion 2  quorumSize: 2  ensembleSize: 2  length: 0  lastEntryId: -1  state: IN_RECOVERY  segment {    ensembleMember: "1.1.1.1:3181"    ensembleMember: "1.1.1.2:3181"    firstEntryId: 0  }  digestType: CRC32  ```    **Root cause:**  Bookie should be able to recover ledger once it receives the response from total N (`(Qw - Qa)+1`) bookies. But it was waiting for a successful response from both quorums.  Reference: https://bookkeeper.apache.org/docs/4.5.0/development/protocol/    ### Modification  Bookie should be able to recover ledger once it receives the response from total N (`(Qw - Qa)+1`) bookies.    Reviewers: Diego Salvi <diego.salvi@diennea.com>   Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2281 from rdhabalia/recover_q
2020-03-23T11:29:13Z,2288, #2288: add metadata to StreamStorage ledgers (#2296)  Descriptions of the changes in this PR:    Added 'application' and 'component' metadata to StreamStorage ledgers.  application: bk-stream-storage-service  component: state-store / checkpoint-store    Master Issue: #2288    * #2288 add metadata to StreamStorage ledgers    * #2288 add metadata to StreamStorage ledgers    Co-authored-by: Dennis Mercuriali <dennis.mercuriali@diennea.com>
2020-03-23T11:28:41Z,2293,Remove old Jenkins stuff (#2293)  Remove old Jenkins stuff for GitHub Create Pull Request template  Co-authored-by: Enrico Olivelli <enrico.olivelli@diennea.com>
2020-03-18T23:51:46Z,2279,2279 fix NPE when exec readjournal command  Descriptions of the changes in this PR:  This PR fix NullPointerException when exec readjournal command  See issue #2279     Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2280 from aloyszhang/read-jounral
2020-03-18T23:32:42Z,18912362,[BOOKIE-MTLS] add BouncyCastleProvider for security-provider to avoid InvalidKeyException  ### Motivation  As described at: https://github.com/apache/pulsar/issues/5047    ### Issue    Sometimes user  sees `Invalid TLS configuration` at bookie while loading PKCS8Key file and that can be fixed by using Bouncycastle provider.: https://stackoverflow.com/questions/6559272/algid-parse-error-not-a-sequence/18912362#18912362    ```  2019-08-26 16:16:51 983 - ERROR - [BookKeeperClientWorker-OrderedExecutor-0-0:BookieClient179] - Security Exception in creating new default PCBC pool:   org.apache.bookkeeper.tls.SecurityException: Invalid TLS configuration   at org.apache.bookkeeper.tls.TLSContextFactory.init(TLSContextFactory.java:392)   at org.apache.bookkeeper.proto.PerChannelBookieClient.<init>(PerChannelBookieClient.java:266)   at org.apache.bookkeeper.proto.BookieClient.create(BookieClient.java:155)   at org.apache.bookkeeper.proto.DefaultPerChannelBookieClientPool.<init>(DefaultPerChannelBookieClientPool.java:71)   at org.apache.bookkeeper.proto.BookieClient.lookupClient(BookieClient.java:168)   at org.apache.bookkeeper.proto.BookieClient.addEntry(BookieClient.java:245)   at org.apache.bookkeeper.client.PendingAddOp.sendWriteRequest(PendingAddOp.java:131)   at org.apache.bookkeeper.client.PendingAddOp.safeRun(PendingAddOp.java:240)   at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36)   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)   at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)   at java.lang.Thread.run(Thread.java:745)  Caused by: java.lang.IllegalArgumentException: File does not contain valid private key: /my.key.pem   at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:267)   at org.apache.bookkeeper.tls.TLSContextFactory.createClientContext(TLSContextFactory.java:244)   at org.apache.bookkeeper.tls.TLSContextFactory.init(TLSContextFactory.java:363)   ... 12 more  Caused by: java.security.spec.InvalidKeySpecException: Neither RSA  DSA nor EC worked   at io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1045)   at io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1014)   at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:265)   ... 14 more  Caused by: java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : algid parse error  not a sequence   at sun.security.ec.ECKeyFactory.engineGeneratePrivate(ECKeyFactory.java:169)   at java.security.KeyFactory.generatePrivate(KeyFactory.java:372)   at io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1043)   ... 16 more  Caused by: java.security.InvalidKeyException: IOException : algid parse error  not a sequence   at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:351)   at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:356)   at sun.security.ec.ECPrivateKeyImpl.<init>(ECPrivateKeyImpl.java:73)   at sun.security.ec.ECKeyFactory.implGeneratePrivate(ECKeyFactory.java:237)   at sun.security.ec.ECKeyFactory.engineGeneratePrivate(ECKeyFactory.java:165)   ... 18 more  ```  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2151 from rdhabalia/bc-mtls
2020-03-18T23:10:18Z,2286,Do not log WARNING about PlacementPolicy for tests and simple setups    Descriptions of the changes in this PR:  Do not log 'New ensemble: {} is not adhering to Placement Policy. quarantinedBookies' in case of ensembleSize = 1      ### Motivation  In tests cases and in simple demos it is very annoying to see that log line at "WARNING" level.  If we are requiring only 1 bookie it is not a big deal to WARN that the placement policy is not "adhering"    Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>  Atri Sharma <None>  Sijie Guo <None>  This closes #2286 from eolivelli/fix/no-log-single-bookie
2020-03-18T23:08:25Z,2287,Add Journal PageCache flush interval control when journalSyncData is disabled  Descriptions of the changes in this PR:  ### Motivation  There was a weird behavior observed: when journalSyncData is disabled  it will trigger callbacks when the data is flushed to filesystem(PageCache) but still enqueue a fsync request to force write queue to fsync PageCache data to disk frequently. Though the fsync thread dequeue fsync request and execute fsync operation asynchronously  it still cause disk io util increase when fsync frequency high enough. when disk io util increase  especially reach 100%  it will block new journal file creation and lead to journal sync time increases to mutiple seconds.    ### Changes  when journalSyncData is disabled  we introduce `journalPageCacheFlushIntervalMSec` to control journal PageCache flush frequency to reduce disk io util  default value is 1000ms  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  This closes #2287 from hangc0276/bugfix
2020-03-18T23:05:04Z,2290,fix some stats monitor metrics  Descriptions of the changes in this PR:    The journalStats.getJournalQueueSize increase once and decrease twice  so this stat metric will be negative.    It increases in `logAddEntry` function and decrease in `QueueEntry recall` methord and Journal main thread run methord.    so we should delete the decrease in journal main thread run methord.    ```  queue.put(QueueEntry.create(                  entry  ackBeforeSync   ledgerId  entryId  cb  ctx  MathUtils.nowInNano()                   journalStats.getJournalAddEntryStats()                   journalStats.getJournalQueueSize()))  ```  Reviewers: Sijie Guo <None>  This closes #2290 from hangc0276/bugfix_metrics
2020-03-18T22:15:33Z,2291,Update Prometheus library to 0.8.1  Descriptions of the changes in this PR:  Update Prometheus library to 0.8.1    ### Motivation    We have an obsolete version    ### Changes    Update Prometheus library to latest version 0.8.1 and update NOTICE files    Reviewers: Sijie Guo <None>  This closes #2291 from eolivelli/fix/update-prom-081
2020-03-10T13:17:53Z,2284,fix bookie decommission sleep timeout value is negative bug  when decommission a bookie  and the ledger size of the bookie is big enough  the thread timeout will get negative  and the decommission operation will give up by throw exceptions as follow  ```  14:12:56.982 [main] INFO  org.apache.bookkeeper.client.BookKeeperAdmin - Count of Ledgers which need to be rereplicated: 272752  14:12:56.983 [main] ERROR org.apache.bookkeeper.bookie.BookieShell - Received exception in DecommissionBookieCmd   java.lang.IllegalArgumentException: timeout value is negative   at java.lang.Thread.sleep(Native Method) ~[?:?]   at org.apache.bookkeeper.client.BookKeeperAdmin.waitForLedgersToBeReplicated(BookKeeperAdmin.java:1528) ~[org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]   at org.apache.bookkeeper.client.BookKeeperAdmin.decommissionBookie(BookKeeperAdmin.java:1500) ~[org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]   at org.apache.bookkeeper.bookie.BookieShell$DecommissionBookieCmd.runCmd(BookieShell.java:2664) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]   at org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:277) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]   at org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:3081) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]   at org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:3172) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]  14:12:57.013 [main] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x206189927840052 closed  ```  The exception code is   ```  private void waitForLedgersToBeReplicated(Collection<Long> ledgers  BookieSocketAddress thisBookieAddress               LedgerManager ledgerManager) throws InterruptedException  TimeoutException {          int maxSleepTimeInBetweenChecks = 10 * 60 * 1000; // 10 minutes          int sleepTimePerLedger = 10 * 1000; // 10 secs          Predicate<Long> validateBookieIsNotPartOfEnsemble = ledgerId -> !areEntriesOfLedgerStoredInTheBookie(ledgerId                   thisBookieAddress  ledgerManager);          while (!ledgers.isEmpty()) {              LOG.info("Count of Ledgers which need to be rereplicated: {}"  ledgers.size());              int sleepTimeForThisCheck = ledgers.size() * sleepTimePerLedger > maxSleepTimeInBetweenChecks                      ? maxSleepTimeInBetweenChecks : ledgers.size() * sleepTimePerLedger;              Thread.sleep(sleepTimeForThisCheck);              LOG.debug("Making sure following ledgers replication to be completed: {}"  ledgers);              ledgers.removeIf(validateBookieIsNotPartOfEnsemble);          }      }  ```  the ledger size is `272752`  when computing sleepTimeForThisCheck    `ledgers.size() * sleepTimePerLedger` is `272752 * 10 * 1000 = 2727520000`，   the value exceeds max int value `2147483647`  it will turn to `-1567447296`  then the sleepTimeForThisCheck will be `-1567447296`.   Thread.sleep will throw `java.lang.IllegalArgumentException: timeout value is negative` exception  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #2284 from hangc0276/bug_fix
2020-03-09T11:30:00Z,2241,Fixes vertx can not receive the request body  ---    *Motivation*    Vertx can not receive the request body so that the REST API  can not work well if you have a request with body.    *Modifications*    - Add body handler for the vertx http service    *Verify this change*    - Pass the test `testHttpMethodsWithBody`    Descriptions of the changes in this PR:        ### Motivation    (Explain: why you're making that change  what is the problem you're trying to solve)    ### Changes    (Describe: what changes you have made)    Master Issue: #<master-issue-number>        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2241 from zymap/fix-can-not-read-body
2020-03-07T13:46:45Z,2233,Drop Maven Profile -Dstream (#2233)  ### Motivation    The "stream" profile enables the build of all of the additional packages regarding the 'table service'.  This profile complicates a lot every script and the Maven project.  As the stream storage service is now stable and used in production  it is better to always include those modules.  Regualar developers on bookkeeper-server module won't be affected by this change as it affects only the full build and the release process.    ### Changes  Modify every pom.xml in order to enable all of the parts of the pom.xml that would be enabled with '-Dstream'.  Modify release scripts by removing references to -Dstream  Modify bin/common.sh about the auto build feature  Modify Groovy scripts for Jenkins  Do not "shade" libthrift inside Distributed Log Jar    I did not modify the website because currently the precommit validation of the website is broken      * Remove stream Maven Profile    * Delete job_bookkeeper_precommit_java11.groovy    * Delete job_bookkeeper_precommit_java8.groovy    * Delete ticktoc.sh    * Restore -DstreamTests profile    Co-authored-by: Enrico Olivelli <eolivelli@apache.org>
2020-03-06T07:31:24Z,2236,Move the result of the BKCTL to the console by default  ### Motivation       ### Changes      Move the result of the BKCTL to the console    Master Issue: #2236    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2268 from SunDapeng1/branch-2267
2020-03-06T07:15:15Z,2178,2178: IOException Should Be Thrown When Journal Is Corrupted  Fixes #2178   Reviewers: Enrico Olivelli <eolivelli@gmail.com>   Sijie Guo <sijie@apache.org>  This closes #2257 from atris/2176
2020-02-24T07:08:23Z,2272,Move checkout action to v2 (#2272)
2020-02-17T13:03:15Z,2218,ISSUE #2218: Write customMetadata on ledgers created by DistributedLog  ### Changes    Enable DistributedLog to attach custom metadata to underlying ledgers when writing logs.    The user can pass a LedgerMetadata object to DistributedLogManager#openLogWriter and DistributedLogManager#openAsyncLogWriter. The LedgerMetadata object is then used by the Allocator backing the BKLogWriteHandler every time it must allocate a new ledger.    Master Issue: #2218      Reviewers: Enrico Olivelli <eolivelli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2254 from dmercuriali/2218-distributedlog-ledger-custom-metadata  closes #2218
2020-02-17T08:12:37Z,2260,Fix method order in order to make the execution of TestEntryLog predictable  ### Motivation    TestEntyLog reuses the entryLogger variable across test methods execution  resulting in an unpredictable execution.  We can at least make the test work consistently across environments using JUnit built-in FixMethodOrder annotation    ### Changes  FixMethodOrder(MethodSorters.NAME_ASCENDING)    Fixes #2260    Reviewers: Atri Sharma <atri@apache.org>  This closes #2266 from eolivelli/fix/flaky
2020-02-16T09:14:02Z,2265,Revert "bin/bookkeeper shell supports the -conf"  This reverts commit 163db4496d50cae198b80c9d88c14579f6d2e9f3.    Descriptions of the changes in this PR:  Commit 163db4496d50cae198b80c9d88c14579f6d2e9f3 broke "bookkeeper shell" command and integration tests are no more able to work      Reviewers: Sijie Guo <sijie@apache.org>  This closes #2265 from eolivelli/fix/revert-bad-fix
2020-02-13T16:44:00Z,,Add BP-38 to list of approved releases
2020-02-13T15:40:39Z,2215,BP-38 Publish Bookie Service Info on Metadata Service  This is the BP page for BP-38 Publish Bookie Service Info on Metadata Service    Master Issue: #2215         Reviewers: [Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  Flavio Junqueira <fpj@apache.org>  This closes #2214 from eolivelli/fix/bp-disc
2020-02-10T16:13:35Z,2259,Remove travis  Descriptions of the changes in this PR:    ### Motivation    The CI is moved to github actions.      ### Changes    Delete travis configuration.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2259 from sijie/remove_travis_ci
2020-01-31T12:26:16Z,2258,[CODE-STYLE] fix build failure for check-style  Descriptions of the changes in this PR:        ### Motivation    PR Validation build is failing with below exception:  ```  [ERROR] src/main/java/org/apache/bookkeeper/stream/storage/impl/cluster/ZkClusterInitializer.java:[35] (imports) ImportOrder: Import org.apache.bookkeeper.stream.storage.StorageConstants.getSegmentsRootPath appears after other imports that it should precede  [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (default-cli) on project stream-storage-service-impl: You have 1 Checkstyle violation. -> [Help 1]  ```  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2258 from rdhabalia/checkZk
2020-01-31T04:02:14Z,2256,Website: update Gemfile dependencies  Updating Gemfile dependencies to try fix Travis (see https://github.com/apache/bookkeeper/issues/2252)    Also fixing https://www.cvedetails.com/cve/CVE-2018-17567/ in the meantime    You can find the staging website  https://aluccaroni.github.io/bookkeeper-staging-site  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2256 from aluccaroni/master
2020-01-27T16:31:08Z,2255,Remove Jenkins precommit jobs and fix checkstyle errors    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2255 from sijie/remove_bookkeeper_tests
2020-01-25T15:47:26Z,2253,Website: add EOL tag to navbar  As discussed on the mailing list  I'm updating the BookKeeper website to reflect the EOLed version of BookKeeper    You can find the staging website  https://aluccaroni.github.io/bookkeeper-staging-site    Here a screenshot of the new navbar:  ![image](https://user-images.githubusercontent.com/11058798/72979770-587ce880-3dd9-11ea-86bf-de4a9aa694d3.png)    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo  This closes #2253 from aluccaroni/master
2020-01-22T10:22:56Z,2211,bin/bookkeeper shell supports the -conf  ### Motivation  `bin/bookkeeper shell ` support `-conf configuration`  but it doesn't work. bk_server.conf is loaded by default  even if the configuration is specified  ![image](https://user-images.githubusercontent.com/42792537/70309755-2a534180-1849-11ea-96b0-bd5b07a6b717.png)  Modify `bin/bookkeeper` to specify the configuration file as an absolute path      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2211 from SunDapeng1/branch-2211
2020-01-22T10:18:33Z,2242,[CI] Migrate the Jenkins CI to Github Action  ---    Master Issue: #2242    *Modifications*    Migrate theJenkins CI to Github Action    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2246 from zymap/migrate-ci
2020-01-22T10:16:34Z,2251,Website: Update Release Management for new Time Based Release Plan  As discussed on the mailing list  I'm updating the BookKeeper website to reflect the new Time Based Release Plan.    You can find the staging website  https://aluccaroni.github.io/bookkeeper-staging-site/community/releases/    Please note that I've removed the calendar since it was empty  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2251 from aluccaroni/master
2020-01-22T10:15:19Z,2250,[HOTFIX] [DOCS] fix error in leger api document  This PR :  1. add missing comma and dot  2. fix some layout error  in ledger-api document  Reviewers: Sijie Guo <None>  This closes #2250 from aloyszhang/hotfix-ledger-api
2020-01-22T10:13:47Z,2249,[HOTFIX] [DOCS] remove redundant word in protocol documents  This PR removes redundant word  "because" in protocol documents.    Reviewers: Sijie Guo <None>  This closes #2249 from aloyszhang/hotfix-protocol
2020-01-22T10:12:45Z,2248,[HOTFIX] fix the http endpoint component count error  This PR is a hotfix for "BookKeeper Admin REST API" document  the compoent of HTTP endpoints should be 5  but it's 4 in the doc.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2248 from aloyszhang/hotfix
2020-01-22T10:09:41Z,2237,Create ledgersRootPath recursively for 'bin/bookkeeper shell metaformat'  Create ledgersRootPath recursively for `bin/bookkeeper shell metaformat`. The existence of any parent znodes is not an error condition    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2237 from SunDapeng1/branch-2236
2020-01-22T10:08:17Z,2238,Increase the 'segment store path' in the 'Initializing stream cluster' log  Increase the 'segment store path' in the 'Initializing stream cluster' log  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2238 from SunDapeng1/branch-2238
2020-01-16T14:26:46Z,2235,[bookie-server] add support of client auto cert refresh  ### Motivation  as described at: https://github.com/apache/pulsar/issues/6010    Bookkeeper-client caches the tls certificates when it first tries to create a cnx with a given bookie and after that it never reloads certs even when valid certs changes on the file-system or new bookie-connection is created. Because of that as soon as client certs expires and bk-client disconnects from bookie then bk-client is not able to reconnect to bookie until we restart the bk-client process. and we see below TLS exception at bk-client.    ```  19:43:03.983 [bookkeeper-io-12-45] ERROR org.apache.bookkeeper.proto.PerChannelBookieClient - Unexpected exception caught by bookie client channel handler  io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem          at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:472) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]          at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:799) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:433) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:330) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.32.Final.jar:4.1.32.Final]          at java.lang.Thread.run(Thread.java:834) [?:?]  Caused by: javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem          at io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback.handle(ReferenceCountedOpenSslClientContext.java:273) ~[netty-all-4.1.32.Final.jar  :4.1.32.Final]          at io.netty.internal.tcnative.SSL.readFromSSL(Native Method) ~[netty-tcnative-boringssl-static-2.0.20.Final.jar:2.0.20.Final]          at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:575) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1124) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1236) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1279) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:217) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1301) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1215) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1249) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]          at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]          at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]          ... 14 more  ```    ### Modification  Add support at bk-client to reload certs once they have changed on file-system.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  This closes #2235 from rdhabalia/bk_client_cert
2020-01-07T08:15:28Z,2224,ISSUE #2224: Config ServerConfiguration with setAllowLoopback(true) for Unit Tests  ### Motivation    Unit test fails when build master branch    ### Changes    Config ServerConfiguration with setAllowLoopback(true) in the class GarbageCollectorThreadTest    Master Issue: #2224     Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2226 from coolbeevip/ISSUE-2224  closes #2224 and squashes the following commits:  fdba4fbce [Lei Zhang] ISSUE-2224 set allowLoopback is true 2ff7ca5af [Enrico Olivelli] Account Apache Thrift and Http Client files in LICENSE files - Fix build on Travis 2bbf58e01 [Dapeng] Fixed bin/bookkeeper shell readjournal 9d61fb4fe [Dapeng] [DOCS] Modify “Using Autoecovery” recover does not support the specified target bookie 2ca4025e4 [Anup Ghatage] [DOCUMENTATION] Add doc for decommissioning bookie process 62e3b9b6f [Enrico Olivelli] Make 4.9.2 as stable 40f349ccf [Enrico Olivelli] Bump Python client version b1991e6b3 [Enrico Olivelli] Release notes for 4.10 9f4b1359e [冉小龙] Fix the log level of not support Sse42Crc32C 557dfe90f [Jennifer Huang] [DOCS] Update coding_guide.md 43f8cd74f [Enrico Olivelli] Add -Dtwitter to fix auto-build f57962bcc [Matteo Merli] Removed mutex contention on BufferedChannel f5d2e5931 [Enrico Olivelli] Add -Dtwitter to release scripts in order to build Twitter stats providers 7efa8e89e [Enrico Olivelli] Fix version in modules that are not active by default d49b46f4e [Enrico Olivelli] [maven-release-plugin] prepare for next development iteration 5a4213bb0 [Enrico Olivelli] [maven-release-plugin] prepare branch branch-4.10 f8a5974a5 [Charan Reddy Guttapalem] Fix firstStoredEntryId logic in LedgerFragment 8559126a3 [Anup Ghatage] Issue #2145: Make ledgerDirs in Cookie consistent across generating a…
2020-01-06T07:10:12Z,2232,Remove Twitter Libraries  - Twitter Stats Providers  - Twitter Http Server    Descriptions of the changes in this PR:  - Drop all stats providers used only by Twitter and Twitter Http server   - Fix BookKeeper Server packaging  it did not include Netty epoll transport Linux binding (no .so file)  - Adapt license stuff accordingly    - Drop third party libs needed by Twitter stuff  most notably: Scala runtime and Netty 3.10      ### Motivation    Those modules are apparently no more in use and especially they are no more mantained.  It is better to remove them  the code is still on git  but we won't be building it any more or bundling  useless third party libraries in our releases.     ### Changes  - remove twitter stats providers  - remove twitter http server  - adjust LICENSE file for binary distribution (bookkeeper-all)  - fix pom.xml files  - remove -Dtwitter from release files  - remove -Dtwitter from bin/common.sh  - remove other links to Twitter stuff in current documentation       Master Issue: #<master-issue-number>        Reviewers: Dave Rusek <dave.rusek@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo  This closes #2232 from eolivelli/fix/drop-twitter-stuff
2020-01-04T13:10:31Z,2227,Account Apache Thrift and Http Client files in LICENSE files - Fix build on Travis  fixes #2227    Descriptions of the changes in this PR:  - Account Thrift and Http client in LICENSE files.  - Force using Maven 3.6.3 in MacOSx builds on Travis  - Test only with -Dstream profile      ### Motivation    Those files are inside the binary packages but they are not taken into account in LICENSE file.  Travis started to report errors when Travis updated Maven version to 3.6.2 in Linux machines  MaxOSx machines are still with 3.3.9 and the build does not bundle all of the needed jars !     Master Issue: #2227         Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  This closes #2228 from eolivelli/fix/license-files
2019-12-22T17:47:22Z,2210,Fixed bin/bookkeeper shell readjournal  ### Motivation  An error occurred while executing `bin/bookkeeper shell readjournal`   ![image](https://user-images.githubusercontent.com/42792537/70305222-d80d2300-183e-11ea-8759-88dfcc90b5be.png)   the journal file name is hexadecimal  but when readjournal is executed  the journal name is resolved in base 10  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo  This closes #2210 from SunDapeng1/branch-2208
2019-12-09T08:08:25Z,2207,[DOCS] Modify “Using Autoecovery” recover does not support the specified target bookie  ### Motivation   `bin/bookkeeper shell recover` only receives one parameter i.e. failed bookie. According to [recovery](https://bookkeeper.apache.org/docs/latest/admin/autorecovery/#manual-recovery) it is useless to specify ZooKeeper address and target bookie.  ![image](https://user-images.githubusercontent.com/42792537/68930100-a3babf80-07c8-11ea-90e1-320cfac1b77b.png)  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2207 from SunDapeng1/branch-2207
2019-11-19T01:30:53Z,2199,[DOCUMENTATION] Add doc for decommissioning bookie process  ### Motivation  Documentation on how to decommission a bookie safely.    ### Changes  Added `decommission.md`  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2199 from Ghatage/decomission-documentation
2019-11-19T01:28:47Z,2200,Make 4.9.2 as stable  Descriptions of the changes in this PR:        ### Motivation    4.10.0 has been released  4.9.2 has been running in production for a while on several known projects. We can mark 4.9.2 as current 'stable'     ### Changes  Update website config.  Fix DLog version.          Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <None>  This closes #2200 from eolivelli/fix/change-stable-492
2019-11-11T20:47:22Z,,Bump Python client version
2019-11-11T09:04:43Z,2165,Release notes for 4.10  Please only consider this commit https://github.com/apache/bookkeeper/commit/0d91a95f306031d85c6a8195b0e6d73523cbfc0a as it contains the release notes.  The previous commit is only the preparation for the website.  Reviewers: Sijie Guo  This closes #2165 from eolivelli/fix/release-notes-410
2019-11-07T11:25:41Z,2198,Fix the log level of not support Sse42Crc32C  Signed-off-by: xiaolong.ran <ranxiaolong716gmail.com>    ### Motivation    When users are using Apache Pulsar  they will encounter the following error about `Sse42Crc32C`. But in fact it does not affect the correctness of Apache Pulsar use. But the error level log information will cause confusion for the user.  ```  10:12:49.119 [pulsar-ordered-OrderedExecutor-0-0-EventThread] ERROR org.apache.bookkeeper.proto.checksum.CRC32CDigestManager - Sse42Crc32C is not supported  will use a slower CRC32C implementation.  ```        ### Changes    Replace the log level of `not support Sse42Crc32C` from error to warn.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2198 from wolfstudy/xiaolong/sse42Crc32C
2019-11-06T06:04:19Z,2196,[DOCS] Update coding_guide.md  ### Motivation  The link to `OrderedSafeExecutor` does not work.    ### Changes  Correct the link to `OrderedExecutor`.  Reviewers: Sijie Guo <None>  This closes #2196 from Jennifer88huang/patch-1
2019-11-03T10:41:48Z,2195,Add -Dtwitter to fix auto-build  Descriptions of the changes in this PR:        ### Motivation    Make bin/bookkeeper standalone work again    ### Changes      Add -Dtwitter in order to activate "Twitter" profile and build Twitter stats providers.          Reviewers: Sijie Guo <None>  This closes #2195 from eolivelli/fix/add-twitter-common
2019-10-31T10:17:58Z,1228,Removed mutex contention on BufferedChannel  ### Motivation    Contention on `BufferedChannel` between the journal thread and the ForceWriteThread was introduced in #1228.    `unpersistentBytes` is only used if `unpersistedBytesBound > 0`  which is not true by default. We shouldn't be paying the penalty if not needed.    Also `position` doesn't need to be `AtomicLong` since it's only updated while the mutex is taken. Using a volatile will have the same effect with less overhead.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #2187 from merlimat/buffered-channel-contention
2019-10-30T14:09:53Z,2192,Add -Dtwitter to release scripts in order to build Twitter stats providers  ### Motivation    With this commit we disable Twitter providers from default build  https://github.com/apache/bookkeeper/commit/b689d8313654de21759b2e2d47210b75434038c3    This leads to inconsistences during the release process    ### Changes    Add -Dtwitter to every release script          Reviewers: Sijie Guo <None>  This closes #2192 from eolivelli/fix/fix-release-scripts
2019-10-30T12:16:14Z,,Fix version in modules that are not active by default
2019-10-30T11:57:06Z,,[maven-release-plugin] prepare for next development iteration
2019-10-30T11:56:44Z,,[maven-release-plugin] prepare branch branch-4.10
2019-10-29T13:34:06Z,2180,Fix firstStoredEntryId logic in LedgerFragment  Descriptions of the changes in this PR:    - firstStoredEntryId logic in LedgerFragment should return '-1'  only if no bookie contains any entry of that LedgerFragment.    This is a serious issue  in our cluster we observed for a particular ledger  which is marked under replicated  it is returning -1 for firstStoredEntryId and 10 for lastStoredEntryId. Because of that the ReplicationWorker  tries to replicate entryId ‘-1’ and as expected it keeps failing while reading it. So ledger remains under replicated for ever.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2180 from reddycharan/fixfirststoredentryidcom and squashes the following commits:  3cb8ae443 [Charan Reddy Guttapalem] change Long to long 9d9db66dd [Charan Reddy Guttapalem] minor log changes 37b025ccb [Charan Reddy Guttapalem] review comments 6e63fbb1e [Charan Reddy Guttapalem] review comments dbf836b32 [Charan Reddy Guttapalem] Fix firstStoredEntryId logic in LedgerFragment 2978a1a39 [Charan Reddy Guttapalem] Fix firstStoredEntryId logic in LedgerFragment
2019-10-29T12:50:02Z,2145,Issue #2145: Make ledgerDirs in Cookie consistent across generating a…  …nd setting    Descriptions of the changes in this PR:    ### Motivation    In PR #1794 we brought in a way to generate a cookie from command line.  However during generation  we have to also encode the ledger dirs by default.    ### Changes    Added encoding of ledger dir paths while setting the ledger dirs in a generated cookie in `GenerateCookieCommand.java`.  Tweaked existing test to include more than one ledger path for test coverage.    Master Issue: #2145   Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2146 from Ghatage/community/2145  closes #2145 and squashes the following commits:  2de21f854 [Anup Ghatage] Fix checkstyle 4695675ff [Anup Ghatage] Revert to handling encoding like in generateCookie()  Add another test 90d02136a [Anup Ghatage] Change GenerateCookieCommandTest's to encodeDirPaths while creating cookies d8da5153a [Anup Ghatage] Issue #2145: Make ledgerDirs in Cookie consistent across generating and setting
2019-10-26T03:53:32Z,2183,[DOC] Improve the Manual deployment document.  ### Motivation  Following the [Manual deployment](https://bookkeeper.apache.org/docs/latest/deployment/manual/)  startup bookie may have failure since there is no znode(e.g. /ledger) about bookie in zookeeper.     ### Changes    Modify the site/docs/latest/deployment/manual.md  set up cluster metadata before startup of bookie.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2183 from SunDapengcmss/branch-2183
2019-10-25T07:20:21Z,2184,Upgrade Apache Parent Pom to 19  Descriptions of the changes in this PR:  Update the reference to the common Apache Parent POM  version 19      ### Motivation  Be up to date with ASF-wide configurations    ### Changes  Change the version        Reviewers: Sijie Guo <None>  This closes #2184 from eolivelli/fix/update-apache-parent
2019-10-24T21:39:01Z,2176,Journal scan should throw IOException when it reads negative length  Descriptions of the changes in this PR:    ### Motivation    During journal replay  we can encounter negative length value if there is journal corruption. Currently  due to this bug  we pass negative length to limit a buffer  which throws IllegalArgumentException.    ### Changes    Updated the Journal class to throw `IOException` with a clear message  instead of unclear `IllegalArgumentException`.    Master Issue: #2176    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #2177 from karanmehta93/master
2019-10-24T21:31:19Z,2186,Fix logic of areEntriesOfLedgerStoredInTheBookie      Descriptions of the changes in this PR:    - in BookKeeperAdmin.areEntriesOfLedgerStoredInTheBookie method  segmentNum  is not correctly incremented while iterating over the segments of  the ledger. Fixing the logic of it.  - this issue caused decombookie bookieshell command to wait forever.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2186 from reddycharan/fixareledgersstoredcom
2019-10-23T08:49:00Z,2185,[DLOG] LogReader shouldn't be added to pending if not locking  The pendingReaders set in BKDistributedLogManager exists so that if  the manager is closed which the lock is being acquired for a reader   that reader will be closed (even though it hasn't been returned to the  client).    In the case that the reader is opened without a lock  there  is not async action being performed. Previously we were also adding  these readers to the pendingReaders  but they were never being removed  from the pendingReaders  causing a memory leak. This change avoids  adding no-locking readers to pendingReaders.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2185 from ivankelly/orphan-reader
2019-10-17T21:38:37Z,2181,Update maven version to 3.6.2 for Jenkins  Descriptions of the changes in this PR:    ### Motivation    Update maven version to 3.6.2 for Jenkins build environments  since maven 3.6.0 is no longer available in the environment.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #2181 from karanmehta93/updateMavenVersion
2019-10-11T15:22:54Z,2173,Call exceptionHandler if Bookie.start fails with exception.    Descriptions of the changes in this PR:    When main thread of Bookie/BookieServer has exited with exception while starting Bookie   Bookie process shouldn't be alive because of any non-daemon thread that has already  started.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Karan Mehta <k.mehta@salesforce.com>  This closes #2173 from reddycharan/fixbookiestartup
2019-10-10T15:31:08Z,2138,Add documentation for ByteBuffer lifecycle when adding entries  Descriptions of the changes in this PR:    Adding documentation for the issue [here](https://github.com/apache/bookkeeper/issues/2138) as discussed [here](https://github.com/apache/bookkeeper/issues/2138#issuecomment-522099668).    Master Issue: #2138     Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2175 from karanmehta93/master
2019-10-02T18:10:16Z,2166,Enhance deferLedgerLockReleaseOfFailedLedger in ReplicationWorker  Descriptions of the changes in this PR:    **Issue:** In the past  ReplicationWorker (RW) retrial logic is enhanced to backoff  replication after threshold number of replication failures of a ledger. This is  to help in a pathological situation where data (ledger/entry) is unavailable.  But this is sub-optimal solution  since there is possibility that each RW can  try recovering a ledger threshold number of times  before a RW defers  ledgerLockRelease. Also each time a RW tries to recover it would read entry/fragment  sequentially and writes to new bookies until it finds a missing entry (completely  unavailable) before failing on replication of that ledger. This is done for  each retrial and it bloats the storage and overreplication need to detect and  delete it  which runs once a day by default. So because of this cluster can  run out of storage space and may become RO cluster. Also this puts quite a bit of  load on cluster in vain.    **So the new proposal is to**  - On each RW. remember the state in addition to the counter. State must include the entries which RW failed to read.  - Counter and state must kept around in each RW node. And exponential backup should be used for deferLedgerLockReleaseOfFailedLedger  - During next attempt by RW  try to read the failed entries which is noted in the state. Read must be successful before proceeding replicating.  - With this model we avoid duplicate copies on each attempt. At the most each RW will create only one copy  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #2166 from reddycharan/enhancereplication
2019-10-02T08:05:42Z,1819,Avoid throwing exception when doing EntryLogger.internalReadEntry  ### Motivation    In the refactoring part of #1819  the `internalReadEntry()` behavior was changed into throwing an exception when reading an entry from a different ledger.     This is causing a big performance issue when doing read-head from the ledger storage  because we keep reading from the current entry log until we find an entry from a different ledger.   Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2172 from merlimat/read-internal
2019-10-02T08:02:54Z,1648,Update bc tests to include versions up to 4.9.x  ### Motivation    With backward compatibility tests we should cover the compatibility of current version against old versions  current we are only test current version against ancient releases.    This change supersedes #1648 from sijie     ### Changes    Change the list of versions to test clients and bookie upgrade        Reviewers: Matteo Merli <mmerli@apache.org>  This closes #2171 from eolivelli/update_bc_tests
2019-09-27T14:00:55Z,2163,Change Python client version to 4.10.0  According to the release guide  before cutting a release we have to remove the 'alpha' qualifier from Python client version  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #2163 from eolivelli/fix/python-client
2019-09-27T13:59:46Z,2169,Fix tests and upgrade libs to make tests pass on JDK13  - Upgrade Mockito and PowerMock with a version that support JDK12+  - Fix bash script tests  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #2169 from eolivelli/fix/make-tests-pass-jdk13
2019-09-26T07:06:44Z,2132,Make the project buildable with JDK12 and JDK13  Upgrade Lombok to 1.18.10  Upgrade Groovy and Groovy Compiler and Maven Compiler plugin  Fix an inverted if that prevented **bkctl** to work with JDK11+ and it made GC LOGGING opts not applied with JDK8 (in bkctl command)  a regression introduced by #2132  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #2160 from eolivelli/fix/build-jdk12
2019-08-29T18:05:45Z,2154,[BOOKIE] auto refresh tls cert at bookie-server  ### Motivation    Right now  if certs are rotated then bookie doesn't pick up refresh cert and we have to restart the bookie. So  we need a way to auto refresh certs into bookie.    ### Modification    - add configuration `tlsCertFilesRefreshDurationSeconds` to auto refresh cert  - bookie checks last modified date of the cert after auto-refresh duration and refresh certs if requires    ### Result    - Bookie can refresh certs without restart.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2154 from rdhabalia/auto_mtls
2019-08-27T05:47:47Z,2152,Issue #2152: Amend disk usage warn log  ### Motivation    Fixes #2152    ### Changes    Replace `diskUsageThreshold` by `diskUsageWarnThreshold` when disk usage threshold doesn't trigger first.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2153 from murong00/branch-2153  closes #2152
2019-08-26T18:16:08Z,2150,Improve journal throughput when journalSyncData is disabled.  Descriptions of the changes in this PR:    ### Motivation    There was a weird behavior observed: when `journalSyncData` is disabled  the journal throughput decreased with multiple journal dirs on same journal disk.    The problem is when `journalSyncData` is disabled  we still sync data to disk when rolling the journal file. The sync time increases to multiple seconds  because it has to flush all the files to disk and wait the whole sync operation to be completed.    ### Changes    when `journalSyncData` is disabled  we trigger callbacks when the data is flushed to filesystem but still enqueue a fsync request to force write queue to make sure we still fsync data frequently.    Also added a journal perf tool to do performance testing on journal.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2150 from sijie/journal_perf
2019-08-26T18:15:15Z,2147,Journal should respect to `flushWhenQueueEmpty` setting    Descriptions of the changes in this PR:    *Motivation*    Currently journal doesn't respect to `flushWhenQueueEmpty` setting.  Even `flushWhenQueueEmpty` is set to false  we can still see flushes  triggered due to queue empty.          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #2147 from sijie/fix_flush_when_empty
2019-08-23T11:15:59Z,2137,Simplify if statements  ### Changes    * Simplify `if` statements where it is possible (mainly for `if` statements returning boolean values)  * Remove redundant semicolons  * Remove the `close` method where the resource is used withing the try-with-resources block  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2137 from vzhikserg/simplify-if-statements
2019-08-13T17:53:39Z,2141,Replicascheck comprehensive testcases.    Descriptions of the changes in this PR:    - adding comprehensive testcases for newly added  scrutiny - replicasCheck.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2141 from reddycharan/replicaschecktest
2019-08-05T14:28:17Z,2139,Replace C style array declaration with Java style  ### Motivation    The C style array definitions look weird for a Java developer.    ### Changes    All C style array declarations were updated with the Java array declarations and the stylechecker rule was added to enforce the Java way.   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2139 from vzhikserg/replace-c-style-array-declaration-with-java-style
2019-07-29T11:52:20Z,2129,Remove redundant array creation  ### Changes    Remove redundant array creation in log statements to simplify the code.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2129 from vzhikserg/remove-redundant-array-creation
2019-07-29T11:49:00Z,1912,Make default Bookie scripts work on JDK11+  - detect new Java versions in bin/common.sh  - use different defaults on JDK8 vs JDK11+    Descriptions of the changes in this PR:  Change distribution scripts in order to detect a JDK newer then JDK8 and set default JVM options accordingly.    ### Motivation    Because I want that BookKeeper tools run out of the box with JDK11    ### Changes  1) detect a JDK newer then JDK8  but checking if exists $JAVA_HOME/bin/jshell (this is quite robust  better then parsing some Java version string)  2) use new defaults for JDK11  in particular do not enable experimental and deprecated options  use the new [Java Unified Logging](https://openjdk.java.net/jeps/158) log system for GC    Please note the output of "Java Unified Logging" is very different from the old pre-Java9 one and   options are different  there is no simple port.    Master Issue: #1912        Reviewers: Sijie Guo <None>  This closes #2132 from eolivelli/fix/run-jdk11
2019-07-29T06:11:14Z,2127,Issue #2127: Allow user override default SASL service name bookkeeper  Descriptions of the changes in this PR:  default SASL service name "bookkeeper" can be override by JVM property "bookkeeper.sasl.servicename"    ### Motivation        ### Changes    Instead of use a constant value  it would read from JVM property first  if it doesn't exists  then use default value from constant variable SaslConstants.SASL_BOOKKEEPER_PROTOCOL    Master Issue: #2127        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo  This closes #2128 from 29x10/master  closes #2127
2019-07-29T06:08:44Z,2135,Upgrade to latest Maven version 3.6.1  ### Motivation  - ASF CI does not support Maven 3.5.0  - Maven 3.5.0 is a very old version    ### Changes    - update Jenkins DSL files to "Maven (latest)"  - update release procedure to Maven 3.6.1  - update docker based dev environment to use Maven 3.6.1 + jdk11 (it was 3.5.0 + legacy jdk9)          Reviewers: Sijie Guo <sijie@apache.org>  This closes #2135 from eolivelli/fix/upgrade-maven
2019-07-27T12:48:56Z,2130,Issue #2130 : Fix for broken URLs  Fixed broken URLs in README for Programmer Guide  Tutorial and Java API.    Descriptions of the changes in this PR:    Updated the URLs.    ### Motivation  Wanted to go through the tutorial when I came to the repo and found the links were broken in the README.  ### Changes      Master Issue: #2130    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2131 from pavankumarchaitanya/master  closes #2130
2019-07-27T12:47:07Z,2133,Make build pass on JDK11  fix javadoc configuration    Descriptions of the changes in this PR:    ### Motivation    Build fails on recent JDK11 versions and on JDK11  see #2133  this is because javadoc has problems with references to core Java API when source version is set to 8.    ### Changes  Upgrade Java doc plugin to latest 3.1.1 and disable auto linking to core Java classes with  `<detectJavaApiLink>false</detectJavaApiLink>  `  Closes #2133        Reviewers: Sijie Guo <None>  This closes #2134 from eolivelli/fix/javadoc-jdk11
2019-07-21T20:28:55Z,2120,Implementation of new scrutiny - replicas check (Part-1)  Descriptions of the changes in this PR:    - this is implementation of scrutiny mentioned in  https://github.com/apache/bookkeeper/blob/master/site/bps/BP-34-cluster-metadata-checker.md  - In this commit  urLedgersElapsedRecoveryGracePeriod check is added to placementPolicyCheck.  - new scrutiny is added replicasCheck and it is disabled by default.  - this is first part of replicas check  in this part currently metrics are not added and  also delayed replicas check for potentially faulty ledgers (failure in trying to get  info. from Bookie of the ensembles of the ledger) is not added.  - have to add more failure test scenarios for replicas check logic.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <None>  This closes #2120 from reddycharan/replicascheck and squashes the following commits:  d4dc81e15 [Sijie Guo] Merge remote-tracking branch 'apache/master' into replicascheck 5a3fa848f [Matteo Minardi] Issue #2124: Test 'ListBookiesCommand ' is failing df24f672a [vzhikserg] Use bulk operation instead of iteration 2a1cfe249 [vzhikserg] Fix log statements with incorrect placeholders
2019-07-21T06:14:52Z,2124,Issue #2124: Test 'ListBookiesCommand ' is failing  Introduced and fixed the tests involving the ListBookiesCommand      Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  This closes #2125 from mino181295/fix/test-cmd-list  closes #2124
2019-07-20T01:15:30Z,2122,Use bulk operation instead of iteration  ### Changes    * Use the `addAll` method instead of iteration  Reviewers: Sijie Guo <None>  This closes #2122 from vzhikserg/bulk-call-instead-of-iteration
2019-07-20T01:14:26Z,2123,Fix log statements with incorrect placeholders  ### Changes    The following changes were made:    - remove unused placeholders in the log statements  - add missing placeholders to the log strings to show the complete information  - remove unnecessary initialization of object arrays in the log statements   Reviewers: Sijie Guo <None>  This closes #2123 from vzhikserg/fix-log-statements
2019-07-19T15:48:40Z,2126,[CI] Prune networks older than 12h  Previously we were using a filter which matched on the network name of  the networks we create. However  docker seems to have removed this  functionality  so now we just prune all unused networks which are more  than 12h old (no CI job should be taking more than 12h).    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2126 from ivankelly/ci-failure
2019-07-17T07:46:05Z,2098,Website update for 4.9.2 release  Added 4.9.2 release to website  Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <None>  This closes #2098 from merlimat/master
2019-07-17T07:41:39Z,1961,Issue #1961: Included ZooKeeper client AclId.  Descriptions of the changes in this PR:  Included ZooKeeper Acl to the builder.    ### Changes    It is now possible to unbind DistributedLog namesapaces.    Master Issue: #1961     Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <None>  This closes #2118 from hugomiguelabreu/master  closes #1961
2019-07-12T08:04:46Z,2103,Issue #2103: Avoid stop of entry log compaction  ### Motivation    As mentioned in #2103  if an exception occurs during compaction of a specific entry log  `GarbageCollectorThread` does not perform compaction of other entry logs until the bookie server is restarted. As a result  the number of entry logs continues to increase and eventually it will run out of disk space.    ### Changes    The cause of the compaction stop is that the `compacting` flag remains true if `compactor.compact(entryLogMeta)` throws some exception.  https://github.com/apache/bookkeeper/blob/b2e099bbc7b13f13825fe78ab009ca132cb3a9ba/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java#L504-L519    Therefore  fixed `GarbageCollectorThread` so that it set the compaction flag to false even if compaction of a specific entry log fails.    Master Issue: #2103  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2121 from massakam/entry-log-compaction  closes #2103
2019-07-12T08:03:10Z,870,[BK-SERVER] Clean up over-replicated ledgers owned by different bookies  ### Motivation  As described at: https://github.com/apache/pulsar/issues/4632  - Sometimes due to overreplication  bookie contains ledgers which are not owned by that bookie anymore and that bookie is not part of the ensemble-list of those ledgers. In this case  GC finds out those overreplicated ledgers and   - deletes their index from dbStorage (rocksDB) and   - tries to delete them from entrylog files.    However  bookie doesn't delete them from entry-log files due to change made in [#870](https://github.com/apache/bookkeeper/issues/870) where bookie avoids deleting ledger if znode of that ledger exists.    Because of that bookie ends up storing large number entrylog files with ledgers which are owned by different bookies. It also cause OOM when GC tries to deal with large number of entry log files.    ### Modification    Delete the ledgers if bookie is not part of ensemble list of over-replicated ledgers  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2119 from rdhabalia/overRepl
2019-07-12T08:01:55Z,2117,Implement a method to get all the Bookies  In this PR I'm adding a `BokKeeperAdmin#getAllBookies` to retrive all the bookies (cookie) retriving them from the `RegistrationClient`    This is still a work in progress  I'm adding some tests in the next commit.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2117 from mino181295/allbookies
2019-06-25T06:17:52Z,2113,Implementation of ZoneawareEnsemblePlacementPolicy    Descriptions of the changes in this PR:    Implementation of ZoneawareEnsemblePlacementPolicy    - This is meant to be used in public cloud infrastructure in which  Availability zones (AZs) are isolated locations within data center  regions from which public cloud services originate and operate.  - ZoneawareEnsemblePlacementPolicy is a placement policy implementation  which uses zone information for placing ensembles.  - In this PlacementPolicy  it is assumed the networktopology/networklocation   is going to be two level tree  where first part indicates zoneid  and the second part indicates upgradedomainid.  - Here upgrade domain is a set of bookies in an AZ that can be brought  down together for short term maintenance with no impact to the service.  This would help in enabling parallel patching.  - Upgrade domain is a logic concept/division and it may be mapped to  cloud provider native cluster/grouping like Placement Groups in AWS.    Introduce soft PlacementPolicyAdherence    - for ZoneawarePlacementPolicy if in a writeset the number  of zones are in between minnumofzones and desirednumofzones  then it is considered MEETS_SOFT.  - if all of the writesets have zones >= desirednumofzones  then it is considered MEETS_STRICT  - if a writeset contains < minnumofzones then it is considered  FAIL  - add corresponding metric for PlacementPolicyAdherence.MEETS_SOFT    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #2113 from reddycharan/zoneawareplacementpolicycommunitybranch
2019-06-21T03:22:33Z,1960,Added zookeeper host configuration. Closes #1960  Descriptions of the changes in this PR:  Added host IP binding to sandbox.    ### Motivation  Allowing running the sandbox inside guest machines and be accessible by all system (including other guest machines). When binding 127.0.0.1 other guest machines will experience an error. By allowing to bind the correct IP the namespace will be available and correctly configured for other hosts.    ### Changes  Added a new argument to the _dlog_ tool allowing to define the host IP to bind ZooKeeper and DistributedLog namespace.    Master Issue: #1960        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2081 from hugomiguelabreu/master  closes #1960
2019-06-21T03:19:53Z,1970,Issue #1970: Ensure getStickyReadBookieIndex returns valid bookie index  Descriptions of the changes in this PR:    Master Issue: #1970  Related Issues: apache/pulsar#3715 apache/pulsar#4526    *Motivation*    Fixes #1970    By default bookie uses a random generator to generate a bookie index as the sticky  read bookie index. However the random generator will generate negative numbers. Hence  it will generate negative bookie indexes in write set and cause ArrayIndexOutOfBoundException  when bookkeeper attempts to read entries.    *Modifications*    Make sure getStickyReadBookieIndex not return negative number.    *Verify this change*    This problem introduced by a random generator. It is very hard to write a unit test to reproduce this issue.  Existing StickyRead tests are good to cover this code change.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Yong Zhang <zhangyong1025.zy@gmail.com>  This closes #2111 from sijie/fix_sticky_read  closes #1970
2019-06-20T12:36:11Z,2099,[DLOG] Delete empty inprogress segment on recovery  This addresses an issue  whereby if a user is using getLastTxId() to  find the first txnid when starting to write  they will continue to be  able to write if the last segment written by the previous writer was  empty. If the last segment was empty  then the maxTxId would be higher  than the result of getLastTxId(). maxTxId is read from a znode  while  getLastTxId() reads the txid of the last persisted record. In the case  of an empty inprogress segment  the maxTxId znode was being updated  with the expected first transaction id of the segment.    This patch addresses the issue with the following changes:  1. The maxTxId znode is only updated when inprogress segment is     completed  so it's value always refers to a transaction that     exists.  2. On recovery  if the inprogress segment is empty  delete it. There     was a TODO comment to do this already there.  3. When generating the sequence number  allow a potential sequence     number which is equal to the current max sequence number  as this     can be the case where recovery deleted an inprogress empty segment.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2099 from ivankelly/txnid-issue
2019-06-13T09:22:09Z,2100,Use https for Twitter maven repo  ### Motivation    Fetch the maven dependencies through HTTPs   Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2100 from merlimat/merlimat-patch-1
2019-06-10T21:57:11Z,2109,Testcase for limitStatsLogging.      Descriptions of the changes in this PR:    bd2b16e880d172d4761461fdbf85c1bd19b24e36 had introduced  'limitStatsLogging' feature  which would be used to limit statslogging   where it is needed. eg - we would like to suppress logs from PCBC  in Auditor/ReplicationWorker process.    In this commit I'm adding testcases for this feature.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2109 from reddycharan/testlimitstatslogging
2019-06-07T15:27:04Z,2108,Bring back statslogger to BookKeeper client in ReplicationWorker process.    Descriptions of the changes in this PR:    bd2b16e880d172d4761461fdbf85c1bd19b24e36 is supposed to fix this issue   but it missed passing statsLogger to createBookKeeperClient method.    For more info. check desc. of bd2b16e880d172d4761461fdbf85c1bd19b24e36.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2108 from reddycharan/enablebookieclientlogger
2019-06-07T15:25:58Z,2107,Display filesystem and docker info for all jenkins runs  Descriptions of the changes in this PR:    Changes to shell commands in few scripts    ### Motivation    It was difficult to reproduce jenkins test failures locally and the cause might be due to differences in underlying file system. These commands will output more information to spot the exact differences.    ### Changes    Running `df` command with an additional `-T` parameter to output filesystem information  Added `docker info` command to print docker details before every test run      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2107 from karanmehta93/master
2019-06-06T08:58:43Z,2066,Update distributedlog library to use NoSuchLedgerExistsOnMetadataServer  *Motivation*    Issue #2066 introduced `NoSuchLedgerExistsOnMetadataServer`. But the distributedlog  library is not updated to reflect to this change.    *Modifications*    Change to use `NoSuchLedgerExistsOnMetadataServer` in the right place.  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2102 from sijie/fix_failure_test
2019-06-06T07:31:27Z,1927,ISSUE #1927: fix NoNodeException in LocalBookeeper  ### Motivation  It addresses #1927 where it provides a conf check at the beginning of startLocalBookiesInternal function.  ### Changes    - Add a conf check at the beginning of startLocalBookiesInternal function where non-default zkLedgersRootPath is not allowed.    cc sijie   Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2082 from zhaohaidao/master  closes #1927
2019-06-01T00:24:55Z,2095,Entries must be acknowledged by bookies in multiple fault domains before being acknowledged to client  Descriptions of the changes in this PR:    Bookkeeper write logic makes sure that there are at least ackQuorumSize  number of successful writes before sending ack back to the client. In  many cases these may fall into the same fault domain. A mechanism to  force bookkeeper to make sure that there are acks from at least  minNumRacksPerWriteQuorum number of fault domains and a configuration  to enforce this.    Signed-off-by: Ankit Jain <jain.asalesforce.com>    Master Issue: #2095   Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2096 from ankit-j/ankit-j/enforceFragmentMultipleFaultDomainWrite and squashes the following commits:  c90fd5a3d [Ankit Jain] Addressing review comments 07deae673 [Ankit Jain] Addressing @reddycharan's review comments 14164e291 [Ankit Jain] Fixed spacing error in bk_server.yaml 22c8b3c03 [Ankit Jain] Updated testing. 917ed1c45 [Ankit Jain] Move readLock.unlock to finally block 78e0cd501 [Ankit Jain] Modify test to not use default rack for bookies ca0bc3b8b [Ankit Jain] Entries must be acknowledged by bookies in multiple fault domains before being acknowledged to client d35aa22ad [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.
2019-05-31T14:49:13Z,2105,Update lastLogMark to EOF when replaying journal  Descriptions of the changes in this PR:    ### Motivation     The [commit](https://github.com/apache/bookkeeper/commit/36be8362399341022c8de64f9319270726df2cb3) caused integration test failure `test101_RegenerateIndex`  with the exception  ```  ```java.io.IOException: Invalid argument      at sun.nio.ch.FileDispatcherImpl.read0(Native Method)      at sun.nio.ch.FileDispatcherImpl.read(FileDispatcherImpl.java:46)      at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)      at sun.nio.ch.IOUtil.read(IOUtil.java:197)      at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:159)      at org.apache.bookkeeper.bookie.JournalChannel.read(JournalChannel.java:257)      at org.apache.bookkeeper.bookie.Journal.fullRead(Journal.java:1171)      at org.apache.bookkeeper.bookie.Journal.scanJournal(Journal.java:792)      at org.apache.bookkeeper.bookie.Bookie.replay(Bookie.java:924)      at org.apache.bookkeeper.bookie.Bookie.readJournal(Bookie.java:886)      at org.apache.bookkeeper.bookie.Bookie.start(Bookie.java:943)      at org.apache.bookkeeper.proto.BookieServer.start(BookieServer.java:141)      at org.apache.bookkeeper.server.service.BookieService.doStart(BookieService.java:58)      at org.apache.bookkeeper.common.component.AbstractLifecycleComponent.start(AbstractLifecycleComponent.java:78)      at org.apache.bookkeeper.common.component.LifecycleComponentStack.lambda$start$2(LifecycleComponentStack.java:113)      at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:408)      at org.apache.bookkeeper.common.component.LifecycleComponentStack.start(LifecycleComponentStack.java:113)      at org.apache.bookkeeper.common.component.ComponentStarter.startComponent(ComponentStarter.java:80)      at org.apache.bookkeeper.server.Main.doMain(Main.java:229)      at org.apache.bookkeeper.server.Main.main(Main.java:203)  ```    As discussed on slack  it is hard to figure out an exact reason as to why the native JNI call fails with an invalid argument. Hence this PR proposes that the `lastLogMark` is updated to journal EOF instead of an arbitrary LONG.MAX_VALUE. The FileChannel interface defines that the implementors can pass in any long offset and the file handler should return EOF immediately when trying to read it. However it doesn't seem to be working as expected.    ### Changes    Updated `Journal#setLastLogMark()` method to accept an `scanOffset` instead of constant `LONG.MAX_VALUE`.    ivankelly eolivelli   Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2105 from karanmehta93/master
2019-05-20T02:53:36Z,2093,Fix flaky testIOVertexHTTPServerEndpointForARWithPrometheusProvider test  Descriptions of the changes in this PR:    - in testIOVertexHTTPServerEndpointForARWithPrometheusProvider test  it is not correct to assume that Auditor would have been created and  started completely when we complete AutoRecoveryMain.start and see it  status as started. It would make sure AuditorElector.submitElectionTask  has submitted election task but not the completion of Auditor.start.  So instead of relying on Auditor metric (NUM_UNDER_REPLICATED_LEDGERS)   use ReplicationWorker metric - NUM_FULL_OR_PARTIAL_LEDGERS_REPLICATED.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2093 from reddycharan/fixflakytest
2019-05-20T02:51:58Z,2071,Fallback to use v3 protocol for some types of requests if they are not implemented in v2  Descriptions of the changes in this PR:    ### Motivation    #2071     ### Changes    - Add a client pool use v3 wire protocol  - Obtain client by version  - Currently only support `writeLac` and `readLac`    Master Issue: #2071   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2085 from zymap/compatible_protocol
2019-05-20T02:45:34Z,2079,[SITE] modify nettyMaxFrameSizeBytes Description  Descriptions of the changes in this PR:    Fixes #2079    ### Motivation  when the client-side attempt to send more than the default size bytes  it should set up the corresponding parameter `setNettyMaxFrameSizeBytes(int maxSize)`    (Explain: why you're making that change  what is the problem you're trying to solve)    Master Issue: #2079         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2086 from hellozepp/issue-2079
2019-05-17T17:38:43Z,2087,Update and flush lastLogMark when replaying journal  Descriptions of the changes in this PR:    Update `lastLogMark` in memory after replaying each journal  Check for writable ledger dirs with `minUsableSizeForEntryLogCreation` to flush the `lastMark` file for bookies in ReadOnlyMode  Log line changes    ### Motivation    Master Issue: #2087     Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #2090 from karanmehta93/master and squashes the following commits:  f802cf6da [Karan Mehta] Fixed small issue in constuctor chaining in BookKeeperClusterTestCase 407e9f1ff [Karan Mehta] Moved lastLogMark updation logic to Journal.java 585313196 [Karan Mehta] Fix checkstyle errors c3d47014a [Karan Mehta] Fix testJournalLogAddEntryCalledCorrectly test c72b7b55e [Karan Mehta] Addressed nit 5d238f2b7 [Karan Mehta] Refactored code to update lastLogMark only when replaying journal and addressed nits b5515697f [Karan Mehta] Issue #2087 Update and flush lastLogMark when replaying journal d35aa22ad [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.
2019-05-17T07:39:12Z,4276,[BK-CLIENT] Check empty ledger-parent node while deleting ledger  ### Motivation    As discussed at [#4276](https://github.com/apache/pulsar/issues/4276)  while deleting ledger  bk-client should check parent node is empty before issuing delete request for parent znode.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #2097 from rdhabalia/led_del and squashes the following commits:  f5c0ca36c [rdhabalia] return callback with ok ede5e9403 [rdhabalia] [Bk-Client] Check empty ledger-parent node while deleting ledger d35aa22ad [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy. b4ca4537b [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy. aa84c7fdd [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation 10859afb7 [Matteo Merli] Added HTTP handler to expose bookie state 707ae5c85 [karanmehta93] ISSUE #2075: Bookieshell lastmark command isn't functional  always returning 0-0 41b39c6ef [Charan Reddy Guttapalem] ISSUE #1967: make ledger creation and removal robust to zk connectionloss 973d2ab0d [Matteo Merli] Use pure python implementation of MurmurHash 9bb7e4b82 [Venkateswararao Jujjuri (JV)] Explicit error message if extent is not present on ZK (#2066) bd699e61d [mtang01] ISSUE #2067: reduce byte[] allocation in add entry 7c62e1232 [karanmehta93] ISSUE #2073: ReadOnlyBookieTest#testBookieContinueWritingIfMulti… 42e77802c [Ivan Kelly] DLog Namespace#openLog should declare LogNotFoundException 86bce12b5 [Yong Zhang] Migrate command `ledgermetadata` 407cb35e5 [Charan Reddy Guttapalem] ISSUE #1967: make ledger creation and removal robust to zk connectionloss eaa601404 [Like] Support asynchronous fence request for V2 ReadEntryProcessor d23b45ec8 [Ivan Kelly] Fix typo in overview page for 4.8.2 44ee320b6 [Ivan Kelly] k 316b71923 [Ivan Kelly] Wait for LAC update even if ledger fenced 066621507 [Yong Zhang] Migrate command `updatecookie` 6f3396801 [Yong Zhang] Migrate command `triggeraudit` 60d993edf [Yong Zhang] Migrate command `autorecovery` ed008f278 [Yong Zhang] Migrate command `whoisauditor` 5b8e0971a [Yong Zhang] Migrate command `Whatisinstanceid` 90c79444d [Yong Zhang] Migrate command `rebuild-db-ledger-locations-index` 848f8527f [Nicolas Michael] ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation 06f2b6f50 [Yong Zhang] Migrate command `updateledgers` 7ad5849b1 [Yong Zhang] Migrate command `regenerate-interleaved-storage-index-file` d4dbb6bfb [Dongfa Huang] Avoid useless verify if LedgerEntryRequest completed 5c150f283 [Enrico Olivelli] Release notes for 4.9.1 1246826ba [Yong Zhang] Migrate command `recover` 1d4cc71fd [Yong Zhang] Migrate command `localconsistencycheck` 67f83620e [Yong Zhang] Migrate command `readledger` bfbd6b023 [Yong Zhang] Migrate command `decommission` d40b8b69f [Yong Zhang] Migrate command `readlog` 95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster` e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated` 0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool 6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster` c391fe58d [Yong Zhang] Migrate command `readlogmetadata` 120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay` bf66235e5 [Yong Zhang] Migrate command `deleteledger` 751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time 138a7ae85 [Yong Zhang] Migrate command `metadataformat` b043d1694 [Yong Zhang] Migrate command `listledgers` 4573285db [Ivan Kelly] Docker autobuild hook e3d807a32 [Like] Fix IDE complain as there are multi choices for error code 9524a9f4a [Yong Zhang] Migrate command `readjournal` 6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed e35a108c7 [Like] Fix error message for unrecognized number-of-bookies 5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null 6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2 1448d12aa [Yong Zhang] Migrate command `listfilesondisk` 4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage` 468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty f26a4cae0 [Ivan Kelly] Release notes for v4.8.2 ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage` 8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity` fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
2019-05-16T17:35:08Z,2088,Added release notes for release 4.9.2  ### Motivation    Release notes for patch release   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2088 from merlimat/relnotes-4.9.2
2019-05-15T06:35:18Z,1940,[BK-GC] avoid blocking call in gc-thread  ### Motivation    Right now  we have below 3 issues because of which gc thread gets blocked forever and it can't perform gc-task further. Below issues are mainly related to blocking call while doing zk-operation without timeout.     bug-fixes:  1. right now  [GC - ScanAndCompareGarbageCollector](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/ScanAndCompareGarbageCollector.java#L142) passes timeout in millisecond to [LedgerManager](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/LongHierarchicalLedgerManager.java#L166) but it   takes it as second and again try to convert it in millis so  30Kms timeout becomes [30M ms timeout](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/ZkUtils.java#L245). Sp  fix timeout unit during gc.    2. Right now  GC makes blocking call to get list of children on ledger znode and sometime zk-call back doesn't comeback which blocks the gc-thread forever. However  recently we added the timeout on the [object-waiting-lock](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/ZkUtils.java#L243-L248) which doesn't work because it's in while loop and `object.wait(timeout)` completes without any exception and GC threads keep running in while loop.    3. add zk-timeout during delete ledgers in bookie else it can also block the GC thread.            ### Changes    add timeout while bk-gc makes zk-call to verify deleted ledgers.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Rajan Dhabalia <rdhabalia@apache.org>  This closes #1940 from rdhabalia/verify_gc
2019-05-13T23:06:41Z,2089,Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.    Descriptions of the changes in this PR:    - Moving components/methods which are common in nature with respect to  placementpolicy from RackawareEnsemblePlacementPolicyImpl to  TopologyAwareEnsemblePlacementPolicy  so that any new placementpolicy  implementation can extend TopologyAwareEnsemblePlacementPolicy and reuse  those common components/generic.  - Change signature of methods of RackChangeNotifier interface.  - Delete duplicate methods in RackawareEnsemblePlacementPolicyImpl and  TopologyAwareEnsemblePlacementPolicy (missed removing them in #2089)  - Created separate class for BookieNode  - This change has no functionality change  it is just reorganizing code.    Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #2092 from reddycharan/placementpolicyrefactoring
2019-05-10T16:59:17Z,2089,Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.  Descriptions of the changes in this PR:    - Moving components/methods which are common in nature with respect to  placementpolicy from RackawareEnsemblePlacementPolicyImpl to  TopologyAwareEnsemblePlacementPolicy  so that any new placementpolicy  implementation can extend TopologyAwareEnsemblePlacementPolicy and reuse  those common components/generic.  - This change has no functionality change  it is just reorganizing code.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2089 from reddycharan/3azplacement
2019-05-04T22:28:01Z,1931,GetListOfEntriesOfLedger implementation    Descriptions of the changes in this PR:    As described in this BP - https://github.com/apache/bookkeeper/blob/master/site/bps/BP-34-cluster-metadata-checker.md  this request returns list of entries bookie contains for the given ledger in an encoded format. The returned list provides weakly consistent state  of the entries of the ledger.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1931 from reddycharan/getlistofentries and squashes the following commits:  467bb8b73 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation 757f99156 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation 4e84bcba0 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation f5655bb29 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation
2019-05-03T16:29:24Z,1995,Added HTTP handler to expose bookie state  ### Motivation    Allow to check the state of the bookie through HTTP.    The main reason is to allow light-weight probes that can be run frequently to establish whether the bookie is running and meets a minimum readiness criteria. One example is to automatically wait until the bookie has completed the startup sequence.    ### Changes    Added new HTTP handler that exposes the values from the bookie `StateManager`.   Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1995 from merlimat/bookie-state
2019-05-02T19:38:31Z,2075,ISSUE #2075: Bookieshell lastmark command isn't functional  always returning 0-0  Descriptions of the changes in this PR:        ### Motivation    `lastmark` shell command is to be used while debugging however currently it cannot be used since it returns incorrect value.    ### Changes    Updated `LedgerDirsManager` object initialization to use correct `ledgerDirs`.  Master Issue: #2075        Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2076 from karanmehta93/ISSUE-2075  closes #2075
2019-05-02T18:42:49Z,1967,ISSUE #1967: make ledger creation and removal robust to zk connectionloss    - fix test failures in TestLedgerMetadataSerDe    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2070 from reddycharan/fixzktestfailures  closes #1967
2019-05-02T18:37:14Z,2069,Use pure python implementation of MurmurHash  ### Motivation    BK table python client is depending on `mmh3` library for MurmurHash. This library wraps a C based function but there are no binaries published on PyPI. Therefore users need to have a GCC installed in order to install the BK client lib  since it compiles it at install time. GCC is typically not available in Docker containers.    ### Modifications    Include a pure python implementation of MurmurHash to use if the C based is not found.     Notes:   * I couldn't find any published pure-python MurmurHash implementations on PyPI   * Importing public-domain code is permitted by ASF      Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #2069 from merlimat/mmh3
2019-05-01T03:20:32Z,2066,Explicit error message if extent is not present on ZK (#2066)  * Explicit error message if extent is not present on ZK    Client can get no extent error in the following two scenarios.  1. When client attempted to read/open an extent that     is not on ZK (metadata server)  2. When client attempted to read a Ledger which is on metadata     server  but somehow missing on bookies (Data server)    It is quite confusing to get the same error  NoSuchLedgerExists  for both these cases. This checkin introduced a new error at the  BookKeeper client level  NoSuchLedgerExistsOnMetadataServer if  it is not available on ZK.    For errors related to Ledger is not available on bookie   I left NoSuchLedgerExists as-is(instead of changing it to  NoSuchLedgerExistsOnDataServer) to minimize code changes.    This change alone provides enough distinction between these  two types of errors.    Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>    * Checkstyle fixes    * Some more fixes    * Fixing DL test fixes
2019-04-30T02:31:04Z,2067,ISSUE #2067: reduce byte[] allocation in add entry  Descriptions of the changes in this PR:  This change removes a byte[] copy in DigestManager digest calculation  (computeDigestAndPackageForSending)  that puts crc header and payload in a continuous buffer. Instead   it uses protobuf ByteString.concat to concatenate header and payload  without copy when building protobuf message.          ### Motivation    In add entry code path  I see lots of byte[] allocated to do digest calculation.  It's possible to not allocate byte[].     ### Changes    Don't allocate a ByteBuf to copy data. Keep header and data separate  but use ByteString.concat when construct protobuf message.    Master Issue: #2067         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2068 from mtang01/add_entry_mem  closes #2067
2019-04-30T02:28:35Z,2073,ISSUE #2073: ReadOnlyBookieTest#testBookieContinueWritingIfMulti…  …pleLedgersPresent is flaky    Descriptions of the changes in this PR:    Updated the test to use random port number for bookie startup instead of predefined one.    ### Motivation    ReadOnlyBookieTest#testBookieContinueWritingIfMultipleLedgersPresent test is flaky due to this reason.    ### Changes    (Describe: what changes you have made)    Master Issue: #2073         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2074 from karanmehta93/master  closes #2073
2019-04-28T02:06:24Z,2072,DLog Namespace#openLog should declare LogNotFoundException  Other methods such as delete do  so openLog should declare it to be  consistent and to give users a hint that it can be caught.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #2072 from ivankelly/dl-openlog-ex
2019-04-24T10:17:04Z,2018,Migrate command `ledgermetadata`  Descriptions of the changes in this PR:    Using `bkctl` run command `ledgermetadata`    ### Motivation    #2018     Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2019 from zymap/command-ledgermetadata
2019-04-19T17:11:08Z,1967,ISSUE #1967: make ledger creation and removal robust to zk connectionloss    Descriptions of the changes in this PR:    The bookkeeper project ZooKeeperClient wrapper for the ZooKeeper client  will resend zk node creations and removals upon reconnect after a  ConnectionLoss event. In the event that the original succeeded  the  resent operation will erroneously return LedgerExistException or  NoSuchLedgerExistsException for creation and removal respectively.    For removal  this patch limits the operation by allowing it to always  succeed if the ledger does not exist in order to make it idempotent.  This is appears to be the simplest solution as exclusive removal isn't  important.    **Note  the above is an actual change to the bk client semantics**    For creation  exclusive creation is cleary important for correctness   so this patch adds a creator token field to the LedgerMetdata to  disambiguate the above race from a real race. For  AbstractZkLedgerManager  this is simply a random long value.    There's an oportunity for optimization with the above if exclusive  ledger creation failures are expected to be common.  You only actually  need to perform this check if the operation was really resent.  I chose  not to go this route yet because it would require messing with the  ZooKeeperClient interface to surface that information without burdening  other callers.    If the client is set to version 2 or older  this field will be ignored  and the old behavior will be retained.  If the client is version 3 or  newer but creation races with an older client  the new client will  interpret the nonce to be BLANK and thereby detect the race correctly.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2006 from reddycharan/zkretrialrobust  closes #1967
2019-04-19T00:44:54Z,283,Support asynchronous fence request for V2 ReadEntryProcessor  Currently  the ```ReadEntryProcessor``` v2 does not support asynchronous fence request  which wait for 1000 milliseconds to wait it done if it's a fencing request. This pull request attempt to support asynchronous response if a thread pool is provided.     Closes #283  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2021 from liketic/refactor
2019-04-19T00:43:05Z,2048,Fix typo in overview page for 4.8.2  The release notes link text was saying the latest version rather than  4.8.2.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2048 from ivankelly/doc-typo-relnotes
2019-04-19T00:40:07Z,2051,k  Otherwise the watch objects will accumulate and eventually cause an  OOM on the bookie  if LAC doesn't progress.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #2051 from ivankelly/tme-oom
2019-04-19T00:32:02Z,2052,Wait for LAC update even if ledger fenced  Previous behaviour was to return straight away. However  LAC can  change when the ledger is fenced and there is no guarantee that a  fenced ledger will turn into a closed ledger (fencing client may  crash)  which would cause the client tailing with longpoll LAC to go  into a tight loop.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Matteo Merli <mmerli@apache.org>  Venkateswararao Jujjuri (JV) <None>  Sijie Guo <sijie@apache.org>  This closes #2052 from ivankelly/wait-on-fenced
2019-04-19T00:30:26Z,2059,Migrate command `updatecookie`  Descriptions of the changes in this PR:    #2059     ### Description    Provide some admin operation about cookie    ```  Command to update cookie    Usage:  bkctl cookie admin [flags]    Flags:        -d  --delete          Delete cookie both locally and in zooKeeper        -e  --expandstorage          Add new empty ledger/index directories        -f  --force          Force delete cookie        -host  --hostname          Expects config useHostNameAsBookieID=true as the option value        -l  --list          List paths of all the cookies present locally and on zooKeeper          -h  --help          Display help information  ```    ### Changes    Update command `updatecookie` to `admin`    Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #2060 from zymap/command-updatecookie
2019-04-17T06:32:24Z,2011,Migrate command `triggeraudit`  Descriptions of the changes in this PR:    - Using `bkctl` run command `triggeraudit`    ### Motivation    #2011   Reviewers: Sijie Guo <sijie@apache.org>  Jia Zhai <zhaijia@apache.org>  This closes #2012 from zymap/command-triggeraudit and squashes the following commits:  5a4b496ec [Yong Zhang] Fix conflict --- 236b7d6e5 [Yong Zhang] Fix validation b039b637e [Yong Zhang] Rename file 8bea52522 [Yong Zhang] Remove unused imports d39d1e886 [Yong Zhang] Migrate command `triggeraudit` 60d993edf [Yong Zhang] Migrate command `autorecovery` ed008f278 [Yong Zhang] Migrate command `whoisauditor` 5b8e0971a [Yong Zhang] Migrate command `Whatisinstanceid` 90c79444d [Yong Zhang] Migrate command `rebuild-db-ledger-locations-index` 848f8527f [Nicolas Michael] ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation 06f2b6f50 [Yong Zhang] Migrate command `updateledgers` 7ad5849b1 [Yong Zhang] Migrate command `regenerate-interleaved-storage-index-file` d4dbb6bfb [Dongfa Huang] Avoid useless verify if LedgerEntryRequest completed 5c150f283 [Enrico Olivelli] Release notes for 4.9.1 1246826ba [Yong Zhang] Migrate command `recover` 1d4cc71fd [Yong Zhang] Migrate command `localconsistencycheck` 67f83620e [Yong Zhang] Migrate command `readledger` bfbd6b023 [Yong Zhang] Migrate command `decommission` d40b8b69f [Yong Zhang] Migrate command `readlog` 95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster` e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated` 0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool 6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster` c391fe58d [Yong Zhang] Migrate command `readlogmetadata` 120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay` bf66235e5 [Yong Zhang] Migrate command `deleteledger` 751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time 138a7ae85 [Yong Zhang] Migrate command `metadataformat` b043d1694 [Yong Zhang] Migrate command `listledgers` 4573285db [Ivan Kelly] Docker autobuild hook e3d807a32 [Like] Fix IDE complain as there are multi choices for error code 9524a9f4a [Yong Zhang] Migrate command `readjournal` 6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed e35a108c7 [Like] Fix error message for unrecognized number-of-bookies 5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null 6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2 1448d12aa [Yong Zhang] Migrate command `listfilesondisk` 4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage` 468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty f26a4cae0 [Ivan Kelly] Release notes for v4.8.2 ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage` 8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity` fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
2019-04-16T08:48:32Z,2009,Migrate command `autorecovery`  Descriptions of the changes in this PR:    - Using `bkctl` run command `autorecovery`    ### Motivation    #2009   Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2010 from zymap/command-autorecovery and squashes the following commits:  6fcd96904 [Yong Zhang] Fix validation cd383f372 [Yong Zhang] Rename package efb573221 [Yong Zhang] Rename command 89da2852e [Yong Zhang] Fix error in bookieshell a037501ee [Yong Zhang] Rename args 4bb36b0b3 [Yong Zhang] Fix imports postion e41a742d3 [Yong Zhang] Add unit test for command `autorecovery` b0c91f704 [Yong Zhang] Rename file cb06f66de [Yong Zhang] Migrate command `autorecovery` ed008f278 [Yong Zhang] Migrate command `whoisauditor` 5b8e0971a [Yong Zhang] Migrate command `Whatisinstanceid` 90c79444d [Yong Zhang] Migrate command `rebuild-db-ledger-locations-index` 848f8527f [Nicolas Michael] ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation 06f2b6f50 [Yong Zhang] Migrate command `updateledgers` 7ad5849b1 [Yong Zhang] Migrate command `regenerate-interleaved-storage-index-file` d4dbb6bfb [Dongfa Huang] Avoid useless verify if LedgerEntryRequest completed 5c150f283 [Enrico Olivelli] Release notes for 4.9.1 1246826ba [Yong Zhang] Migrate command `recover` 1d4cc71fd [Yong Zhang] Migrate command `localconsistencycheck` 67f83620e [Yong Zhang] Migrate command `readledger` bfbd6b023 [Yong Zhang] Migrate command `decommission` d40b8b69f [Yong Zhang] Migrate command `readlog` 95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster` e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated` 0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool 6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster` c391fe58d [Yong Zhang] Migrate command `readlogmetadata` 120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay` bf66235e5 [Yong Zhang] Migrate command `deleteledger` 751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time 138a7ae85 [Yong Zhang] Migrate command `metadataformat` b043d1694 [Yong Zhang] Migrate command `listledgers` 4573285db [Ivan Kelly] Docker autobuild hook e3d807a32 [Like] Fix IDE complain as there are multi choices for error code 9524a9f4a [Yong Zhang] Migrate command `readjournal` 6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed e35a108c7 [Like] Fix error message for unrecognized number-of-bookies 5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null 6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2 1448d12aa [Yong Zhang] Migrate command `listfilesondisk` 4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage` 468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty f26a4cae0 [Ivan Kelly] Release notes for v4.8.2 ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage` 8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity` fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
2019-04-15T06:00:56Z,2007,Migrate command `whoisauditor`  Descriptions of the changes in this PR:    - Using `bkctl` run command `whoisauditor`    ### Motivation    #2007     Reviewers: Sijie Guo <sijie@apache.org>  Jia Zhai <zhaijia@apache.org>  This closes #2008 from zymap/command-whoisauditor
2019-04-11T02:19:47Z,2027,Migrate command `Whatisinstanceid`  Descriptions of the changes in this PR:    #2027       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2028 from zymap/whatisinstanceid
2019-04-10T11:18:17Z,2036,Migrate command `rebuild-db-ledger-locations-index`  Descriptions of the changes in this PR:    #2036     Reviewers: Sijie Guo <sijie@apache.org>  This closes #2034 from zymap/command-RDBLLI
2019-04-10T01:44:52Z,2053,ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation  This bugfix for the FastCodahale timer implementation ensures that percentiles provided by a FastSnapshot are calculated correctly even if the total count of events (provided by FastTimer) is out of sync with the recorded events in the percentile buckets.    ### Motivation    FastCodahale Timer implementation may miscalculate percentiles if snapshots of values are slightly out of sync  and if only few events have been recorded.    FastCodahale Timers use fine-grained locking and are meant to tolerate that (some) values change while being recorded or while snapshots are created. Currently  the total count of requests is not synchronized with the number of requests recorded in percentile buckets. If a snapshot is created while the total count of the timer has been incremented beyond the sum of values in the percentile buckets  the percentile calculation may produce wrong values.    For example  if 3 percentile values have been recorded  but the overall count is 4  then the percentile calculation would be based on 4 values. This becomes most obvious if a percentile > .75 (e.g. p95) is being calculated. For this  the implementation will try to find 0.95 * 4 values  which is more than the 3 values recorded in the buckets. Since no bucket fulfills the criteria  the bound of the last (overflow) bucket will be returned  i.e. Long.MAX_VALUE.    ### Changes    FastSnapshots now bases the percentile calculation on the sum of values in the percentile buckets rather than a count provided by the caller (i.e. FastTimer). This ensures that percentiles are calculated correctly without the need of having all counters fully synchronized.    Master Issue: #2053     Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2054 from nicmichael/fast-codahale-bugfix  closes #2053
2019-04-10T01:42:04Z,2057,Migrate command `updateledgers`  Descriptions of the changes in this PR:    #2057     ```  Update bookie id in ledgers (this may take a long time).    Usage:  bkctl ledger update [flags]    Flags:        -host  --hostname          Expects configuration useHostNameAsBookieID=true as the optin value        -l  --limit          Maximum number of ledgers of ledgers to update (default: no limit)        -p  --printprogress          Print messages on every configured seconds if verbose turned on          (default: 10 secs)        -v  --verbose          Print status of the ledger updation (default: false)        -s  updatepersec          Number of ledgers updating per second (default: 5 per sec)          -h  --help          Display help information  ```    Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2058 from zymap/command-updateledgers
2019-04-09T12:00:26Z,2033,Migrate command `regenerate-interleaved-storage-index-file`  Descriptions of the changes in this PR:    #2033     ```  Regenerate an interleaved storage index file  from available entrylogger files.    Usage:  bkctl bookie regenerate-interleaved-storage-index-file [flags]    Flags:        -b  --b64password          The password in base64 encoding  for cases where the password is not          UTF-8.        -d  --dryrun          Process the entryLogger  but don't write anthing.        -l  --ledgerids          Ledger(s) whose index needs to be regenerated. Multiple can be          specified  comma separated.        -p  --password          The bookie stores the password in the index file  so we need it to          regenerate.This must match the value in the ledger metadata.          -h  --help          Display help information  ```    Reviewers: Sijie Guo <sijie@apache.org>  This closes #2035 from zymap/command-RISIF
2019-04-09T08:16:44Z,2061,Avoid useless verify if LedgerEntryRequest completed  Avoid useless verify if LedgerEntryRequest completed    Change-Id: Ifda2a6e218c49105a5627be69566ea2ce4a57699    Descriptions of the changes in this PR:  Print misleading logs when the SpeculativeRequestExecutionPolicy is turned on：  2019-04-03 18:30:49 839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: -1   actual: 602  2019-04-03 18:30:49 839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: -1   actual: 606  2019-04-03 18:30:49 839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: -1   actual: 610  2019-04-03 18:30:49 839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: -1   actual: 614  2019-04-03 18:30:49 843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 644   actual: 622  2019-04-03 18:30:49 843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 640   actual: 626  2019-04-03 18:30:49 843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 656   actual: 630  2019-04-03 18:30:49 843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 652   actual: 634  2019-04-03 18:30:49 843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 648   actual: 638  2019-04-03 18:30:49 846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 660   actual: 642  2019-04-03 18:30:49 846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 675   actual: 646  2019-04-03 18:30:49 846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 671   actual: 650  2019-04-03 18:30:49 846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 667   actual: 654  2019-04-03 18:30:49 846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 663   actual: 658  2019-04-03 18:30:49 848 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: -1   actual: 670  2019-04-03 18:30:49 849 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message  expected: 692   actual: 662        ### Motivation  Avoid useless verify and redundant logging(caused by the use of recycled `entryImpl`) if LedgerEntryRequest completed    ### Changes  Return immediately if completed    Master Issue: #<master-issue-number>        Reviewers: Sijie Guo <sijie@apache.org>  This closes #2061 from huangdongfa/master
2019-04-08T20:15:35Z,1992,Release notes for 4.9.1  Descriptions of the changes in this PR:  - Release notes for Apache BookKeeper 4.9.1  - Add Apache BookKeeper docs for 4.9.1 to the website        Reviewers: Sijie Guo <sijie@apache.org>  This closes #1992 from eolivelli/fix/releasenotest491
2019-04-08T04:29:48Z,2055,Migrate command `recover`  Descriptions of the changes in this PR:    #2055   Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2056 from zymap/command-recover
2019-04-03T13:40:06Z,2042,Migrate command `localconsistencycheck`  Descriptions of the changes in this PR:    #2042     Using bkctl run command localconsistencycheck    ```  Validate Ledger Storage internal metadata  Usage:  bkctl bookie localconsistencycheck [flags]  Flags:        -h  --help          Display help information  ```  Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2043 from zymap/command-localconsistencycheck and squashes the following commits:  c31f07a00 [Sijie Guo] Merge branch 'master' into command-localconsistencycheck c391fe58d [Yong Zhang] Migrate command `readlogmetadata` 120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay` bf66235e5 [Yong Zhang] Migrate command `deleteledger` c9bb4a42c [Yong Zhang] Migrate command `localconsistencycheck` 751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time 138a7ae85 [Yong Zhang] Migrate command `metadataformat` b043d1694 [Yong Zhang] Migrate command `listledgers` 4573285db [Ivan Kelly] Docker autobuild hook e3d807a32 [Like] Fix IDE complain as there are multi choices for error code 9524a9f4a [Yong Zhang] Migrate command `readjournal` 6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed e35a108c7 [Like] Fix error message for unrecognized number-of-bookies 5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null 6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2 1448d12aa [Yong Zhang] Migrate command `listfilesondisk` 4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage` 468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty f26a4cae0 [Ivan Kelly] Release notes for v4.8.2 ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage` 8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity` fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
2019-04-03T13:30:16Z,2040,Migrate command `readledger`  Descriptions of the changes in this PR:    #2040     - Using `bkctl` run `readledger`    ```  Read a range of entries from a ledger.    Usage:  bkctl bookie readledger [flags]    Flags:        -b  --bookie          Only read from a specific bookie        -ef  --entryformatter          Set entry formatter        -fe  --firstentryid          First Entry ID        -r  --force-recovery          Ensure the ledger is properly closed before reading        -le  --lastentryid          Last Entry ID        -l  --ledgerid          Ledger ID        -lf  --ledgeridformatter          Set ledger id formatter        -m  --msg          Print message body          -h  --help          Display help information  ```    Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2041 from zymap/command-readledger and squashes the following commits:  56b0a4581 [Yong Zhang] Remove unused import 30dafa85f [Yong Zhang] Merge branch 'master' into command-readledger bfbd6b023 [Yong Zhang] Migrate command `decommission` d40b8b69f [Yong Zhang] Migrate command `readlog` 95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster` e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated` c465c4761 [Yong Zhang] Remove unused import 0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool 6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster` 931df8c2c [Sijie Guo] Merge branch 'master' into command-readledger c391fe58d [Yong Zhang] Migrate command `readlogmetadata` 120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay` bf66235e5 [Yong Zhang] Migrate command `deleteledger` 87e6644f2 [Yong Zhang] Fix some conflict 5ae05f0d2 [Yong Zhang] Migrate command `readledger` 751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time 138a7ae85 [Yong Zhang] Migrate command `metadataformat` b043d1694 [Yong Zhang] Migrate command `listledgers` 4573285db [Ivan Kelly] Docker autobuild hook e3d807a32 [Like] Fix IDE complain as there are multi choices for error code 9524a9f4a [Yong Zhang] Migrate command `readjournal` 6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed e35a108c7 [Like] Fix error message for unrecognized number-of-bookies 5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null 6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2 1448d12aa [Yong Zhang] Migrate command `listfilesondisk` 4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage` 468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty f26a4cae0 [Ivan Kelly] Release notes for v4.8.2 ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage` 8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity` fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
2019-04-03T06:18:52Z,2049,Migrate command `decommission`  Descriptions of the changes in this PR:    #2049   Reviewers: Sijie Guo <sijie@apache.org>  This closes #2050 from zymap/command-decommissionbookie
2019-04-03T06:17:45Z,2044,Migrate command `readlog`  Descriptions of the changes in this PR:    #2044   Reviewers: Sijie Guo <sijie@apache.org>  This closes #2045 from zymap/command-readlog
2019-04-03T06:16:23Z,2029,Migrate command `nukeexistingcluster`  Descriptions of the changes in this PR:    #2029       Reviewers: Sijie Guo <sijie@apache.org>  This closes #2030 from zymap/command-nukeexistingcluster
2019-04-03T06:15:23Z,2013,Migrate command `listunderreplicated`  Descriptions of the changes in this PR:    - Using `bkctl` run command `listunderreplicated`    ### Motivation    #2013     Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2014 from zymap/command-listunderreplicated
2019-04-02T18:35:23Z,2023,ISSUE #2023: change cached thread pool to fixed thread pool  Descriptions of the changes in this PR:    change newCachedThreadPool() to newFixedThreadPool(int)    ### Motivation    newFixedThreadPool(int) can be freely configured with the total number of threads  while cached thread pool may cause OutOfMemoryError when there are too many threads need to created.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2024 from bd2019us/patch  closes #2023
2019-04-02T18:33:16Z,2046,Migrate command `initnewcluster`  Descriptions of the changes in this PR:    #2046   Reviewers: Sijie Guo <sijie@apache.org>  This closes #2047 from zymap/command-initnewcluster
2019-04-02T18:21:14Z,2038,Migrate command `readlogmetadata`  Descriptions of the changes in this PR:    #2038   Reviewers: Sijie Guo <sijie@apache.org>  This closes #2039 from zymap/command-readlogmetadata
2019-04-02T08:39:03Z,2015,Migrate command `lostbookierecoverydelay`  Descriptions of the changes in this PR:    - Using `bkctl` run command `lostbookierecoverydelay`    ### Motivation    #2015   Reviewers: Sijie Guo <sijie@apache.org>  This closes #2016 from zymap/command-lostbookierecoverydelay
2019-04-02T08:32:23Z,2025,Migrate command `deleteledger`  Descriptions of the changes in this PR:    #2025       Reviewers: Sijie Guo <sijie@apache.org>  This closes #2026 from zymap/command-deleteledger
2019-04-01T16:27:42Z,2020,ISSUE #2020: close db properly to avoid open RocksDB failure at the second time  Descriptions of the changes in this PR:    ### Motivation    If not releasing resources of failed/closed asyncStore  new creating of the same store identifier will fail  mainly caused by RocksDBException  like #2020 shows.    ### Changes    add scStores to factory's instance variable at the `addstore` method of `MVCCStoreFactoryImpl` class;  release store when open fail;    Descriptions of the changes in this PR:    Master Issue: #2020       Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2022 from ArvinDevel/issue2020  closes #2020
2019-04-01T16:18:42Z,2031,Migrate command `metadataformat`  Descriptions of the changes in this PR:    #2031     Reviewers: Sijie Guo <sijie@apache.org>  This closes #2032 from zymap/command-metaformat
2019-04-01T16:10:39Z,2004,Migrate command `listledgers`  Descriptions of the changes in this PR:    Using `bkctl` run command `listledgers`    ### Motivation    #2004     Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2005 from zymap/command-listledgers
2019-04-01T12:19:49Z,2017,Docker autobuild hook  This hook will allow docker autobuild to build from the offical tag  and removes the need to update the dockerfile after the release has  been made.    It also adds a build arg  DISTRO_URL which can be used for testing  release candidates.    ```  docker build --build-arg BK_VERSION=4.9.1      --build-arg DISTRO_URL=<rc-tarball-url> .  ```    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #2017 from ivankelly/docker-tag2
2019-03-29T04:45:33Z,1999,Fix IDE complain as there are multi choices for error code  There are two ```Code``` in ```org.apache.bookkeeper.client. BKException```:    The first is https://github.com/apache/bookkeeper/blob/f26a4cae0e9205ad391c6d4d79f2937871864c28/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java#L136    The second is https://github.com/apache/bookkeeper/blob/f26a4cae0e9205ad391c6d4d79f2937871864c28/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/api/BKException.java#L180    BKException's subclasses cannot auto choice which ```Code```.     Reviewers: Sijie Guo <sijie@apache.org>  This closes #1999 from liketic/fix-code
2019-03-29T04:44:24Z,2000,Migrate command `readjournal`  Descriptions of the changes in this PR:    - Use `bkctl` execute `readjournal` command    ### Motivation    - Migrate from bookieshelll        Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #2000 from zymap/command-readjournal
2019-03-27T15:35:48Z,2001,Fix when met unexpect entry id crashed    Fixes #2001    *Motivation*    When met a unexpect entry id  db indexes failed cleanup.    *Modifications*    Catch the exception and ignore it.    Master Issue: #2001         Reviewers: Jia Zhai <zhaijia@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #2002 from zymap/fixnoentryexception
2019-03-27T05:11:17Z,1925,Fix error message for unrecognized number-of-bookies  Closes #1925   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1997 from liketic/fix-issue-1925
2019-03-26T14:33:54Z,1998,fix potential NPE when releasing entry that is null  Descriptions of the changes in this PR:    ### Motivation  A interrupt exception can occur during the poll operation of the blocking and cause a NPE to be thrown    ### Changes  Check if entry is null before trying to release it    Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1998 from jerrypeng/fix_NPE
2019-03-26T14:27:23Z,1993,[RELEASE] Update website to include documentation for 4.8.2    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1993 from ivankelly/482site
2019-03-25T03:14:16Z,1989,Migrate command `listfilesondisk`  Descriptions of the changes in this PR:    - Replace command `listfilesondisk`     ### Motivation    - Use `bkctl` to run command `listfilesondisk`  - #1989   ### Changes    - Add command in `bkctl`    Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1990 from zymap/command-listfilesondisc and squashes the following commits:  922e2b70a [Sijie Guo] Merge branch 'master' into command-listfilesondisc 8d72a00bd [Yong Zhang] Migrate command `listfilesondisk`
2019-03-25T02:50:13Z,1987,Issue #1987: Migrate command `convert-to-interleaved-storage`  Descriptions of the changes in this PR:    - Migrate command `convert-to-interleaved-storage`    ### Motivation    - #1987   - Use `bkctl` to run command `convert-to-interleaved-storage`    ### Changes    - Add command in `bookiegroup`    Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1988 from zymap/command-ctis  closes #1987
2019-03-25T02:43:27Z,1996,In DbLedgerStorage use default values when config key is present but empty  ### Motivation    Currently setting the `dbStorage_writeCacheMaxSizeMb=` with empty value is making the  DbLedgerStorage initialize to fail since the empty string is being parsed as long.     Instead  we should just apply the default value as in the case where the config key is not there.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1996 from merlimat/db-storage-config
2019-03-20T09:19:22Z,1976,Release notes for v4.8.2    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #1976 from ivankelly/v4.8.2-relnotes
2019-03-19T15:38:40Z,1985,Issue #1985: Migrate command `convert-to-db-storage`  *Motivation*    - Use bkctl to run command `convert-to-db-storage`    *Modifications*    - #1985   - Add command in `bookieGroup`    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1986 from zymap/command-ctdb  closes #1985
2019-03-18T08:11:27Z,1982,Issue #1982: Migrate command `bookiesanity`  Descriptions of the changes in this PR:    - migrate command `bookiesanity`    ### Changes    - use command by `bkctl bookie sanity`    Master Issue: #1982     Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1983 from zymap/command-bookiesanity  closes #1982
2019-03-15T06:56:33Z,1980,Issue #1980: Migrate command `ledger` from shell to bkctl  Descriptions of the changes in this PR:    Migrate command `ledger` from shell to bkctl    ### Motivation    #1980     ### Changes    - Add new implement for `ledger`    Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1981 from zymap/command-ledger  closes #1980
2019-03-14T05:19:23Z,1968,Tool to search and replace bookie ids in ledger metadata  To use:  ```  bin/bkctl bookieid searchreplace --from <from> --to <to>  ```    To be used in cases where the DNS name of the bookie has to change  and you don't want all the data to have to be moved by autorecovery.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #1968 from ivankelly/bk-replace-bookieid
2019-03-12T16:30:43Z,1977,Issue #1977: Migrate command 'bookieinit'  Descriptions of the changes in this PR:    Migrate command `bookieinit` from shell to bkctl    ### Motivation     Issue #1977     ### Changes    - Replace command `bookieinit` in shell    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1978 from zymap/command-bookieinit  closes #1977
2019-03-11T01:57:35Z,1974,Migrate command `bookieformat`  Descriptions of the changes in this PR:    Migrate command `bookieformat`.    ### Motivation    #1974     ### Changes    - Add command `bookieformat` to bkctl  - Replace command in shell    Reviewers: Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1975 from zymap/command-bookieformat and squashes the following commits:  90e8a1dde [Yong Zhang] Add doc e079383ac [Yong Zhang] Fix the way deal with exception eb78fe74f [Yong Zhang] Add unit test for `commandformat` a3bafe6d9 [Yong Zhang] Migrate command `bookieformate` to bkctl
2019-03-10T10:32:27Z,1972,Migrate command `bookieinfo` to bkctl  ### Motivation    Migrate command `bookieinfo` to bkctl.    ### Changes    You can execute as `bin/bkctl bookie  info`.    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1972 from zymap/yongzhang/command_info
2019-03-05T18:27:04Z,1965,Add validateConf to AbstractDNSToSwitchMapping  Descriptions of the changes in this PR:    - when setConf of AbstractDNSToSwitchMapping  is called it  should do sanity checking of the conf/env. and throw  RuntimeException if things are not valid.  - For RawScriptBasedMapping.validateConf  try executing  the script with no arguments for sanity check purpose.  Here it is expected that running script with no arguments  would do sanity check of the script and the env.    (there are 2 commits in this PR  but this PR is meant for the second commit and there is other PR for the first commit)  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1965 from reddycharan/sanitycheckmappingconf
2019-03-05T07:49:23Z,1973,[DLOG] Avoid double read in readahead  There was a bug in the ReadAheadReader whereby  if it was in a paused  state and the last segment it had read had been closed  then when a  writer started writing new segments  the ReadAheadReader would issue a  double read. This would end up triggering an error when it got to the  end of the segment as the issued one of the issued reads would then be  cancelled when the segment was closed.    This fix adds an explicit state machine to the reader and moves all  state transitions to run on the ordered executor  so only one read can  ever be issued at a time.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1973 from ivankelly/dlog-reader-crash-master
2019-03-03T15:14:59Z,1655,Use the same thread to monitor ledger and index directories  Closes #1655   Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1957 from liketic/reduce-monitor-threads
2019-03-02T15:20:53Z,1958,Use automatic resource management to close streams  We can use automatic resource management introduced in java 7  which makes code shorter.  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1958 from liketic/use-resource
2019-02-28T15:13:21Z,1954,[PYTHON] Fix python client version  Descriptions of the changes in this PR:    *Motivation*    pip doesn't work with '-SNAPSHOT'. Use `-alpha-0` instead of `-SNAPSHOT` for python.    *Modifications*    - update setup.py file  - update release guide          Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #1954 from sijie/fix_python_version
2019-02-27T07:50:45Z,1964,Use conf value in RackawareEnsemblePlacementPolicyImpl.initialize method      Descriptions of the changes in this PR:    - Use conf value in RackawareEnsemblePlacementPolicyImpl.initialize method   instead of uninitialized enforceMinNumRacksPerWriteQuorum variable  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1964 from reddycharan/fixexceptioncondition
2019-02-27T07:37:46Z,1953,Add http method test for vertx-http server  ### Motivation    As discussed at #1953  adding test to verify all http-method works for vertx-http-server.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1963 from rdhabalia/gc_test
2019-02-27T07:21:49Z,1962,Fix unable download twitter dependencies  ---    Fixes #1962    *Motivation*    There are some twitter dependencies can't download from repo    *Modifications*    - remove some using in StatsLoggerBenchmark.java  - update some config in pom.xml    Descriptions of the changes in this PR:    You can add -Dtwitter to choose add twitter dependencies.    ### Motivation    (Explain: why you're making that change  what is the problem you're trying to solve)    ### Changes    (Describe: what changes you have made)    Master Issue: #1962        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1966 from zymap/master
2019-02-25T09:20:34Z,1951,[DOC] popover for 'striped' as well as 'striping'  Adds a popover term for 'striped' to match 'striping'.    ### Motivation    <img width="817" alt="screen shot 2019-02-19 at 14 08 07" src="https://user-images.githubusercontent.com/1994486/53020896-ddd07e00-344f-11e9-9327-7beb380515d7.png">    The first "link" text has no pop-over  but the second does.     ### Changes    Just copies the pop-over for striping. It seems inelegant vs. allowing multiple pop-over terms to refer to the same HTML fragment rather than being 1-1  but also is a straightforward and unobtrusive change.    Master Issue: (no issue)        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1951 from kjgorman/striped-popover
2019-02-25T05:40:19Z,1953,[BOOKIE-HTTP-SERVER] Fix: broken vertx rest endpoints  ### Motivation  Right now  vertx-http-server is not serving any rest endpoint except get because vertx server doesn't add put/post/delete http-methods into routing rules.    ### Modification  Add put/post/delete http-methods into routing rules.  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1953 from rdhabalia/http_ep
2019-02-25T05:36:16Z,1956,Log error (if any) in Shell.runCommand      Descriptions of the changes in this PR:  - Log error (if any) in Shell.runCommand even in the case of successful execution  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1956 from reddycharan/printshellerror
2019-02-25T05:35:00Z,1531,Fix obsoleted proposals document link  Closes #1531   Reviewers: Sijie Guo <sijie@apache.org>  This closes #1959 from liketic/fix-link
2019-02-21T20:41:14Z,1941,Exclude defaultrack bookies when enforceMinNumRacksPerWriteQuorum is enabled    Descriptions of the changes in this PR:    - enforceMinNumRacksPerWriteQuorum is meant to be used for strict placement policy. So when  it is enabled  bookies which belong to default faultzone/rack (because of failure in resolving  network location) should be excluded from bookie selection.  - add gauge for number of bookies in default faultzone/rack. It will be helpful to create alerts  based on this gauge.  - add gauge for number of ledgers found not adhering to strict placement policy in Auditor's  placement policy check. This gauge will be more helpful in creating alert instead of using  monotonously increasing alert.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Pasha Kuznetsov <None>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1941 from reddycharan/ignoredefaultzoneandfixmetrics
2019-02-20T12:11:00Z,1556,[DOC] Fix command path in documents  Closes #1556  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1948 from liketic/fix-cmd-dir
2019-02-20T10:43:29Z,1919,BOOKKEEPER-1919: putEntryOffset translate FileInfoDeletedException  IndexInMemPageMgr should translate FileInfoDeletedException into  NoLedgerException as expected by users like  InterleavedLedgerStorage.updateEntriesLocations and  EntryMemTable.flushSnapshot.    Signed-off-by: Samuel Just <sjustsalesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1950 from athanatos/forupstream/wip-1919
2019-02-20T10:24:03Z,1952,Filter empty string for networkTopologyScriptFileName      Descriptions of the changes in this PR:    - filter empty string for networkTopologyScriptFileName.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1952 from reddycharan/ignoreemptystring
2019-02-16T14:59:54Z,1937,[BK-GC] Fix GC thread gets blocked  ### Motivation    It addresses below thread-stuck while performing gc in bookie.    ```  Thread 3363: (state = BLOCKED)   - java.lang.Object.wait(long) bci=0 (Compiled frame; information may be imprecise)   - java.lang.Object.wait() bci=2  line=502 (Compiled frame)   - org.apache.bookkeeper.util.ZkUtils.getChildrenInSingleNode(org.apache.zookeeper.ZooKeeper  java.lang.String) bci=34  line=243 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator.getChildrenAt(java.lang.String) bci=8  line=165 (Compiled fr  ame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$LeafIterator.<init>(org.apache.bookkeeper.meta.LongHierarchic  alLedgerManager$LongHierarchicalLedgerRangeIterator  java.lang.String) bci=11  line=187 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.advance() bci=137  line=261 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=28  line=281 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=4  line=278 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=4  line=278 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=4  line=278 (Compiled frame)   - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator.next() bci=8  line=304 (Compiled frame)   - org.apache.bookkeeper.meta.HierarchicalLedgerManager$HierarchicalLedgerRangeIterator.next() bci=26  line=117 (Compiled frame)   - org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.gc(org.apache.bookkeeper.bookie.GarbageCollector$GarbageCleaner) bci=195  line=168 (Compiled frame)   - org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers() bci=8  line=393 (Compiled frame)   - org.apache.bookkeeper.bookie.GarbageCollectorThread.runWithFlags(boolean  boolean  boolean) bci=39  line=355 (Compiled frame)   - org.apache.bookkeeper.bookie.GarbageCollectorThread.safeRun() bci=28  line=333 (Compiled frame)   - org.apache.bookkeeper.common.util.SafeRunnable.run() bci=1  line=36 (Compiled frame)   - java.util.concurrent.Executors$RunnableAdapter.call() bci=4  line=511 (Compiled frame)   - java.util.concurrent.FutureTask.runAndReset() bci=47  line=308 (Compiled frame)   - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask) bci=1  line=180 (Compiled frame)   - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() bci=37  line=294 (Compiled frame)   - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) bci=95  line=1142 (Compiled frame)   - java.util.concurrent.ThreadPoolExecutor$Worker.run() bci=5  line=617 (Interpreted frame)   - io.netty.util.concurrent.FastThreadLocalRunnable.run() bci=4  line=30 (Interpreted frame)   - java.lang.Thread.run() bci=11  line=748 (Interpreted frame)  ```    ### Changes    add time-out to zk operation to avoid GC thread blocking.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1937 from rdhabalia/gc_dead
2019-02-13T02:31:51Z,1942,[DOC] Add python client release instructions to release guide          Reviewers: Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1942 from sijie/update_instructions_on_publish_pythonclient
2019-02-09T01:38:26Z,1932,[WEBSITE] Update release schedule for 4.10.0          Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #1932 from sijie/update_release_schedule
2019-02-09T01:36:30Z,1939,fix invalid formatter xml  ### Motivation    `formatter.xml` is an invalid xml and eclipse fails to load it.      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1939 from rdhabalia/format_xml
2019-02-09T01:33:56Z,1934,Bump Netty and GRPC version      Descriptions of the changes in this PR:    *Motivation*    When we bumped Netty's version  we didn't bump the gRPC version.  So the gRPC version has become very old.    *Modifications*    Bump both gRPC and Netty version to make them aligned with each other.       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1934 from sijie/bump_grpc_version
2019-02-05T14:42:11Z,1933,[DEV] Break current ISSUE_TEMPLATE into multiple single templates  Descriptions of the changes in this PR:    *Motivation*    Following the Github community recommendations (https://github.com/apache/bookkeeper/community)  to break down current ISSUE_TEMPLATE to multiple single templates    *Modifications*    - break down the `ISSUE_TEMPLATE.md` into multiple files in `ISSUE_TEMPLATE`  - fix the skip phrase in PULL_REQUEST_TEMPLATE       Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1933 from sijie/fix_pull_request_templates
2019-02-01T23:28:33Z,1910,[RELEASE] Release Notes for 4.9.0          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  This closes #1910 from sijie/bk490_release_notes
2019-02-01T19:43:04Z,1902,PlacementPolicy checker validating EnsemblePlacementpolicy    Descriptions of the changes in this PR:    - As described in BP-34   https://github.com/apache/bookkeeper/blob/master/site/bps/BP-34-cluster-metadata-checker.md   this change introduces new checker - cluster-metadata-checker with initial responsibility  of validating the EnsemblePlacementpolicy of segments of ledgers (which are writeclosed/fenced).        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1902 from reddycharan/placementpolicyscrutiny
2019-02-01T15:53:19Z,1929,[RELEASE] Update Dockerfile to 4.9.0          Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #1929 from sijie/update_docker_file
2019-02-01T15:52:12Z,1928,[RELEASE] Update website to include documentation for 4.9.0          Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #1928 from sijie/update_website_490
2019-01-31T10:17:09Z,1917,Ignore usage of localNode in PlacementPolicy.    Descriptions of the changes in this PR:    'ignoreLocalNodeInPlacementPolicy' specifies whether to ignore localnode  in the internal logic of placement policy. If it is not possible or useful  to use Bookkeeper client node's (or AutoReplicator) rack/region info. for  placement policy then it is better to ignore localnode instead of false  alarming with error/warn log lines and metrics.    It is not valid to expect rack mapping information to be available for Bookkeeper  client and ReplicationWorker nodes. So if rackmapping info. is not available  then it is better to ignore creation of BookieNode by resolving rack information  for the client localnode. Otherwise it would log unnecessary warn/error log lines  and rack resolution failure metrics.  Reviewers: Sijie Guo <sijie@apache.org>  Jia Zhai <zhaijia@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1917 from reddycharan/ignorelocalnodeinplacementpolicy
2019-01-25T04:09:10Z,1914,Add semantically meaningful return values to placement policy  Currently newEnsemble and replaceBookie in EnsemblePlacementPolicy  return a apache commons Pair<> with the second argument being a  boolean to denote whether the placement conforms strictly to the  policy. From calling code  the meaning of this second value is  unclear.    This patch replaces Pair<> with an PlacementResult object  in which  the strict conformity argument is clearly labels. This will also allow  extension in the future to return more metadata about particular  placements.    Also  we shouldn't put third party library classes in interfaces.    Issue:  #1914    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1916 from ivankelly/meaningful-placement-res
2019-01-25T04:07:36Z,1911,[TABLE SERVICE] bump python client version to 4.10.0-SNAPSHOT      Descriptions of the changes in this PR:    *Modifications*    Bump the development of python client to 4.10.0-SNAPSHOT        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1911 from sijie/bump_python_client_development
2019-01-22T21:01:59Z,,Revert "fix/pair"  This reverts commit 615f96701a461160d6d246e5387668b0e3406609.
2019-01-22T21:01:09Z,,fix/pair
2019-01-22T02:47:58Z,1907,[RELEASE] add bkctl package to release scripts    Descriptions of the changes in this PR:      *Motivation*    starting from bookkeeper 4.9.0  a separate tool package `bkctl` is released.    *Modifications*    add bkctl into release scripts        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1907 from sijie/include_bkctl_package
2019-01-22T02:39:11Z,1906,[RELEASE] Release table service python client    Descriptions of the changes in this PR:    *Motivation*    Update the table service python client version to release version    *Modifications*    Bump the version to 4.9.0        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1906 from sijie/release_python_client
2019-01-22T02:31:37Z,1909,[BUILD] Fix master build after release 4.9.0      Descriptions of the changes in this PR:    *Motivation*    when creating branch-4.9  maven release plugin doesn't bump the version for stream modules.    *Modifications*    run `mvn versions:set` to manually fix the version for all modules        Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #1909 from sijie/fix_master_build
2019-01-21T09:02:39Z,,[maven-release-plugin] prepare for next development iteration
2019-01-21T09:02:29Z,,[maven-release-plugin] prepare branch branch-4.9
2019-01-21T08:56:22Z,723,HTTP GetMetaService returns JSON rather than calling #serialize  Once the binary ledger metadata serializing is available  the output  of GetMetaService would no longer be understandable. In preparation  for this  make GetMetaService use output JSON  rather than directly  calling #serialize.    Master issue: #723    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1864 from ivankelly/get-to-string
2019-01-21T08:54:59Z,1900,Small fix wrong nodesUninitialized count when checkCovered    Descriptions of the changes in this PR:    ### Motivation    Since count `nodesUninitialized` is always 0   there is no wait if we haven't seen any OK responses and there are still nodes not heard from    ### Changes    Correct  nodesUninitialized count and add a related testcase        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1900 from huangdongfa/fix-error-nodesUninitialized
2019-01-17T11:34:26Z,1895,replace default source-release-assembly by bookkeeper-dist  fix for #1895  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1904 from hboutemy/master
2019-01-17T00:26:44Z,723,Binary metadata format  This patch adds a binary metadata format and bumps the metadata format  version to 3. The contents of the binary metadata is the same as the  contents of the text format for now. The difference is that the binary  is more compact  and the fields can be added to the metadata when  using the binary format  which isn't possible with the text  format. With the text format  parsing with a client that didn't  recognise the new field would fail.    For now  the text format (version 2) is still used by default. We will  provide a tool to allow administrators to bump to version 3.    Some tests have been modified to provide digest and password to the  builder. All protobuf metadata in released versions has had digest and  password (first protobuf metadata was in release-4.2.0). So if new  metadata is created or read with version 2  it will have this two  fields set.    Master issue: #723    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1866 from ivankelly/binary-metadata
2019-01-17T00:23:33Z,1903,Move Jobs from Obsolete JDK9 to JDK11    Descriptions of the changes in this PR:    - create new jobs for JDK 11  - disable spotbugs on JDK 11 on CI  - drop jdk9 and jdk10 from Travis        Reviewers: Sijie Guo <sijie@apache.org>  This closes #1903 from eolivelli/fix/ci-jdk11-part1
2019-01-16T12:24:12Z,1849,Make Spotbugs pass on JDK11  Descriptions of the changes in this PR:  - upgrade spotbugs to 3.1.8  - disable spotbugs on JDK11 (due to for https://github.com/spotbugs/spotbugs/issues/756)    ### Motivation    This change is on the way to give full "official" support do JDK11    ### Changes    - upgrade spotbugs to 3.1.8  - fix new spotbugs issues  - disable spotbugs on JDK11 (due to for https://github.com/spotbugs/spotbugs/issues/756)        Reviewers: Sijie Guo <sijie@apache.org>  This closes #1849 from eolivelli/fix/ci-java11
2019-01-13T02:04:35Z,1883,Enhance EnsemblePlacementPolicy and DNSResolverDecorator to log relevant metrics.    Descriptions of the changes in this PR:      Make changes to EnsemblePlacementPolicy so that it would return boolean value indicating  if the return value of newEnsemble and replaceBookie are strictly adhering to corresponding  PlacementPolicy or it fell back to random.    Similarly DNSResolverDecorator should log a metric when it was unable to resolve rack info and  it is using default rack.      Reviewers: Samuel Just <sjust@salesforce.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1883 from reddycharan/enhanceplacementpolicy
2019-01-09T00:12:48Z,1808,Allow to configure sticky reads  ### Motivation    Currently the BK client is issuing the read requests in round-robin fashion across all the bookies in the write set.    One issue with this approach is that it's not taking full advantage of the read-ahead cache  either explicit (like in `DbLedgerStorage`) or implicit (by reading data through Linux page cache which will do some prefetching).    With `e=2`  `w=2`  when we read `e-0` from `bookie-1` and `e-1` from `bookie-2`  we fail to take advantage of the fact that `bookie-1` will have already `e-1` in memory.    Effectively with `e-2`  `w-2` the disk read IO will be doubled  compared to the amount of data served to BK clients. The larger the quorum  the bigger will be overhead (eg: `e=5`  `w=5` will lead to 5x reads from disk).    ### Changes    Added a BK client flag for "sticky reads". When reading from a ledger that has `E=W` (every bookie has all the entries)  the sticky reads will direct all read request to 1 single bookie in the ensemble.  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1808 from merlimat/single-bookie-per-ledger-read-master
2019-01-08T20:16:09Z,1754,Configure Netty allocator in bookie and client  ### Motivation    This is based on #1754. Adding the code to configure and use the allocator wrapper in bookie and client.    (I'll rebase once the first PR is merged)  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1755 from merlimat/use-allocator
2019-01-07T23:41:52Z,1812,Allow to configure BK for low latency busy-wait settings  ### Motivation    Added `enableBusyWait` configuration option to turn on CPU Affinity and busy wait on sockets and queues.      Reviewers: Sijie Guo <sijie@apache.org>  This closes #1812 from merlimat/configure-busy-poll
2019-01-04T00:41:37Z,1892,ISSUE #1892: ILS: reset retry in consistency check loop  This patch additionally:  - modifies InterleavedLedgerStorageTest.java to test with and without    entryLogPerLedger  - refactors the test a bit to ensure that the gc calls really do race    with the right part of the checker  - addresses a few other more cosmetic errors    (bug W-5721713)  Signed-off-by: Samuel Just <sjustsalesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1894 from athanatos/forupstream/wip-1892  closes #1892
2018-12-21T23:44:36Z,723,Revert maxLedgerMetadataFormatVersion changes in layout  There is ongoing discussions about how to do this  so I'm reverting this  change for now to allow 4.9 release to proceed. The change modifies the  contents of the layout znode  so once they're in an official release they  cannot be removed without breaking BC.    The reverted changes are:    dd684b Ledger manager factories initialized with max metadata version  dce4fd Add max ledger metadata format version to layout    Master issue: #723    Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1890 from ivankelly/revert-max-format
2018-12-21T23:41:22Z,1712,Multiple calls to LedgerHandle#close should wait on actual close  The previous behaviour was to complete successfully immediately if  close had already been called on the handle. This allowed for  potential consistency violations  as the caller could believe that the  ledger was closed  when in fact the close operation was still in  progress and could still potentially fail.    Issue: #1712    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1889 from ivankelly/double-close-anomoly
2018-12-21T23:40:11Z,1867,Introduce a configuration framework for better organizing and documentating configuration settings  Descriptions of the changes in this PR:    ### Motivation    One common task in developing bookkeeper is to make sure all the configuration  settings are well documented  and the configuration file we ship in each release  is in-sync with the code itself.    However maintaining things in-sync is non-trivial. This proposal is exploring  a new way to manage configuration settings for better documentation.    ### Changes    - Introduce `ConfigKey` for defining a configuration setting key in a configuration  - Introduce `ConfigKeyGroup` for grouping configuration settings together  - Introduce `ConfigDef` for generating the configuration definition for a given configuration  - Add a `save` method for saving a configuration definition into a configuration file    Master Issue: #1867         Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1869 from sijie/config_defs
2018-12-19T11:47:12Z,1888,Bring back statslogger to BookKeeper client in ReplicationWorker process.    Descriptions of the changes in this PR:    - https://github.com/apache/bookkeeper/commit/2837f6257baf15dc9dd9eb4bcac34596b442be33  had inadvertently removed StatsLogger to BookKeeper client instance in ReplicationWorker process.  So restore StatsLogger in BookKeeper client object.  - Also introduce new config called - 'limitStatsLogging'  which would be used to limit statslogging  as and when needed.  - currently this config is used to limit the stats from PCBC. Because if AR process is running in  each Bookie node  then for each AR there will be n number of PCBCs and totally it comes out to  n^2 PCBCs in the cluster. Which is unmanageable from stats collector perspective. So this config  value can be set to true in AR config.    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1888 from reddycharan/bringbackmetricsforarprocess
2018-12-17T13:18:49Z,1785,[STATS] [DOC] Add @StatsDoc annotation for ledger cache stats    Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document the ledger cache stats.    *Changes*    - convert ledger cache stats to use StatsDoc for documenting metrics    Master Issue: #1785          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1872 from sijie/ledgercache_stats
2018-12-16T08:20:35Z,1785,[STATS] [DOC] Add @StatsDoc annotation for garbage collector stats  Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document gc stats.    *Changes*    - convert gc stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1875 from sijie/gc_stats
2018-12-14T01:45:11Z,1884,Issue #1884: (@W-5697664@) dir_*_usage stats are reported as 0 ...  for read-only bookies after a restart    ### Motivation    Fixing the Issue #1884:    When a read-only bookie is restarted it keeps reporting `dir_*_usage`  stats as `0` until it becomes writable again.    This is caused by the `LedgerDirsMonitor.check` only updating  `diskUsages` if there are any writable dirs  or if the total usage  goes below the low water mark  otherwise relying on previously filled  values which are `0` after a bookie is restarted.    ### Changes    * Change the `LedgerDirsMonitor.check` to update `diskUsages`    even when there are no writable dirs.  * Add new `testLedgerDirsMonitorStartReadOnly` testing this scenario.  * Simplify previous tests checking read-only since `diskUsages`    are now updated regardless if a bookie is in read-only mode.    jvrao reddycharan         Reviewers: Sijie Guo <sijie@apache.org>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #1885 from pasha-kuznetsov/issue-1884-dir-usage-ro-restart  closes #1884
2018-12-14T01:43:33Z,1867,BP-37: Improve configuration management for better documentation    Descriptions of the changes in this PR:    *Motivation*    One common task in developing bookkeeper is to make sure all the configuration  settings are well documented  and the configuration file we ship in each release  is in-sync with the code itself.    However maintaining things in-sync is non-trivial. This proposal is exploring  a new way to manage configuration settings for better documentation.    Master Issue: #1867          Reviewers: Matteo Merli <mmerli@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1868 from sijie/bp37_conf_documentation
2018-12-14T01:28:26Z,1785,[STATS] [DOC] Add @StatsDoc annotation for journal stats      Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)   this PR is to document the journal stats.    *Changes*    - convert journal stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1870 from sijie/statsdoc_journal
2018-12-13T14:50:44Z,1785,[STATS] [DOC] Add @StatsDoc annotation for bookkeeper autorecovery stats  Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document bookkeeper autorecovery stats.    *Changes*    - convert bookkeeper autorecovery stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Jia Zhai <None>  This closes #1879 from sijie/replication_stats
2018-12-13T14:49:02Z,1785,[STATS] [DOC] Add @StatsDoc annotation for db ledger storage stats    Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document the db ledger storage stats.    *Changes*    - convert db ledger storage stats to use StatsDoc for documenting metrics    Master Issue: #1785          Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1874 from sijie/ldb_stats
2018-12-13T14:45:09Z,1838,Add get method for rest endpoint gc  Descriptions of the changes in this PR:    Add get method for rest endpoint gc to get force triggered GC running status on Bookie.  true -- force triggered GC is running on Bookie. false -- not running.    ### Motivation    This is base on PR #1838  and in the review comments sijie is suggested to add get methods.    ### Changes    Add get method for rest endpoint gc and unit test.          Reviewers: Sijie Guo <sijie@apache.org>  This closes #1840 from jiazhai/rest_gc_get
2018-12-13T14:41:34Z,1785,[STATS] [DOC] Add @StatsDoc annotation for memtable stats  Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document the memtable stats.    *Changes*    - convert memtable stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1873 from sijie/memtable_stats
2018-12-12T01:23:07Z,1785,[STATS] [DOC] Add @StatsDoc annotation for bookkeeper client stats      Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document bookkeeper client stats.    *Changes*    - convert bookkeeper client stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1878 from sijie/client_stats
2018-12-12T01:20:52Z,1785,[STATS] [DOC] Add @StatsDoc annotation for interleaved ledger storage stats  Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document interleaved ledger storage stats.    *Changes*    - convert interleaved ledger storage stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1877 from sijie/interleaved_stats
2018-12-12T01:19:29Z,1785,[STATS] [DOC] Add @StatsDoc annotation for bookie state manager stats      Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document bookie state manager stats.    *Changes*    - convert bookie state manager stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1876 from sijie/bookie_state_stats
2018-12-12T01:14:54Z,1785,[STATS] [DOC] Add @StatsDoc annotation for entrylogger stats  Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)   this PR is to document the entrylogger stats.    *Changes*    - convert entrylogger stats to use StatsDoc for documenting metrics    Master Issue: #1785        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1871 from sijie/document_ledgerstorage_stats
2018-12-12T01:13:19Z,1881,[CI] Update precommit job captions with trigger phrase      Descriptions of the changes in this PR:    *Motivation*    Sometime people don't know how to retrigger a bookkeeper precommit job.    *Changes*    This PR is adding the trigger phrase to the job caption. so people will know  how to retrigger the jobs in the PR itself.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1881 from sijie/update_jenkins_for_self_instructions
2018-12-11T20:43:25Z,1770,ISSUE #1770: Add local checker for Sorted/InterleavedLedgerStorage  The main goal of this patch is the ScrubberService LifecycleComponent  which runs in the background periodically verifying the internal  consistency of the LedgerStorage. To get that to work:    - LedgerStorage now has a localConsistencyCheck call with  implementations in Interleaved and Sorted.    - In service of that implementation  LedgerCache gains an interface for  iterating safely over the entries of a ledger with a way of handling  concurrently modified or deleted ledgers with corresponding  modifications to LedgerEntryPage for detecting deletion.    - EntryLogger has been refactored to permit checking the correctness  (and throwing a descriptive exception in case of a problem) of an entry  without actually reading it for use within localConsistencyCheck.    - The two mechanisms for iterating over a ledger's entries in  BookieShell have both been replaced with the new single implementation  (InterleavedLedgerStorageTest now has a test checking the output of the  affected command.)    - Misc changes to *LogCompactor to support tests in  InterleavedLedgerStorageTest.    Because the consistency check needs to run in the background and hold  LEP instances potentially for a relatively long time  a delete may  overlap with the scan of an LEP page. As part of this patch   IndexInMemPageMgr and LedgerEntryPage now permit an LEP to be marked  deleted and not added back to the set of free pages until released.    This patch also adds an option to run the checker on startup (defaults  to false).    (bug W-5188823)  (bug W-5153309)  (rev cguttapalem)  Signed-off-by: Samuel Just <sjustsalesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1819 from athanatos/forupstream/wip-1770  closes #1770
2018-12-06T20:02:41Z,723,Ledger manager factories initialized with max metadata version  In dce4fd4 the max metadata format version was put in the  configuration which was then used to create ledger managers. This is  not safe though  as it there are multiple paths which through which  ledger manager factories are created and some may not see this  configuration modification. For example  on a new cluster where there  is no preexisting layout  the layout isn't written until after the  ledger manager factory has been created.    This patch changes LedgerManagerFactory#initialize to explicitly  require that the max ledger metadata format is specified in the call.    Master issue: #723  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1865 from ivankelly/explicit-max
2018-12-06T13:20:22Z,1857,changingEnsemble should be negated before calling unset success  If the first pending add op is completed  but does not have the  replaced bookie in its write set  callbacks are triggered straight  away.    Previously this would then hang forever  as the changingEnsemble would  be true. This patch sets changingEnsemble to false before calling  unsetSuccessAndSendWriteRequest so that if callbacks are triggered  straight away  they can actually complete. It also moves the call to  unsetSuccessAndSendWriteRequest outside of the metadataLock so that  the callbacks don't run inside the lock.    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1857 from ivankelly/block-order
2018-12-06T13:16:50Z,1862,Fix selectFromNetworkLocation in RackawareEnsemblePlacementPolicyImpl    Descriptions of the changes in this PR:    Since beginning  selectFromNetworkLocation(excludeRacks  excludeBookies ..)  method kind of ignores predicate/ensemble passed to that method  https://github.com/apache/bookkeeper/blob/branch-4.7/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L694.    This was kind of ok  because so far effectively this method is called from only  one place - https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L612   which passes TruePredicate.INSTANCE and EnsembleForReplacementWithNoConstraints.INSTANCE.    But it is not ideal to ignore those parameters in selectFromNetworkLocation(excludeRacks  excludeBookies ..)   from future usage perspective. So passing the received predicate and ensemble to the underlying calls.    Reviewers: Sijie Guo <sijie@apache.org>  Samuel Just <sjust@salesforce.com>  This closes #1862 from reddycharan/fixrackaware
2018-12-05T20:35:18Z,1859,[RELEASE] [WEBSITE] Add documentation for release 4.7.3  *Motivation*    Add documentation for release 4.7.3    Descriptions of the changes in this PR:          Reviewers: Matteo Merli <mmerli@apache.org>  This closes #1859 from sijie/website_473
2018-12-04T19:28:53Z,1851,Update BookKeeper version in Docker file for 4.8.1 release  Descriptions of the changes in this PR:  Change version from 4.8.0 in 4.8.1 on Dockerfile in branch-4.8      ### Motivation    Distribute new Docker images for 4.8.1 release            Reviewers: Sijie Guo <sijieapache.org>    This closes #1851 from eolivelli/fix/docker-4.8.1        Reviewers: Sijie Guo <sijie@apache.org>  This closes #1854 from eolivelli/fix/pick-481-docker
2018-12-04T18:55:15Z,1850,[RELEASE NOTES] Release Notes for 4.7.3          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1850 from sijie/release_notes_473
2018-12-04T18:53:41Z,1671,remove misleading comment    Descriptions of the changes in this PR:    *Motivation*    ParallelRead is actually used internally at ledger recovery. It is used at production.    *Changes*    Removed misleading comment.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1671 from sijie/remove_misleading_comment
2018-12-04T11:03:14Z,1858,Add max ledger metadata format version to layout  The max ledger metadata format version is the maximum format version  that will be used to write ledger metadata. By setting it in the  ledger layout it becomes a cluster-wide configuration which is  initialized along with the cluster. Any cluster initialized with the  current code will end up with version 2. For this cluster serde will  only ever serialize with up to version 2 of the ledger metadata  format  so all clients that understand version 2 will continue to  work  even as the software version increases and new metadata formats  become available (such as the binary metadata format coming soon).    Currently there is no handling in LedgerMetadataSerDe  because we  don't have a new version  but when there is  it will use  ```  Math.min(maxLedgerMetadataFormatVersion            metadata.getMetadataFormatVersion())  ```  to decide which serialization method to use.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1858 from ivankelly/format-version
2018-12-03T19:41:01Z,1856,[TABLE SERVICE] remove extra code  Descriptions of the changes in this PR:  review code and found extra code.      ### Motivation  clean code    ### Changes    clean extra code    Master Issue: #<master-issue-number>        Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1856 from xujianhai/master
2018-12-03T15:07:16Z,1855,Mark 4.8.1 as latest release  Descriptions of the changes in this PR:    Change website configuration so that the downloads make suggest 4.8.1 and 4.8.0            Reviewers: Sijie Guo <sijie@apache.org>  This closes #1855 from eolivelli/fix/mark-481-latest
2018-12-03T12:37:03Z,723,Users of LedgerMetadata should use the api interface  All users to LedgerMetadata should use api.LedgerMetadata rather than  client.LedgerMetadata.    Some methods have been promoted to the interface to allow this.    Other methods have been moved out to a utility class that acts purely  on api.LedgerMetadata.    client.LedgerMetadata has been renamed to LedgerMetadataImpl.    Master issue: #723    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1852 from ivankelly/kill-store-ctime
2018-12-01T00:29:53Z,281,LedgerMetadata should require digest and password together  There's never a case when setting the digest and password where you  only have one  but not the other.    The patch adds validation in LedgerMetadata that if you provide one  you  provide the other. The only case where you don't provide these is when   using pre-4.1.0 (i think) metadata.    Master issue: #281    Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1836 from ivankelly/builder-pw
2018-12-01T00:29:01Z,1842,[TABLE SERVICE] add a bookie registration based grpc name resolver  Descriptions of the changes in this PR:    *Motivation*    Table service is using grpc name resolver to figure out the alive servers serving table service.  Currently it is using default dns name resolver. In the context of Pulsar  since brokers talk  to bookies via zookeeper service discovery  it is making sense for brokers talk to table service  via zookeeper service discovery. So this PR is to add a bookie registration based grpc name resolver.    *Changes*    Implement a bookie-registration library based grpc name resolver.        Reviewers: Jia Zhai <None>  This closes #1842 from sijie/add_zookeeper_resolver
2018-12-01T00:06:29Z,1821,Let OS choose port for vertx test  The previous implementation was searching for a open port by  repeatedly trying to startServer on ports starting at 8080. However   after the first attempt fails  the Vertx instance in VertxHttpServer  is broken and the test hangs. 8080 is a very common port to have stuff  running on  so these hangs have happened to be repeatedly.    This fix is to allow the OS to choose the port  by specifying 0 as the  listening port and querying afterwards.    Issue: #1821    Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1853 from ivankelly/vertx-8080
2018-11-30T10:25:40Z,723,Move serialization code out of LedgerMetadata  This PR moves the serialization code out of LedgerMetadata so that it  can later be adapted to run different serialization code depending on  the environment.    Notable non-refactor changes:  - LedgerMetadata#toString no longer uses #serialize because it's no    longer available. Instead it uses the ToString helper from guava.    byte[] fields are now base64 encoded.  - There's a new state enum and getter in api.LedgerMetadata. This is    so that LedgerMetadataFormat can be removed from    client.LedgerMetadata.    Master issue: #723    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1848 from ivankelly/refactor-md-serde
2018-11-30T08:27:23Z,1813,Set default sizes of DbLedgerStorage read and write cache to be proportional to JVM direct memory    ### Motivation    To simplify Bookie configuration when using `DbLedgerStorage`  set the memory size defaults for WriteCache  ReadCache and RocksDB block cache to be pegged to the available direct memory configured in the JVM.    User can always configure specific values and override this behavior.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1813 from merlimat/auto-conf-db-storage-mem
2018-11-30T06:51:05Z,1844,[CI] increase timeout of website build to 120 mins      Descriptions of the changes in this PR:    *Motivation*    Since we have more releases  the build time for website is increasing to beyond 30 min.  Increase it to 120 mins for now        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1844 from sijie/change_website_buildtime
2018-11-29T09:07:00Z,1835,Rename LedgerMetadataBuilder#closingAt to  parameter order (#1835)  * Rename LedgerMetadataBuilder#closingAt to clarify parameter order    The two parameters are long  which can be confusing.    Master issue: #281
2018-11-29T02:41:34Z,1785,[STATS] Add @StatsDoc annotation for bookie server request stats      Descriptions of the changes in this PR:    *Motivation*    As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785)  this PR is to document the request stats  for bookkeeper server.    *Changes*    - add `parent` and `happensAfter` in StatsDoc  - convert bookie request stats to use StatsDoc for documenting metrics    Master Issue: #1785         Reviewers: Jia Zhai <None>  This closes #1839 from sijie/bp36_add_parent_and_happensafter
2018-11-29T02:10:38Z,1674,[RELEASE] fix docker mount volume issue      Descriptions of the changes in this PR:    * Motivation     #1674 introduced a regression for running release scripts on mac.   the destination should be "/home/${USER}" rather than ${LOCAL_HOME}.   because the docker os is linux. Otherwise the gpg keys can not propagated   correctly from host machine to docker.    * Changes     Use `/home/${USER}` as the destination path          Reviewers: Jia Zhai <None>  This closes #1845 from sijie/fix_release_scripts
2018-11-28T20:07:29Z,1843,[LEDGER STORAGE] DbLedgerStorage should do periodical flush      Descriptions of the changes in this PR:    *Motivation*    DbLedgerStorage doesn't drive checkpoint itself. so currently DbLedgerStorage flush only  happens either when write-cache is full or entry log file rotated. The correctness is still  maintained. However the behavior is different from original yahoo behavior.    *Changes*    Revert the behavior back to original periodical flush        Reviewers: Matteo Merli <mmerli@apache.org>  Jia Zhai <None>  This closes #1843 from sijie/dbledgerstorage_sync
2018-11-28T15:31:13Z,1834,Only publish suspect ledgers if they have missing fragments  This is a fix for a flake in  AuditorPeriodicCheckTest#testIndexCorruption. Auditor#checkAllLedgers()  runs a check on all ledgers  passing ProcessLostFragmentsCb as a  callback to LedgerChecker#checkLedger for each one.    LedgerChecker#checkLedger triggers the callback on completion   regardless of whether there are fragments missing on not. Previously   ProcessLostFragments was not checking if there were lost fragments  before publishing the ledger as suspected in zookeeper.    The flake triggered as there were always two ledgers that existed when  the check occurred  both would be reported as suspected  and it was  random which would be returned while polling for underreplicated  ledgers.    The fix is to check that something is actually underreplicated before  publishing.    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1834 from ivankelly/auditor-periodic-flake
2018-11-28T08:19:52Z,1818,Use ${sha1} instead of ${ghprbActualCommit} for Pre-commit Jobs  Descriptions of the changes in this PR:    ### Motivation    According to  the documentation of the GitHub Pull Request plugin:  - ${sha1} means a commit which is the result of merging the PR branch with the target branch  - ${ghprbActualCommit} is directly the PR branch    So currently we are not testing the PR branch against the target branch  but only the branch "as it is"    see:  https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=4&ved=2ahUKEwje0PjpnuDeAhUF2SwKHXN4BgYQFjADegQIAxAB&url=https%3A%2F%2Fwiki.jenkins.io%2Fdisplay%2FJENKINS%2FGitHub%2Bpull%2Brequest%2Bbuilder%2Bplugin&usg=AOvVaw2XvPL5ynRYnqVEWqpe9cs1    ### Changes    Use ${sha1} instead of ${ghprbActualCommit} for Pre-commit Jobs        Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo  This closes #1818 from eolivelli/fix/jenskin-use-sha1
2018-11-28T06:58:12Z,1841,[UTILS] Move ReflectionUtils to bookkeeper-common module  Descriptions of the changes in this PR:    *Motivation*    RefelectionUtils contains helpers for loading classes from relections.  It is useful across the project. However the class is in `bookkeeper-server` module only.    *Changes*    Move this class to `bookkeeper-common` module        Reviewers: Jia Zhai <None>  This closes #1841 from sijie/move_reflection_utils
2018-11-27T10:16:19Z,1838,Add rest endpoint trigger_gc to trigger GC on Bookie  Descriptions of the changes in this PR:    Add rest endpoint trigger_gc to trigger GC on Bookie    ### Motivation    Some times user would like to trigger GC manually instead of waiting to the timeout or disk full.         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1838 from jiazhai/rest_force_gc
2018-11-26T08:51:38Z,1795,Release notes for 4.8.1  Release notes for 4.8.1    The commit to review is d09296c589b8a188937833ca51a4b24ea337a901        Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1795 from eolivelli/fix/481-release-notes
2018-11-25T05:29:12Z,1837,Remove MathUtils.now()  Descriptions of the changes in this PR:    *Motivation*    `MathUtils.now()` using System.nanoTime doesn't provide accurate time. It is used  for measuring pupose. However since `nanoTime` can have numeric overflow  so when  it is used for converting into milliseconds  it is misleading and error-prone. A  lot of places using `MathUtis.now` can all replaced with `System.currentTimeMillis()`.    It leads to unknown behavior on compactions. examples is shown in the following figure.    <img width="1157" alt="wechatimg180" src="https://user-images.githubusercontent.com/1217863/48965961-d860b600-ef7c-11e8-9394-1d51cef5c68c.png">    example: this graph shows the major_compaction_count. major compaction is supposed to run every day. but in the graph  there is no major compaction occuring in 4 days.    *Changes*    Remove `MathUtils.now()` and replace it with `System.currentTimeMillis()`.          Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1837 from sijie/remove_mathutils_now
2018-11-23T18:50:47Z,281,Make custom metadata final  Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1833 from ivankelly/immut-cust
2018-11-23T16:44:35Z,281,Remove LedgerMetadata copy constructor  A copy constructor makes no sense when it's not possible to mutate the object.    Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1832 from ivankelly/kill-copy
2018-11-23T14:57:35Z,1790,Prepare website structure for 4.8.1 release  Signed-off-by: eolivelli <eolivelliapache.org>    Descriptions of the changes in this PR:        ### Motivation    Prepare the wesite for 4.8.1 release    ### Changes    Create the structure for docs for 4.8.1        Reviewers: Sijie Guo <sijie@apache.org>  This closes #1790 from eolivelli/fix/site-481-structure
2018-11-23T14:32:31Z,281,Make LedgerMetadata fields for closing immutable  Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1831 from ivankelly/close-immut
2018-11-23T00:04:44Z,281,Remove LedgerMetadata methods modifying ensembles  Remove any methods in LedgerMetadata that modify the ensemble. With  this change the ensembles are 100% immutable.    Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1830 from ivankelly/no-mod-ensemble
2018-11-23T00:03:15Z,1822,[SCRIPTS] improve bookkeeper script to better handle standalone command    Descriptions of the changes in this PR:        *Motivation*    `bin/bookkeeper standalone` is broken when a release package is built without including `stream` profile.    *Changes*    `standalone` is a service component including everything. so fail the command if it can't locate corresponding components.    Related Issues: #1822          Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1823 from sijie/refactor_bookkeeper_scripts
2018-11-22T19:20:42Z,281,Move utility method from LedgerMetadata to test  The method is only used in the test  so it should live there.    Master issue: #281    Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1829 from ivankelly/move-junk
2018-11-22T19:18:42Z,1810,Remove duplication logic for 'minNumRacksPerWriteQuorum' handling in RackawareEnsemblePlacementPolicyImpl  Descriptions of the changes in this PR:    With this change  https://github.com/apache/bookkeeper/commit/9ba4c4e0d8be770e03110a958fb8b75a65ae0f59  we introduced 'minNumRacksPerWriteQuorum' config option. To handle that  logic is added in  RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal and RackQuorumCoverageSet. But in  retrospect  this is kind of duplicate logic and changes made in RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal  is not really needed  because anyhow 'apply' of predicate (RRTopologyAwareCoverageEnsemble) is called  which calls  'apply' method on all the concerned RackQuorumCoverageSet.  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1810 from reddycharan/revertrackawarechanges
2018-11-22T17:45:48Z,281,Make most LedgerMetadata fields final  Make most fields in LedgerMetadata final. The ones which I have not  changed in this patch require a more involved change  so they'll come  in separate PRs.    Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1828 from ivankelly/mostly-final
2018-11-22T15:23:30Z,281,Remove LedgerMetadata constructors except one for builder  LedgerMetadata shouldn't generally be created outside the client   except for testing. In the case where it is  the builder should be  used to construct it.    I've left the copy constructor for now  as I don't feel comfortable  removing it until all fields are final  which will occur soon.    Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1827 from ivankelly/kill-constructors
2018-11-22T11:15:35Z,1826,Fix flake in AuditorPeriodicBookieCheckTest  The flake was occurring because the bookie checker was trying to  connect to a TCP endpoint that didn't respond (1.1.1.1) and was  waiting for the whole tcp connect timeout (10sec)  while the test was  waiting 10 seconds for the success condition to occur. The success  condition often occurred just after the test fails.    The solution was to bring the connect timeout for the client down to  500ms  giving the auditor plenty of time to register the  underreplicated ledger.    I guess this used to pass in the past because maybe 1.1.1.1 was  actually rejecting packets instead of dropping them  and these changed  when cloudflare took over the address. I changed the endpoint to  192.0.2.0/24 range (TEST-NET) to avoid a similar scenario in the  future.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1826 from ivankelly/auditor-bookie-flake
2018-11-22T01:42:45Z,281,LedgerMetadata#parseConfig uses Metadata Builder  parseConfig is one of the main places that mutates member fields of  LedgerMetadata. This change removes these mutates to make it use  LedgerMetadataBuilder instead.    Master issue: #281    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1825 from ivankelly/parse-builder
2018-11-21T17:24:59Z,1824,AbstractZkLedgerManager should catch all exceptions from parseConfig  And always complete the request if an exception does occur  rather  than throwing it out to the higher level  and hanging the request  forever.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1824 from ivankelly/catch-all-exception-zk
2018-11-19T14:23:36Z,281,Change LedgerManager to use CompletableFuture  All new uses of LedgerManager are creating GenericCallbackFutures to  pass in as the callback. This patch cuts out the middleman  and makes  LedgerManager return CompletableFutures itself.    The patch only touches the CRUD operations  and not  LedgerManager#asyncProcessLedgers  which I may tackle in a later PR.    Master issue: #281    Reviewers: Sijie Guo <sijie@apache.org>  This closes #1809 from ivankelly/metastore-futures
2018-11-19T10:26:39Z,1787,Rollback snakeyaml version (Fixes IT tests)  The stats gen (#1787) change introduced a version of snakeyaml which  is incompatible with arquillian-cube (between 1.19 and 1.23 they  remove some methods).    This was picked up by the integration tests  but overriden to submit.    This change pins the snakeyaml version at 1.19  thereby allowing the  integration tests to run again.    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1817 from ivankelly/fix-it
2018-11-17T17:11:31Z,1814,Introduce condensed encoding format for availabilityOfEntriesOfLedger  Descriptions of the changes in this PR:    - this condensed encoding format will take fewer bytes than initially  proposed bit vector.  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1814 from reddycharan/updatebpdoc
2018-11-16T22:10:26Z,1410,[BOOKIE] Fix sorted ledger storage rotating entry log files too frequent      Descriptions of the changes in this PR:    *Motivation*    A strong behavior was observed when using sorted ledger storage with single entry log manager on production:    "the entry log files are rotated very frequently and small entry log files are produced".    The problem was introduced due to #1410.    At current entry logger  when a new entry log file is created  EntryLogger will notify its listeners  that a new entry log file is rotated via [`onRotateEntryLog`](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogManagerBase.java#L152).    Before the change in #1410  `SortedLedgerStorage` inherits from `InterleavedLedgerStorage`.  So when a new entry log file is rotated  `SortedLedgerStorage` is notified.    However after the change in #1410  `SortedLedgerStorage` doesn't inherits `InterleavedLedgerStorage` anymore.  Instead  the relationship is changed to composition. `SortedLedgerStorage` is composed using an interleaved ledger  storage. So the entrylog listener contract was broken. `SortedLedgerStorage` will not receive any `onRotateEntryLog`  notification any more.    *Changes*    When `SortedLedgerStorage` initializes  it passes its own entry log listener down to the interleaved ledger storage.  So entry logger can notify the right person for entry log rotations.    *Tests*    Existing tests should cover most of the case. Looking for how to add new test cases.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Andrey Yegorov <None>  This closes #1807 from sijie/fix_rotation_behavior
2018-11-16T22:09:31Z,1816,Fix cpu-affinity module build on jdk10+  Port tricks from circe-checksum to cpu-affinity module in order to make the build pass on JDK11  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1816 from eolivelli/fix/jdk11-cpu-affinity-build
2018-11-14T23:12:57Z,1682,Added BlockingQueue implementation based on JCtools  ### Motivation    Add a `BlockingQueue` implementation that is suitable for low latency and low contention.     Key points:   * Optimized for multiple producers and single consumer   * When waiting for entries  the thread is blocked with busy wait to avoid context switch.    (This will be used in subsequent PRs to optionally enable it)  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1682 from merlimat/blocking-queue
2018-11-13T18:35:24Z,1641,Added module to enable CPU affinity  ### Motivation    This is part of a set of changes aimed at reducing latency in BK at the expense of other aspects (eg: max throughput). While not intended to be used as default settings  they might be good to have whenever the latency becomes critical.     Pinning a thread to a particular CPU will ensure no other process will execute on that CPU reducing all scheduler induced context switches that will cause latency jittery.    A given thread that wants to get pinned to a CPU just needs to call:     ```java  CpuAffinity.acquireCore();  ```    It's called `acquireCore()` because it will also disable hyper-threading on the pinned cpu.    Subsequent PRs will use this module to have the option to pin critical threads to available CPUs.    ### Changes   * Added JNI module to call `sched_setaffinity()` to pin a thread to a particular CPU   * Automatically discover available isolated CPUs   * Acquire file-based locks to allow multiple processes on same machine to acquire CPUs independently.  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1641 from merlimat/cpu-affinity
2018-11-13T08:54:56Z,1786,[STATS] introduce `StatsDoc` annotation for better documenting metrics exposed by bookkeeper  Descriptions of the changes in this PR:        ### Motivation    A common ask from people using bookkeeper is how they can monitor bookies and bookkeeper clients  what kind of metrics that bookkeeper exposes  and what are the important metrics. Currently bookkeeper doesn't provide any metrics page for guiding people on monitoring bookkeeper services.    In order to help people on this  we need to provide a few documentation pages about metrics. However if we just write such pages  those pages  can quickly get out-of-dated when code is changed.    ### Changes    - Introduce an annotation `StatsDoc` for annotating the counters/gauges/opstats in the source code.  - Provide a tool to generate the stats and their documentation into a yaml file.    The yaml file will be used by the website for rendering a metrics reference page.    ### Results    ```  "server":    "bookie_BOOKIE_READ_ENTRY_BYTES":      "description": |-        bytes stats of ReadEntry on a bookie      "type": |-        OPSTATS    "bookie_WRITE_BYTES":      "description": |-        total bytes written to a bookie      "type": |-        COUNTER    "bookie_BOOKIE_ADD_ENTRY":      "description": |-        operations stats of AddEntry on a bookie      "type": |-        OPSTATS    "bookie_BOOKIE_RECOVERY_ADD_ENTRY":      "description": |-        operation stats of RecoveryAddEntry on a bookie      "type": |-        OPSTATS    "bookie_BOOKIE_ADD_ENTRY_BYTES":      "description": |-        bytes stats of AddEntry on a bookie      "type": |-        OPSTATS    "bookie_BOOKIE_FORCE_LEDGER":      "description": |-        total force operations occurred on a bookie      "type": |-        COUNTER    "bookie_READ_BYTES":      "description": |-        total bytes read from a bookie      "type": |-        COUNTER    "bookie_BOOKIE_READ_ENTRY":      "description": |-        operation stats of ReadEntry on a bookie      "type": |-        OPSTATS  ```    Master Issue: #1786        Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  This closes #1787 from sijie/stats_generator
2018-11-13T08:53:33Z,1785,BP-36: Stats documentation annotation      Descriptions of the changes in this PR:    *Motivation*    A common ask from people using bookkeeper is how they can monitor bookies and bookkeeper clients  what kind of metrics that bookkeeper exposes  and what are the important metrics. Currently bookkeeper doesn't provide any metrics page for guiding people on monitoring bookkeeper services.    In order to help people on this  we need to provide a few documentation pages about metrics. However if we just write such pages  those pages  can quickly get out-of-dated when code is changed. The proposal here is to seek a programming way for generating metrics related pages.    Master Issue: #1785        Reviewers: Sijie Guo <sijie@apache.org>  Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #1786 from sijie/bp_stats_generator
2018-11-12T20:11:59Z,281,Move version out of LedgerMetadata  The version is a property of the metadata store and not of the  LedgerMetadata object itself. Putting it in the LedgerMetadata forces  that LedgerMetadata to be mutable  as it needs to be updated before  being sent to the LedgerManager.    This change moves version out of LedgerMetadata and modifies the  LedgerManager to use Versioned<LedgerMetadata>.    This is a large change  but almost purely mechanical.    TestHttpService has been modified to remove a preexisting flake in a  test which had to be modified for this change.    Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1797 from ivankelly/kill-set-version
2018-11-12T12:54:34Z,1798,[tools] package bookkeeper tools into a separated distribution  Descriptions of the changes in this PR:    *Motivation*    Server distribution contains a lot of stuffs that doesn’t need to run bkctl and bookkeeper shell  such as stats providers  http servers and many other dependencies.    At many environments  you want to deliver a set of tools to your customers to interact with or operate bookkeeper clusters. They don’t care about server side stuffs and ask them to use a server package to run a tool makes things confused.    *changes*    Create a new ‘bkctl’ package that only contains bookkeeper shell and new cli.          Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1798 from sijie/package_bookkeeper_tool
2018-11-12T12:42:59Z,1799,ISSUE #1799: bkctl is broken with default build options  Descriptions of the changes in this PR:    *Motivation*    `bkctl` is designed in a modularized way for extensibility.  it loads command groups via ServiceLoader. However current build  profile doesn't leverage this extensibility. Instead it hardcodes  all the commands in one service load file. So if `bkctl` is built  without `-Dstream`  it will broke.    *Changes*    - move `ledger` related commands to `tools/ledger`  - generate the service load file by concating `commands` files from each module's resources directory.    *Results*    bkctl works for all build profiles.    - without `-Dstream`    ```  $ bin/bkctl    bkctl interacts and operates Apache BookKeeper clusters    Usage:  bkctl [flags] [command group] [commands]    Commands:        bookie      Commands on operating a single bookie      bookies     Commands on operating a cluster of bookies      cookie      Commands on operating cookies      ledger      Commands on interacting with ledgers        help        Display help information about it    Flags:        -c  --conf          Configuration file        -n  --namespace          Namespace scope to run commands (only valid for table service for now)        -u  --service-uri          Service Uri        -h  --help          Display help information    Use "bkctl [command] --help" or "bkctl help [command]" for more information  about a command  ```    - with `-Dstream`    ```  $ bin/bkctl    bkctl interacts and operates Apache BookKeeper clusters    Usage:  bkctl [flags] [command group] [commands]    Commands:        bookie          Commands on operating a single bookie      bookies         Commands on operating a cluster of bookies      cluster         Commands on administrating bookkeeper clusters      cookie          Commands on operating cookies      ledger          Commands on interacting with ledgers      namespace       Commands on operating namespaces      table           Commands on interacting with tables      tables          Commands on operating tables        help            Display help information about it    Flags:        -c  --conf          Configuration file        -n  --namespace          Namespace scope to run commands (only valid for table service for now)        -u  --service-uri          Service Uri        -h  --help          Display help information    Use "bkctl [command] --help" or "bkctl help [command]" for more information  about a command  ```    Master Issue: #1799         Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1800 from sijie/refactor_bkctl  closes #1799
2018-11-11T21:30:15Z,1788,Fix bugs in DefaultEnsemblePlacementPolicy    Descriptions of the changes in this PR:    - bookieInfoMap is not initialized and newEnsemble will throws BKNotEnoughBookiesException if  diskWeightBasedPlacement is enabled  - add test coverage for DefaultEnsemblePlacementPolicy with diskWeightBasedPlacement enabled      Reviewers: Sijie Guo <sijie@apache.org>  Andrey Yegorov <None>  This closes #1788 from reddycharan/defaultplacementfix
2018-11-11T21:28:58Z,1803,Fix indentation in BP-34 doc    Descriptions of the changes in this PR:    - just indentation fix      Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1803 from reddycharan/bp34fix
2018-11-11T18:42:32Z,1805,Fixed Auth with v2 protocol  ### Motivation    BK auth framework is currently broken when using v2 protocol.    ### Changes     * Fixed auth when using V2 protocol   * Made sure a client with authentication enabled can talk to a bookie without authentication. This is required in any case when enabling/disabling authentication on a live cluster.   * Run all auth tests against both v2 and v3 protocol.    This should be included in 4.7.2 to give a path to upgrade.    cc/ rdhabalia   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1805 from merlimat/fix-v2-auth
2018-11-10T09:34:57Z,1801,[BUILD] Ignore `versionsBackup` file generated by `mvn versions:set`    Descriptions of the changes in this PR:    *Motivation*    `mvn versions:set` will generate files suffixed with `.versionsBackup`          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1801 from sijie/exclude_versionsbackup
2018-11-10T00:32:37Z,1793,[TOOLS] improve bkctl help message      Descriptions of the changes in this PR:    *Motivation*    Currently `bin/bktcl help` will output all command groups all together.  It is a bit hard to tell what command groups to use  especially some  commands are used for table service.    *Changes*    Introduce `category` in the cli spec to define which category that a  command group belongs to. So when it prints out the help message  it  can use that information to categorize the command groups together  to provide better user experience.    *Results*    ```  $ bin/bkctl help  bkctl interacts and operates Apache BookKeeper clusters    Usage:  bkctl [flags] [command group] [commands]    Infrastructure commands :        bookie          Commands on operating a single bookie      bookies         Commands on operating a cluster of bookies      cluster         Commands on administrating bookkeeper clusters    Ledger service commands :        ledger          Commands on interacting with ledgers    Table service commands :        namespace       Commands on operating namespaces      table           Commands on interacting with tables      tables          Commands on operating tables    Other commands :        help            Display help information about it  ```        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1793 from sijie/add_groups
2018-11-09T05:47:12Z,1794,[TOOLS] add cookie related commands      Descriptions of the changes in this PR:    *Motivation*    In some use cases  you need cookie related tools to create/delete/update/get cookie when handling production issues.  Currently bookkeeper doesn't provide such commands.    *Changes*    Add cookie related commands    - create  - delete  - get  - update  - generate        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1794 from sijie/add_cookie_commands
2018-11-08T16:51:10Z,1791,Issue #1791: Read Submission should bypass OSE Threads  ### Motivation    Profiling of our Bookkeeper Client code for read requests shows that client threads spend half of their time in dispatching requests to OrderedExecutors (just the dispatch itself  not the execution inside OSE): 54% of their CPU time is spent in OrderedExecutor.executeOrdered() (called by LedgerHandle.readEntriesInternalAsync()). The high time spend in request submission to OSE is largely caused by Linux scheduling cost  that is the cost of dispatching the OSE thread to CPU: 42% of total time (3/4th of executeOrdered() time)  threads spend in Unsafe.unpark()  which is essentially Linux scheduling/dispatching of another thread.    ### Changes    This change executes read submissions (PendingReadOp) on read-only ledger handles directly inside the client thread instead of submitting them to Ordered Executors.    Tests with a prototype have shown significant improvements in both overall CPU consumption as well as read latency. The additional work client threads have to do (the dispatch of the read requests to netty) is roughly the same as the (saved) dispatch cost to OSE  so the change turns out to be neutral for CPU consumption of client threads. In some experiments  the savings even exceed the additional work  and client threads consume less cpu even though they "do more". It also frees up lots of resources in OSE threads. Since it eliminates one context-switch in read submission and also avoids serialization of reads to the same ledger (or ledgers hashing to the same OSE)  it also reduces read latency. For a mixed read-write workload (14 000 reads/sec on read-only ledgers  4 000 writes/sec on another set of ledgers)  this change has reduced CPU consumption of OSE threads by 25%  kept CPU consumption of client (and Netty) threads the same  and yielded a 6% improvement of read latency (as measured by BK Client).    Master Issue: #1791: Read Submission should bypass OSE Threads    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1792 from nicmichael/DirectRead  closes #1791
2018-11-08T16:49:32Z,1789,Cache InetSocketAddress if hostname is IPAddress      Descriptions of the changes in this PR:    - in BookieSocketAddress if IPAddress is hostname then it is okay  to cache InetSocketAddress  since the canonicalhostname of the node  dont change.      Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Andrey Yegorov <None>  This closes #1789 from reddycharan/bookieaddressonlywhenhostname
2018-11-06T20:22:23Z,1784,Upgrade to Netty 4.1.31 and use individual dependencies  ### Motivation     * Upgrade to latest Netty version which brings in perf improvements and some new features (eg: https://github.com/netty/netty/pull/8267)      * Broke down the dependencies from `netty-all` into individual components  as discussed at https://github.com/apache/bookkeeper/pull/1755#discussion_r228449352      Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1784 from merlimat/netty-4.1.31
2018-11-03T17:42:49Z,1765,Use default metric registry in Prometheus exporter  ### Motivation    Currently the Prometheus exporter is using a private metrics register. This doesn't work well for BK client where we want to expose in the same registry of application  or when we want to interact with other tools that use the default static registry (eg: log4j  jetty integrations for prometheus).    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1765 from merlimat/prometheus
2018-11-03T17:41:19Z,1767,ISSUE #1767: security vulnerabilities in 3rd party dependencies  Descriptions of the changes in this PR:    Upgraded jline and jackson to remove security vulnerabilities mentioned in #1767     ### Motivation    Remove security vulnerabilities mentioned in #1767     ### Changes    Upgraded jline and jackson 3rd party dependencies    Master Issue: #1767         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1777 from mptap/fix-1767-remove-vulnerabilities  closes #1767
2018-11-03T00:47:37Z,1778,[TABLE SERVICE] [PYTHON] add default port to service hosts  Descriptions of the changes in this PR:    *Motivation*    Similar as #1778  add default port to service hosts if port is missing.    *Changes*    add default port to service hosts if they miss ports    Related Issue: #1778        Reviewers: Jia Zhai <None>  This closes #1780 from sijie/fix_python_service_uri
2018-11-02T21:41:09Z,1778,[TABLE SERVICE] add default port to service hosts    Descriptions of the changes in this PR:    *Motivation*    Currently we have to add `4181` in the service uri in order to make it work.  Ideally it would be great that the system can fill the default port if port is missing.    *Changes*    add default port when parsing `ServiceURI`          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1778 from sijie/add_default_port
2018-11-02T16:59:38Z,1752,[TESTS] Issue #1752: disable etcd tests in normal builds      Descriptions of the changes in this PR:    *Motivation*    apache/bookkeeper#1766 attempts to disable etcd tests in normal builds.  however it only added the `integrationTests` profile but didn't disable tests  in normal builds.    *Changes*    Disable etcd tests in normal builds    Master Issue: #1752         Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1779 from sijie/run_etcd_tests_on_integrationtests  closes #1752
2018-10-31T08:18:57Z,1776,Reduce stack traces in logs for common cases  ### Motivation    For common "error" conditions the exception message is the only important bit while the stack traces are just adding clutter the logs files.       Reviewers: Andrey Yegorov <None>  Sijie Guo <sijie@apache.org>  This closes #1776 from merlimat/master
2018-10-30T18:47:54Z,1771,[TABLE SERVICE] Fix python client can't read keys written by java clients  Descriptions of the changes in this PR:    *Motivation*    Python client is a thin table service client. So it relies on storage container  intercepting the requests to attach routing header. It attaches the routing header  if the requests are needed to route to remote containers; however for the local containers  it doesn't attach the right routing header.    *Changes*    Fix `StorageContainerImpl` to use proxy routing interceptor to intercept requests to attach routing header.    *Tests*    Add integration tests in python client & add test for python clients reading key/value pairs written by java clients.        Reviewers: Jia Zhai <None>  This closes #1771 from sijie/remove_python23_incompatible_changes
2018-10-30T18:46:31Z,1749,[TESTS] Fix integration test TestCompatUpgradeYahooCustom.testUpgradeYahooCustom  Descriptions of the changes in this PR:    *Motivation*    apache/bookkeeper#1749 fixes bash script issue but it introduced `set -e` which  will fail `bin/bookkeeper` if grepping configuration file failed.    *Changes*    `set -e` is useful to fail fast if anything fails in the bash script. This change  is to mask exit code of `grep` operation  since the bash script already handle  the grep result.    *Tests*    Manually verified the change works. And the existing TestCompatUpgradeYahooCustom.testUpgradeYahooCustom  integration tests would also verify if the change fixes the problem or not.        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Ivan Kelly <ivank@apache.org>  This closes #1772 from sijie/fix_common_scripts
2018-10-30T18:26:50Z,1757,ISSUE #1757: prevent race between flush and delete from recreating index  IndexPersistencManager.flushLedgerHandle can race with delete by  obtaining a FileInfo just prior to delete and then proceeding to rewrite  the file info resurrecting it.  FileInfo provides a convenient point of  synchronization for avoinding this race.  FileInfo.moveLedgerIndexFile   FileInfo.flushHeader  and FileInfo.delete() are synchronized already  so  this patch simply adds a deleted flag to the FileInfo object to indicate  that the FileInfo has become invalid.  checkOpen is called in every  method and will now throw FileInfoDeleted if delete has been called.  IndexPersistenceManager can catch it and deal with it appropriately in  flush (which generally means moving onto the next ledger).    This patch also eliminates ledgersToFlush and ledgersFlushing.  Their  purpose appears to be to allow delete to avoid flushing a ledger which  has been selected for flushing but not flushed yet avoiding the above  race.  It's not sufficient  however  because IndexInMemPageMgr calls  IndexPersistenceManager.flushLedgerHeader  which can obtain a FileInfo  for the ledger prior to the deletion and then call  relocateIndexFileAndFlushHeader afterwards.    Also  if the purpose was to avoid concurrent calls into  flushSpecificLedger on the same ledger  it's wrong because of the  following sequence:    t0: thread 0 calls flushOneOrMoreLedgers  t1: thread 0 place ledger 10 into ledgersFlushing and completes  flushSpecificLedger  t2: thread 2 performs a write to ledger 10  t3: thread 1 calls flushOneOrMoreLedgers skipping ledger 10  t4: thread 0 releases ledger 10 from ledgersFlushing  t5: thread 1 completes flushOneOrMoreLedgers    Although thread 1 begins to flush after the write to ledger 10  it won't  capture the write rendering the flush incorrect.  I don't think it's  actually worth avoiding overlapping flushes here because both FileInfo  and LedgerEntryPage track dirty state.  As such  it seems simpler to  just get rid of them.    This patch also adds a more agressive version of testFlushDeleteRace to  test the new behavior.  Testing with multiple flushers turned up a bug  with LedgerEntryPage.getPageToWrite where didn't return a buffer with  independent read pointers  so this patch addresses that as well.    (bug W-5549455)  (rev cguttapalem)  Signed-off-by: Samuel Just <sjustsalesforce.com>  (cherry picked from commit 7b5ac3d5e76ac4df618764cafe80aef2994703ec)    Author:   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1769 from athanatos/forupstream/wip-1757  closes #1757
2018-10-30T01:53:19Z,1752,Issue #1752: Etcd docker based tests are running on wrong jobs on CI      Descriptions of the changes in this PR:    *Motivation*    Fixes #1752     Etcd metadata driver is using testcontainer to run Etcd in containers for integration tests.  However this job is running as part normal build  which can cause container image being deleted  due to concurrent builds.    *Changes*    Move etcd metadata driver tests to be as part of `integrationTests`    Master Issue: #1752        Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1766 from codingwangqi/move_etcd_to_integration_tests  closes #1752
2018-10-28T13:30:23Z,1764,[WEBSITE] Fix broken link to ledger-api#example-application  Link should be to a section in same page  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1764 from merlimat/fix-docs-link
2018-10-28T13:06:18Z,281,Kill LedgerMetadata#isConflictWith  It doesn't make sense anymore  as local copies of the metadata are  never modified  only updated with the latest version from the metadata  store.    In effect  this logic has been broken out to the places where we try  to update the metadata store copy. Each time we try to update the  metadata store  we ensure that the update we are applying still makes  sense with regard to the copy of the metadata we are updating.    Master issue: #281    Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1760 from ivankelly/kill-is-conflict-with
2018-10-28T13:05:28Z,1758,[MERGE SCRIPT] remove authors section      Descriptions of the changes in this PR:    *Motivation*    We are using github api to merge pull requests now.  So the authors section is not correct  remove that section and rely on github merge api.    *Changes*    remove authors section in the commit log.          Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1758 from sijie/fix_merge_scripts
2018-10-28T12:56:47Z,1762,Don't cache Bookie hostname DNS resolution forever  ### Motivation    `BookieSocketAddress` is resolving the bookie DNS name in its constructor and then using the already resolved `InetSocketAddress` instance.    If the IP of a bookie changes  the BK client will continue to use the old IP address.    ### Changes    Construct a new `InetSocketAddress` each time `getSocketAddress()` gets called (eg: each time we attempt to make a new connection) so that we're making sure to get the right IP.    I cannot think of a good way to add unit test for this at this point  suggestions are welcome.     I think this should be included in a patch release as well 4.7.3 or 4.8.1  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Ivan Kelly <ivank@apache.org>  This closes #1762 from merlimat/fix-dns
2018-10-28T12:54:53Z,281,Remove LedgerMetadata#getEnsembles in favour of #getAllEnsembles  They do the same thing except that #getEnsembles returns a TreeMap  while #getAllEnsembles returns a NavigableMap.    LedgerMetadata#getAllEnsembles is part of the api interface.    Master issue: #281    Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1759 from ivankelly/remove-get-ensembles
2018-10-25T12:28:57Z,281,Use immutable metadata in LedgerHandle  Which means that for the two LedgerHandle operations that mutate the  metadata  ensemble change and closing  ensure that metadata is written  to the metadata store before the client ever uses it.    Master issue: #281  Author: Ivan Kelly <ivank@apache.org> Author: Sijie Guo <guosijie@gmail.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Andrey Yegorov <dlg99@users.noreply.github.com> Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  Samuel Just <sjust@salesforce.com>  This closes #1646 from ivankelly/immutable-handle-failures
2018-10-25T12:15:18Z,1751,Modules dependencies do not need to be included in checksum Jar  The current assembly configuration is including the jars of the modules dependency inside its own jar.    These jars are completely ignored  but they take up non trivial space.    With this change the size of `circe-checksum.jar` goes from 2.8 MB to 62 KB.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1751 from merlimat/master
2018-10-25T12:12:27Z,1753,Adding multi-node ZKCluster test util class      Descriptions of the changes in this PR:    - adding multi-node ZKCluster util class  - adding new interface for ZKCluster util and having separate implementaions for  single node ZKCluster and multi-node ZKCluster    ### Motivation    This helps in adding more test coverage to Zookeeper aspects.  Author: Sijie Guo <guosijie@gmail.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: cguttapalem <cguttapalem@salesforce.com> Author: Andrey Yegorov <dlg99@users.noreply.github.com> Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1753 from reddycharan/multinodezkcluster
2018-10-25T12:06:58Z,1754,Netty allocator wrapper  ### Motivation    Configuring the correct JVM memory settings and cache sizes for a BookKeeper cluster should be simplified.    There are currently many knobs in Netty or JVM flags for different components and while with a good setup the systems is very stable  it's easy to setup non-optimal configurations which might result in OutOfMemory errors under load.    Ideally  there should be very minimal configuration required to bring up a BookKeeper cluster that can work under a wide set of traffic loads. In any case  we should prefer to automatically fallback to slower alternatives  when possible  instead of throwing OOM exceptions.     * Provide a wrapper to have a single unified configuration point for Netty allocator configuration.   * Provide fallback policy when dealing with direct memory OOM errors    ### Changes     * This is the first PR. It only contains the allocator wrapper implementation. Subsequent PR will add the changes to use it.   * Added `bookkeeper-common-allocator` module to have a no-dependencues module that can be used directly from Pulsar client library too (which doesn't depend on BK).    Author: Sijie Guo <guosijie@gmail.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Matteo Merli <mmerli@apache.org> Author: Andrey Yegorov <dlg99@users.noreply.github.com> Author: Samuel Just <sjust@salesforce.com>  Reviewers: Qi Wang <None>  Sijie Guo <sijie@apache.org>  Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1754 from merlimat/allocator
2018-10-19T00:33:30Z,1749,[BUILD] Fix build & bash script error when not using `stream` profile  Descriptions of the changes in this PR:    *Motivation*    There are two issues in current master when building without stream    - build `bkperf` failed  - bin/bookkeeper is using the wrong module    *Changes*    - build `bkperf` module as part of `stream` profile  - fix the problem in `bin/bookkeeper` locating the right module  - add two tests in travis to test builds without `stream` profile              Author: Sijie Guo <guosijie@gmail.com> Author: Sijie Guo <sijie@apache.org> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Andrey Yegorov <dlg99@users.noreply.github.com> Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #1749 from sijie/fix_build_without_stream_profile
2018-10-17T10:56:41Z,1747,Set ConnectionExpired Listener to MetadataClientDriver in AR    Descriptions of the changes in this PR:    - add setConnectionExpiredListener method to MetadataClientDriver interface.  - add listener to shutdown AR in the case of metadata connection expiry      ### Motivation    This commit - 4f0d2a195bd9be3788876b47813cee1440cf005c  has removed the shutdown logic in AutoRecoveryMain incase of ZK client session expiry  with the following reason "which doesn't make any sense for current retryable zookeeper". But if the ZK session has expired then it is not completely correct to let AutoRecoveryMain to continue to run in that state.  Author: Sijie Guo <guosijie@gmail.com> Author: Andrey Yegorov <dlg99@users.noreply.github.com> Author: cguttapalem <cguttapalem@salesforce.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1747 from reddycharan/conexpirylisten
2018-10-09T01:02:35Z,1733,[TABLE SERVICE] [CLIENT] storage client can open tables on a different namespace  Descriptions of the changes in this PR:      *Motivation*    In some cases  we are using same storage client for opening tables under different namespaces.  It would be good that a client instance can do that.    *Changes*    - Add methods to `StorageClient` to open tables under different namespaces  - Add `asClient` to `StorageAdminClient` to convert admin client to storage client          Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1733 from sijie/improve_client_interface
2018-10-09T00:54:30Z,1736,ReadEntryCallback in ReadLedgerEntriesCmd shouldn't release buffer.      Descriptions of the changes in this PR:    - ReadEntryCallback in ReadLedgerEntriesCmd shouldn't release buffer   which is not owned by the callback.    ### Motivation    with the following change  Per channel bookie clients owns the buffer for read responses. So it is not correct for ReadEntryCallback in ReadLedgerEntriesCmd to release buffer  https://github.com/apache/bookkeeper/commit/8d048abce486c63d428041f77ee9a506756f4d1e#diff-e50ee2c1aec1539ea185a94605b0e550R1611    because of this issue I'm seeing following error with ReadLedgerEntriesCmd  ```  /Workspace/SFStorage/bookkeeper/bookkeeper-server/bin$ ./bookkeeper shell -localbookie readledger -bookie ****  -ledgerid 00000000-0000-0000-0000-000000000003 -firstentryid 1 -lastentryid 3  JAVA_HOME not set  using java from PATH. (/usr/bin/java)    --------- Lid=00000000-0000-0000-0000-000000000003  Eid=1 ---------  18:32:03 724 ERROR Unexpected throwable caught   io.netty.util.IllegalReferenceCountException: refCnt: 0  increment: 1   at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]   at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]   at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1699) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]   at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1286) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]   at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]   at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.22.Final.jar:4.1.22.Final]   at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]    --------- Lid=00000000-0000-0000-0000-000000000003  Eid=2 ---------    18:32:03 733 ERROR Unexpected throwable caught   io.netty.util.IllegalReferenceCountException: refCnt: 0  increment: 1   at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]   at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]   at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1699) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]   at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1286) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]   at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]   at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.22.Final.jar:4.1.22.Final]   at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]  ```  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #1736 from reddycharan/readledgerfix
2018-10-08T17:35:25Z,1737,ISSUE #1737: EntryMemTable.newEntry: always make a copy  Retaining a reference to that array assumes that the caller  won't reuse the array for something else -- an assumption  violated by Journal.scanJournal and probably other callers.    (bug W-5499346)  (rev cguttapalem)  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author:   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1744 from athanatos/forupstream/wip-1737  closes #1737
2018-10-05T22:38:53Z,1742,[TABLE SERVICE] [TESTS] add integration tests for python clients  Descriptions of the changes in this PR:    *Motivation*    We need have test coverage for python clients.    *Changes*    - add scripts to run python client tests for different python versions  - make sure the client can be built on both python2 and python3  - add a postcommit job to run python tests        Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1742 from sijie/python_integration_tests
2018-10-05T22:36:00Z,1703,ISSUE #1703: IllegalReferenceCountException at closing EntryLogManagerForSingleEntryLog  Descriptions of the changes in this PR:    *Motivation*    Fixes #1703.    The active entry log channel in EntryLogManagerForSingleEntryLog is closed twice during shutdown.  One is by EntryLogManagerForSingleEntryLog#close and the other one is EntryLogManagerForSingleEntryLog#forceClose().    *Changes*    This change is adding logic in BufferedChannel to make sure BufferedChannel can be closed multiple times.        Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Andrey Yegorov <None>  This closes #1735 from sijie/issue_1703  closes #1703
2018-10-05T22:34:32Z,1738,Issue #1738: Journal: add a metric for the time ForceWriteRequest spent in the queue  ### Motivation    Investigated latency spike in one of the bookie clusters.  At some point the question at hands was "how much time ForceWriteRequests spend in the queue in this case".  There is no metric to answer this question.    ### Changes    Added new metric.    Master Issue: #1738         Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1739 from dlg99/fix/forcewrite-metric  closes #1738
2018-10-05T22:31:28Z,1740,Issue #1740: IOUtils.close() only accepts Closeable as a vararg which results in unnecessary Object[] created if only one Closeable passed there  Descriptions of the changes in this PR:    added close() variant that takes one Closeable.    ### Motivation    100% of close() usage is with one Closeable.    ### Changes    light refactoring.    Master Issue: #1740         Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1741 from dlg99/nit/ioutils  closes #1740
2018-10-04T09:20:58Z,1734,[TABLE SERVICE] [CLIENT] provide scripts for uploading python clients to pypi  Descriptions of the changes in this PR:    *Motivation*    make the python client available for usage    *Changes*    - update README and setup.py  - set the client version to `4.9.0-alpha-0`  - scripts to build python client and upload it to pypi    *Result*    https://pypi.org/project/apache-bookkeeper-client/4.9.0a0/        Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1734 from sijie/upload_python_client
2018-10-04T09:16:47Z,1726,Introduce lifecycle components for managing components in AutoRecovery    Descriptions of the changes in this PR:      - lifecycle components for managing components in AutoRecovery  - expose metrics of AR in the same http admin endpoint    Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1726 from reddycharan/stackar
2018-10-03T15:30:42Z,1731,[TABLE SERVICE] [STATS] enable stats for grpc calls on both client and server  Descriptions of the changes in this PR:    *Motivation*    We need visibility on both client and server on table service.    *Changes*    - introduce grpc monitoring interceptors for both client and server  - enable monitoring interceptors on both client and server        Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1731 from sijie/grpc_stats
2018-10-03T15:29:52Z,1724,[TABLE SERVICE] [CLI] improve table service related cli commands  Descriptions of the changes in this PR:    *Motivation*    Add missing commands for table service related operations.    *Changes*    - Add missing commands such as get/delete  - Fill the default service uri if it is not provided  - Define the command ops in `Commands` util class        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1724 from sijie/improve_console
2018-10-03T08:34:44Z,1710,Add Oracle JDK11 to Travis CI build  Descriptions of the changes in this PR:    ### Motivation    Start testing builds on JDK11  as it is the latest available version of Java     ### Changes    Add Oracle JDK 11 to Travis configuration file    Master Issue: #1710        Author:   Reviewers: Sijie Guo <sijie@apache.org>  This closes #1732 from eolivelli/fix/travis-jdk11
2018-10-03T08:31:58Z,1730,[TABLE SERVICE] [STORAGE] improve the logic on creating the meta range for a table  Descriptions of the changes in this PR:    *Motivation*    Currently the creation of meta range for table is deferred until we first try to use it.  The propagation of stream properties is carried by the client.    *Changes*    Improve the creation logic to fetch stream properties from the root range.        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1730 from sijie/cache_stream_props
2018-10-03T06:15:35Z,1710,Fix Kerberos tests on JDK11:    Descriptions of the changes in this PR:  - move to Kerby (MiniKDC code copied from Apache ZooKeeper repository)  - adapt tests to run with new KDC  - force TCP on krb5.conf for tests (this is needed for Kerby  which opens only TCP by default config)      Master Issue: #1710         Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1716 from eolivelli/fix/kerby-11
2018-10-03T05:03:28Z,1683,Enhance Auditor    Descriptions of the changes in this PR:    - store last checkAllLedgers executed time in metadataserver.  - use that value for determining the initialDelay of checkAllLedgers call  - add dedicated metric for bookieCheck  - add more log lines in Auditor      ### Motivation    In Auditor checkAllLedgers is scheduled to run for every ‘auditorPeriodicCheckInterval’ and with initial delay of ‘auditorPeriodicCheckInterval’. But the problem is if Auditor role keeps transforming to another AR process  it might not get chance to do ‘checkAllLedgers’ task. Considering default value for 'auditorPeriodicCheckInterval' is 1 week  it is not uncommon situation.    ### Changes    Thats why I'm planning to persist last successful checkAllLedgers execution ctime in ZK  so that next time when a new AR becomes Auditor  it would use that as reference to decide the initial delay value.    Author: cguttapalem <cguttapalem@salesforce.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1683 from reddycharan/auditormetricslogs
2018-10-02T22:00:19Z,1727,[TABLE SERVICES] [PERF] Provides a simple perf tool for testing put and inc performance  Descriptions of the changes in this PR:    *Motivation*    Need to know what is the performance of table service.    *Changes*    Provide a simple perf tool following what RocksDB is doing. Currently support simple testing for put and inc operations.          Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1727 from sijie/async_benchmark
2018-10-02T18:52:18Z,1729,Decorate OrderedExecutor threads rather than runnables  Actually  decorate the runnables too  but apply the decoration in a  decorator on the thread so that if a runnable/callable is passed to  the thread  the decoration will be applied.    This allows users of OrderedExecutor/Scheduler to use  executor.chooseThread() for CompletableFuture async handlers and still  get things like the MDC context.    Author:   Reviewers: Andrey Yegorov <None>  Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1729 from ivankelly/decorate-exec
2018-10-02T18:35:47Z,1690,[TABLE SERVICE] [CLIENT] Implement the python client to access tables  Descriptions of the changes in this PR:    *Motivation*    Providing a python client to access tables    Fixes #1690    *Changes*    Implement the python client to access tables using the table grpc requests        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1723 from sijie/python_client
2018-10-02T15:33:58Z,1721,[TABLE SERVICE] [CLIENT] Provide a simple version of storage clients  Descriptions of the changes in this PR:    *Motivation*    The PR #1721 provides a routing service for proxying grpc requests  to the correct storage container. That means that the storage client  can be implemented using simple grpc calls since all containers can  serve same grpc requests.    *Changes*    Implement a simple version of storage clients by using server-side  routing to route grpc requests to the correct storage containers.        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1722 from sijie/proxy_table_requests2
2018-10-02T11:28:59Z,1710,Add optional compile time only annotations-api dependency dropped in JDK11  Descriptions of the changes in this PR:    ### Motivation    Java Annotations API has been dropped from JRE since JDK11. We should add it explicitly at compile time.  As we are using only the 'Generated' annotation  which has "source" retention when can add the dependency as 'optional'.  We are not re-distributing the JAR in binary packages.    ### Changes    Add 'optional' dependency wherever it is needed (all GRPC artifacts for instance)    Master Issue: #1710        Author: Sijie Guo <guosijie@gmail.com> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #1725 from eolivelli/fix/jdk11-add-annotations-api
2018-10-01T18:12:05Z,1721,[TABLE SERVICE] [STORAGE] add routing table for proxying table service requests  Descriptions of the changes in this PR:    *Motivation*    In order to implement non-java clients and avoid the complexity in the client implementation.  We need to proxy a routing table in the server side for proxying table service requests.    *Changes*    Add routing table in the service side to proxy grpc requests to the right storage containers.        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1721 from sijie/add_routing_table
2018-10-01T15:17:36Z,1720,[TABLE SERVICE] Intercepted storage server channel should shutdown the underlying managed channel  Descriptions of the changes in this PR:    *Motivation*    When a storage server channel is intercepted  the underlying channel will not be `ManagedChannel`  any more. so closing storage server channel will never close the underlying managed channel.    *Changes*    StorageServerChannel#intercept should keep reference to the original storage server channel.  so when closing the intercepted channel  it can close the original channel.        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1720 from sijie/close_intercepted_channel
2018-09-30T18:39:08Z,1719,[TABLE SERVICE] [COMMON] add BytesHashRouter  Descriptions of the changes in this PR:    *Motivation*    Currently the hash router takes `ByteBuf`. At some cases   we need to compute the hash of bytes array directly.    *Changes*    Add `BytesHashRouter` to compute hash value of bytes array directly   avoiding wrapping bytes into `ByteBuf`        Author: Sijie Guo <guosijie@gmail.com> Author: Enrico Olivelli <eolivelli@gmail.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1719 from sijie/bytes_hash_router
2018-09-30T18:37:41Z,1718,[INTEGRATION TESTS] Dump container logs before stopping tests  Descriptions of the changes in this PR:    *Motivation*    For debugging purpose  it would be great to dump container logs before  stopping tests.    *Changes*    Copying container and bookkeeper logs before stopping the tests.          Author: Sijie Guo <guosijie@gmail.com> Author: Enrico Olivelli <eolivelli@gmail.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1718 from sijie/dump_container_logs
2018-09-30T03:53:34Z,1717,[TABLE SERVICE] [CLIENT] Provide a timeout mechanism on closing the client  Descriptions of the changes in this PR:    ### Motivation    Closing the storage client sometime takes long time. And closing the client typically happens at the last step. So we don't necessarily to be blocking at waiting it to complete.    ### Changes    Provide a timeout version of sync close. And timeout the closing operation if it doesn't complete within 1 second.        Author:   Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1717 from sijie/close_storage_client
2018-09-30T01:10:27Z,1713,[TOOLS] [PERF] Add a `segread` perf command to read distributedlog streams in segment splits  Descriptions of the changes in this PR:    *Motivation*    Find what is the bottleneck/throughput limit of reading a single ledger.    *Changes*    Provide a `segread` perf command to split a stream into a list of segments and split segments into splits   and test reading segment splits in parallel.        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1713 from sijie/segment_readers
2018-09-28T19:05:38Z,1714,Fix release notes for 4.8.0  Descriptions of the changes in this PR:    - Fix a bunch of typos and indentation issues on 4.8.0 release page  - Fix releases.md          Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1714 from eolivelli/fix/release-notes-480-2
2018-09-27T17:46:05Z,1709,[LOGGING] PendingReadOp should log the error code when failing requests  Descriptions of the changes in this PR:    *Motivation*    Currently when a request is failed  bookkeeper client logs the error message. However the log  message doesn't include error code. It makes debugging hard.    *Changes*    Improve the log message to include error code          Author:   Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1709 from sijie/improve_error_logging
2018-09-27T08:56:58Z,1710,Upgrade Mockito to 2.22.0 in order to support build on JDK11  Descriptions of the changes in this PR:        ### Motivation    Running tests on JDK11 requires a new version of Mockito  because in JDK11 they dropped Unsafe.defineClass.    ### Changes    Upgrade Mockito    Master Issue: #1710        Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1711 from eolivelli/fix/upgrade-mockito
2018-09-26T18:27:06Z,1708,[TABLE SERVICE] introduce a client interceptor to attach routing information for table service rpc calls    Descriptions of the changes in this PR:    *Motivation*    Currently java client deals with request routing and attach routing information before sending the request.  If we try to apply same mechanism for non-java language clients  it requires implementing this complex  routing logic for every non-java language client  which is not a desirable solution.    So we should move the request routing to the server side  which can simplify the implementation of non-java  language client.    *Changes*    Introduce a client interceptor which intercepts table service rpc calls and mutating the rpc request with  correct routing information. This interceptor can be used at server side for proxying grpc requests.        Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Sijie Guo <guosijie@gmail.com> Author: Sijie Guo <sijie@apache.org> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Reviewers: Jia Zhai <None>  This closes #1708 from sijie/proxy_requests
2018-09-26T18:25:40Z,1696,Issue #1696: fixed potential ConcurrentModificationException in mock in MdcContextTest  Descriptions of the changes in this PR:    Changed LinkedList to ConcurrentLinkedQueue to avoid potential ConcurrentModificationException in callbacks.    ### Motivation    Test flapped.    ### Changes    (Describe: what changes you have made)    Master Issue: #1696         Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Sijie Guo <guosijie@gmail.com> Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Venkateswararao Jujjuri (JV) <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1699 from dlg99/fix/issue_1696_MdcContextTest  closes #1696
2018-09-26T11:22:32Z,1707,Update Docker File to use 4.8.0 and signature from eolivelli@apache.org  Descriptions of the changes in this PR:    Update docker image to latest and greatest BookKeeper version          Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1707 from eolivelli/fix/update-docker-480
2018-09-26T11:20:21Z,1676,Release notes for Apache BookKeeper 4.8.0  Update the website with the releases notes for Apache BookKeeper 4.8.0        Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1676 from eolivelli/fix/release-notes-480
2018-09-26T09:44:42Z,1705,[TABLE SERVICE] improve the bookkeeper script to better detect whether table service is enabled or not  Descriptions of the changes in this PR:      *motivation*    Currently `bin/bookkeeper` automatically choose modules based on the command.  However it would be much better to detect which module to use by checking the bookkeeper configuration settings.    *changes*    Improve `bin/bookkeeper` to better detect which module to use based on bookkeeper server configuration.  Additionally adding dlog related settings in the server configuration file.          Author: Sijie Guo <guosijie@gmail.com> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1705 from sijie/improve_bookkeeper_scripts
2018-09-26T09:43:57Z,1704,[TABLE SERVICE] [LOGGING] improve logging at zk storage container manager  Descriptions of the changes in this PR:    *Motivation*    the storage container manager probes containers to ensure containers are started and stopped to reflect to topology change.  however the logging can be very annoying if there is no topology changed.    *Changes*    Improve the logic to only log the message when topology is changed.        Author: Sijie Guo <guosijie@gmail.com> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Sijie Guo <sijie@apache.org> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1704 from sijie/reducing_logging_storage_containers
2018-09-26T09:42:51Z,1695,autorecovery-use-metadata-driver (part 3) : remove zookeeper from Auditor class  Descriptions of the changes in this PR:    This is the 3rd change to remove zookeeper from Auditor. It also changes how  we construct metadata driver from AutoRecoveryMain. Since we are using bookkeeper client  and admin across auditor and replication. So change the AutoRecoveryMain to construct  the bookkeeper client from client configuration and pass bookkeeper client down to  replication worker and auditor.        Author: Qi Wang <codingwangqi@gmail.com> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Sijie Guo <guosijie@gmail.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1695 from codingwangqi/autorecovery_metadata_part3
2018-09-26T09:41:42Z,1700,Issue #1700: fixed: TimedRunnable does not anticipate exception from wrapped runnable  Descriptions of the changes in this PR:    added try/finally around runnable.run()    ### Motivation    To correctly track (metrics/log) runnable that throw unexpected exception.    ### Changes    added try/finally around runnable.run()    Master Issue: #1700         Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Sijie Guo <guosijie@gmail.com> Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1702 from dlg99/fix/issue_1700_timedrunnable  closes #1700
2018-09-26T09:39:32Z,1706,[BUILD] Ignore pid files    Descriptions of the changes in this PR:      *Motivation*    when running bookkeeper servers using `bin/bookkeeper-daemon`  `pid` files  will be added in current directory.    *Changes*    Add `.pid` in `.gitignore`  so those pid files will be ignored.        Author: Sijie Guo <guosijie@gmail.com> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1706 from sijie/ignore_pid_files
2018-09-25T17:38:12Z,1697,[TOOLS] Add a perf tool for benchmarking bookkeeper  Descriptions of the changes in this PR:    ### Motivation    when investigating performance on scanning entries in bookkeeper  it is hard to know what is the expectation of what kind of throughput that application can get. we need a perf tool to understand the baseline of performance that bookkeeper can provide.    ### Changes    this tool is following what pulsar perf tool is doing and using dlog library for evaluating the write and read throughput on bookkeeper using one (or a few) dlog streams.        Author: Sijie Guo <sijie@apache.org> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1697 from sijie/bkperf
2018-09-25T17:10:37Z,1690,[TABLE SERVICE] [PYTHON] add hash router for computing the hash routing value for a given key  Descriptions of the changes in this PR:    *Motivation*    As part of implementing python client for #1690  we need a hash router to compute the hash routing value  for a given key.    *Changes*    - Murmur2 is not well supported in python 3. so standarized hash computation in using Murmur3.  - Change java hash router to use Murmur3  - Add python hash router  - Add unit tests to cover the hash value computation and make sure it is consistent across java and python    Master Issue: #1690         Author:   Reviewers: Jia Zhai <None>  This closes #1698 from sijie/message_router
2018-09-25T02:15:33Z,1693,autorecovery-use-metadata-driver (part 2) : remove ZooKeeper from ReplicationWorker  Descriptions of the changes in this PR:    *Changes*    This is the second part of changing AutoRecovery to use metadata driver. It removes  the zookeeper reference from ReplicationWorker  because the zookeeper instance is not  used anyway    This change is based on #1693        Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: Qi Wang <codingwangqi@gmail.com> Author: Sijie Guo <guosijie@gmail.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1694 from codingwangqi/autorecovery_metadata_part2
2018-09-24T07:18:21Z,1692,Enable storeSystemTimeAsLedgerUnderreplicatedMarkTime      Descriptions of the changes in this PR:    - Enable the Auditor to use system time as underreplicated ledger mark time.  If this is enabled  Auditor will write a ctime field into the  underreplicated ledger znode.    https://github.com/apache/bookkeeper/commit/f4094c4992d5b22630fa633085a00a9152b87ffe introduced feature to Record ctime for underreplicated ledger mark time.  Author: Sijie Guo <guosijie@gmail.com> Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com> Author: cguttapalem <cguttapalem@salesforce.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1692 from reddycharan/enablectime
2018-09-24T06:09:37Z,1693,autorecovery-use-metadata-driver (part 1) : move AutoRecoveryMain to use MetadataBookieDriver    Descriptions of the changes in this PR:    ### Motivation    We are introducing Etcd as the metadata storage. However AutoRecovery currently is still tied to zookeeper. In order to use Etcd as the metadata storage  we have to move AutoRecovery related classes to use metadata driver API.    ### Changes    This is the first change for changing AutoRecovery to use metadata driver. It changed AutoRecoveryMain to use metadata driver api and also removed the shutdown logic on session expired  which doesn't make any sense for current retryable zookeeper.           Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1693 from codingwangqi/autorecovery_metadata
2018-09-24T06:08:42Z,1690,[TABLE SERVICE] [PYTHON] introduce a python client for table service  Descriptions of the changes in this PR:    *Motivation*    We need a python client for accessing table service.    *Changes*    This is the first change for introducing a python client for table service.    - setup the directory structure for the python client  - setup build  lint  test for the client  - implement the admin client for creating/deleting/getting namespaces/streams  - add examples for admin client    Master Issue: #1690        Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1691 from sijie/stream_python_client
2018-09-23T23:37:58Z,1639,Issue #1639: Etcd based metadata driver implementation  Descriptions of the changes in this PR:    Provide a metadata driver based on Etcd. The changes were based on sijie's prototype at #1114     Master Issue: #1639        Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1640 from codingwangqi/etcd_metadata_driver  closes #1639
2018-09-21T15:28:51Z,1527,Bump journal and fileinfo version.      Descriptions of the changes in this PR:      - As part of ISSUE #1527  new versions of 'journalFormatVersionToWrite'  and 'fileInfoFormatVersionToWrite' are introduced. Since 4.8 release version  is created  default values of these versions should be bumped.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1689 from reddycharan/bumpjournalversion
2018-09-20T17:09:30Z,1685,[TABLE SERVICE] remove build warnings "Import xxx.proto but not used"  Descriptions of the changes in this PR:    *Motivation*    There are build warnings about `Import xyz.proto but not used`. for example:    ```  cluster.proto: warning: Import common.proto but not used.  kv_store.proto: warning: Import kv.proto but not used.  ```    *Changes*    Remove unused imports          Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1685 from sijie/remove_warnings
2018-09-20T17:04:51Z,1686,Shutdown appropriate EntryLogger instance.    Descriptions of the changes in this PR:    - EntryLogger's instance shutdown method should be called  - Otherwise test would flap  since in tearDown method  FileUtils.deleteDirectory can fail because of EntryLogFile PreAllocation task.    Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1686 from reddycharan/entrylogtest
2018-09-20T08:08:33Z,1687,ISSUE #1687: Using eval instead of exec to handle quotes in healtcheck.sh  Descriptions of the changes in this PR:    Fixes https://github.com/apache/bookkeeper/issues/1687      ### Motivation    https://github.com/apache/bookkeeper/issues/1687    ### Changes  Using eval instead of exec to run the health check script.    Master Issue: #1687         Author: matevarga <mate@monadic.hu>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1688 from matevarga/master  closes #1687
2018-09-18T17:42:52Z,1684,Fix license issues in master  The only blocking error is that the GRPC NOTICE had not been bubbled  up to our notice.    The links for common-lang 3.6 and jackson 1.9.11 were also wrong  and  while these aren't required in license files  bad links makes it  harder to check if a dependency has been correct noted in the LICENSE  and NOTICE.    Author: Andrey Yegorov <dlg99@users.noreply.github.com> Author: Ivan Kelly <ivank@apache.org> Author: SongWang <aCoder2013@users.noreply.github.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1684 from ivankelly/v48-license
2018-09-18T09:25:03Z,1679,Issue #1679 : Fix build failure due to javadoc  Descriptions of the changes in this PR:        ### Motivation    Fix build failure due to javadoc  additionalOptions' type is  an array .  ### Changes    correct assignment strategy of additionalOptions to avoid type mismatch    Master Issue: #1679     Author: songsong <songsong@taovip.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1681 from aCoder2013/fix-javadoc-build  closes #1679
2018-09-17T08:06:45Z,850,Issue #850: Added request context across client and bookies.  Descriptions of the changes in this PR:     - MDC context is passed to runnables  callables etc.   - protocol extended  context is sent to bookie servers  restored there and back on client with the response.     Hopefully did not miss some nuance on the server side  largely rely on changes in ordered executors to do all the magic.   - did microbenchmarking of the protocol changes (strings added to protobuf  MDC context preserved/restored). Looks ok.   - added unit tests.    (bug W-5291641)   (bug W-5291648)      ### Motivation    Troubleshooting of request-level failures/errors can be simplified if request id was passed through all the stages of the request  from threadpools on the client to bookies to the response back on the client.   Log4j/Slf4j allows logging of MDC data so it makes sense to use this functionality for logging.    ### Changes     - MDC context is passed to runnables  callables etc.   - protocol extended  context is sent to bookie servers  restored there and back on client with the response.     Hopefully did not miss some nuance on the server side  largely rely on changes in ordered executors to do all the magic.   - did microbenchmarking of the protocol changes (strings added to protobuf  MDC context preserved/restored). Looks ok.   - added unit tests.    Master Issue: #850         Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Venkateswararao Jujjuri (JV) <None>  Sijie Guo <sijie@apache.org>  This closes #1672 from dlg99/feature/correlation_id  closes #850
2018-09-14T17:33:17Z,1677,[DEV] make merge script work with python 3  Descriptions of the changes in this PR:    ### Motivation    make sure the script works for python 3 as well.    ### Changes    since python2 and python3 have different syntax and library  make a copy of the merge script for python3.        Author:   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1677 from sijie/make_merge_script_works_for_37
2018-09-14T06:47:26Z,1604,Utility to dump/restore ledger metadata to/from file  Dumping will dump the serialized metadata to a file. Restoring will  parse the metadata from the file and write it to the metadata store.    Also changes the LedgerIdFormatter to default to long formatter (it  was UUID before  and we don't even currently support UUID ledger ids).    This fixes #1604    Author: Ivan Kelly <ivank@apache.org> Author: Enrico Olivelli <eolivelli@apache.org> Author: cguttapalem <cguttapalem@salesforce.com> Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Jia Zhai <None>  This closes #1667 from ivankelly/dump-metadata-to-from-file
2018-09-12T08:00:53Z,1675,Release script: swap mapping of directories  The script assumed that the layout of /home on the host machine is the same as in the container. This change makes the script work even on machines in which the HOME is /home/xxxx/username and not simply /home/username  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1675 from eolivelli/fix/invert-mapping
2018-09-11T17:57:26Z,1674,Release script: Use realpath() to map to current user home  This change enables to run the release scripts on linux boxes in which the user's home is not at /home/username  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1674 from eolivelli/fix/better-userland-mapping
2018-09-11T15:25:23Z,1673,Use useradd -l option for docker scripts  This is a workaround for the Docker issue https://github.com/moby/moby/issues/5419  If you run the scripts with an very large uid the script hangs and it fills up the disk which contains /var/lib/docker  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1673 from eolivelli/fix/docker-large-uid
2018-09-10T20:20:45Z,1670,Remove unnecessary log statement in LedgerDirsManager.getWritableLedgerDirs  Descriptions of the changes in this PR:  ### Motivation  - when Bookie reaches diskusage threshold  LedgerDirsMonitor for every diskCheckInterval it logs NoWritableLedgerDirException call stack and message "All ledger directories are non writable".  ### Changes  So remove unneccessary log statement in LedgerDirsManager.getWritableLedgerDirs and let the caller deal with the thrown exception.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Andrey Yegorov <None>  Sijie Guo <sijie@apache.org>  This closes #1670 from reddycharan/fixdirsmonitorlog
2018-09-10T20:14:08Z,1637,BookieWatcherImpl doesn't initCause when throwing MetaStoreException  Descriptions of the changes in this PR:  ### Motivation  when BookieWatcherImpl throws MetaStoreException  it doesn't provide the cause. so when the exception is logged  we can't tell the actual failure cause.  Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1637 from codingwangqi/fill_cause_in_exception
2018-09-10T19:58:47Z,1664,Issue #1664 Cancel Scheduled SpeculativeReads  If configured every read request schedules a Future task to send speculative reads on speculativeReadTimeout. When the read is completed successfully  this task must be canceled otherwise it leads to memory consumption and under heavy load the tasks get accumulated which forces lengthy GC cycles. These lengthy GC cycles may cause ZK lease expiry and all other sorts of problems eventually resulting in application errors.  This fix makes sure that the scheduled Futures are cancelled at the end of read task.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> (ref Andrey)  Descriptions of the changes in this PR:  ### Motivation  (Explain: why you're making that change  what is the problem you're trying to solve)  ### Changes  (Describe: what changes you have made)  Master Issue: #<master-issue-number>  Author: JV Jujjuri <vjujjuri@salesforce.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1665 from jvrao/ups_speculative_cancel  closes #1664
2018-09-07T22:08:57Z,1662,ISSUE #1662: LocalBookKeeper use layout manager and ledger path configs  The URI patch had a side effect of causing LocalBookKeeper to always  use a URI string of the form zk:// which defaults to HLM.  This  patch updates LocalBookKeeper to generate zk+<layout>:// based on  the legacy LEDGER_MANAGER_FACTORY_CLASS config when present.  +null  will be used otherwise and defaults to HLM.  Further  use the  (admittedly deprecated) zkLedgerRootPath config to determine the  ledger path (defaults to /ledger  so the behavior will be unchanged  if unspecified).    (bug W-5415276)  (rev cguttapalem)  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1669 from athanatos/forupstream/wip-1662  closes #1662
2018-09-07T22:07:18Z,1653,ISSUE #1653: Clients with zk:// uri's should read layout from store  zk+null:// will cause the layout to be read from the store.  This patch  updates zk:// to do the same.  This matches past behavior with an  unspecified ledgerManagerFactoryClass.    Some tests needed to be updated with the new behavior.    (bug W-5415120)  (rev cguttapalem)  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1668 from athanatos/forupstream/wip-1653  closes #1653
2018-09-07T18:42:11Z,2526,[DEV] clean up merge script  Descriptions of the changes in this PR:     ### Motivation    The development of bookkeeper has been moved from JIRA to Github.  So we can clean up the merge script to remove those instructions  assuming we are still on apache mirror and JIRA.     ### Changes    This change follows the changes that I have adjusted at apache/incubator-pulsar#2526    - remove related logic about JIRA from merge script  - change merge script to use github merge api       Author:   Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1663 from sijie/improve_merge_script_2
2018-09-07T05:02:04Z,603,BP-35: 128 bits support  Descriptions of the changes in this PR:    ### Motivation    BookKeeper coordinates with a metadata store to generate a cluster wide `ledgerId`.  Currently this is a signed `64 bit` number (effectively 63 bits). This method works  great because we have a centralized metadata store for coordinating the id generation.  However this method may not scale as the cluster size and number of ledgers grow.    [Universally unique identifier - Wikipedia](https://en.wikipedia.org/wiki/Globally_unique_identifier)  is a preferred way to generate decentralized globally unique IDs and it takes `128 bits`.  This method can scale well as it doesn't need a centralized coordination.    This BP proposes the changes for increasing ledger id from `63 bits` to `128 bits`.    Master Issue: #603       Author: Sijie Guo <sijie@apache.org>  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Venkateswararao Jujjuri (JV) <None>  This closes #1611 from sijie/bp_35_128bits
2018-09-07T04:40:10Z,1642,Utility to rebuild interleaved storage index files  We came across a case where the a ledger had been deleted from zookeeper accidently. It was possible to recover the ledger metadata from the zookeeper journal and old snapshots  but the bookies had deleted the indices by this time. However  even if the index is deleted  the data still exists in the entrylog.  This utility scans the entrylog to rebuild the index  thereby making the ledger available again.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1642 from ivankelly/regen-from-entrylogger
2018-09-06T21:14:13Z,1638,Open ledger returns no ledger exception if ledger id is negative  Descriptions of the changes in this PR:  ### Motivation  if I open a ledger with negative value  bookkeeper client responds 'NoSuchLedgerException'. But I think it should return `IllegalOpException`  because it is an illegal exception.  Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1638 from codingwangqi/fix_return_code
2018-09-06T18:16:09Z,1652,[WEBSITE] Issue #1652: fix anchor links at download page  Descriptions of the changes in this PR:  As reported in #1652  the anchor links at download page are broken.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1656 from sijie/fix_download_links_2  closes #1652
2018-09-06T08:10:38Z,1658,ISSUE #1658: License file: typo "Google Protocal Buffers" instead of "Google Protocol Buffers"  Fix a typo in LICENSE files for binary distributions.  Master issue #1658  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1659 from eolivelli/fix/protocal-typo  closes #1658
2018-09-06T07:34:23Z,281,Make LedgerFragmentReplicator use MetadataUpdateLoop  Master Issue: #281  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1645 from ivankelly/ledger-fragment-immutable-metadata2
2018-09-05T19:11:58Z,1650,[WEBSITE] fix download link to allow user choosing mirror site  Address the download link according to https://www.apache.org/dev/release-distribution#download-links  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1650 from sijie/fix_download_links
2018-09-05T19:07:29Z,1630,ISSUE #1630: TestHttpService#testWhoIsAuditorService is flaky  Descriptions of the changes in this PR:   ### Motivation  Fixes #1630. The problem is auditor elector was started async  the test itself doesn't wait until election completed. so the test can be running before auditor runs elector.   ### Changes  The fix is simple  just wait until auditor completes election.  Master Issue: #1630  Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1649 from codingwangqi/issue_1630  closes #1630
2018-09-04T21:54:05Z,1647,[WEBSITE] 4.7.2 only has sha512 file not sha1 file  Descriptions of the changes in this PR:  *Motivation*  Since 4.7.2 bookkeeper releases only provide sha512 file  not sha1 file.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #1647 from sijie/update_website_472
2018-09-04T20:40:05Z,1644,[DOCKER] update package to 4.7.2 in dockerfile  Descriptions of the changes in this PR:  ### Motivation  We need to generate 4.7.2 docker image.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1644 from sijie/update_docker_image_47
2018-09-04T19:31:15Z,281,Recovery uses immutable metadata  And MetadataUpdateLoop to update it.  Master issue: #281  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1621 from ivankelly/recovery-immutable
2018-09-04T19:29:51Z,1627,Fix EntryLoggerAllocator.stop  Descriptions of the changes in this PR:  - make sure EntryLoggerAllocator.stop terminates pending allocatorExecutor's task. Otherwise tests would flap  since even after EntryLoggerAllocator.stop  there is possibility of new entrylog creation  which is not expected.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1627 from reddycharan/entryalocshut
2018-08-31T15:43:38Z,1628,[RELEASE] Release Notes for 4.7.2  Descriptions of the changes in this PR:  Add the release notes for 4.7.2 release  Author: Sijie Guo <sijie@apache.org>  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1628 from sijie/release_notes_472
2018-08-31T06:31:02Z,1634,[RELEASE] [WEBSITE] Create documentation for release 4.7.2  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1634 from sijie/website_472
2018-08-30T18:24:54Z,1636,Update testcontainers to latest version  Descriptions of the changes in this PR:  ### Motivation  the latest version of testcontainers provides a `doStart` method to allow adding logic before `doStart`.  Author: Qi Wang <codingwangqi@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1636 from codingwangqi/update_testcontainers
2018-08-29T17:37:30Z,1631,[RELEASE] update release script to generate sha512 instead of sha1  *Motivation*  According to [checksums requirements](http://www.apache.org/dev/release-distribution#sigs-and-sums)  the project should supply a sha256 and/or sha512 checksum file  and should not supply a MD5 and sha1 checksum file.  *Changes*  Update the release script to generate sha512 files  Descriptions of the changes in this PR:  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1631 from sijie/sha512_files
2018-08-28T13:42:54Z,1625,Allow construction of mock client context from scratch  So that ledger handle functionality can be tested without instantiating a BookKeeper client.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1625 from ivankelly/mock-client-context
2018-08-28T05:40:27Z,1623,ISSUE #1623: ReadOnlyLedgerHandle: don't schedule monitorPendingAddOps()  The LedgerHandle constructor schedules an addEntryQuorumTimeout check with the bk client scheduler. However  the only place this callback is canceled is in the closeAsync (the one which returns a future  not to be confused with asyncClose) method. asyncClose and close() both leak this callback. Moreover  ReadOnlyLedgerHandle invokes the LedgerHandle constructor and so also creates this callback  but it overrides close() and asyncClose() without passing them through.  ReadOnlyLedgerHandle already overrides initializeExplicitLacFlushPolicy() to avoid write specific state.  This patch generalizes that hack to initializeWriteHandleState() and the cleanup to tearDownWriteHandleState().  tearDownWriteHandleState() is moved into doAsyncClose()  which appears to be called for closes in general.  (rev cguttapalem) (bug W-5362724) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1624 from athanatos/forupstream/wip-1623  closes #1623
2018-08-27T02:51:08Z,1578,Provide async version of markLedgerUnderreplicated for LedgerUnderreplicationManager  Descriptions of the changes in this PR:   ### Motivation  Auditor has multiple places calling sync methods in async callbacks. This raises the possibility hitting deadlock. Issue #1578 is one of the examples.  After looking into the `LedgerUnderreplicationManager`  `markLedgerUnderreplicated` is the only interface that will be called in async callbacks. This change is to provide an async version of `markLedgerUnderreplicated`.   ### Changes  - add `markLedgerUnderreplicatedAsync` interface in `LedgerUnderreplicationManager`. - implement the logic of `markLedgerUnderreplicated` using async callbacks - use `markLedgerUnderreplicatedAsync` in the Auditor  Related Issues: #1578 Master Issue: #1617  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1619 from sijie/async_sync_autorecovery
2018-08-24T12:36:31Z,1622,Add mock registration client  For testing the client without having to boot zookeeper.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1622 from ivankelly/mock-reg-client
2018-08-23T17:19:02Z,1620,Avoid usage of RocksDB deleteRange() in DbLedgerStorage  ### Motivation  There are few issues that are reconducible to a performance degradation in RocksDB when using deleteRange() feature (eg: https://github.com/apache/incubator-pulsar/issues/1737 and others).  There is some discussion going on RocksDB to address this issue: https://github.com/facebook/rocksdb/issues/3959  In the meantime  we should rollback the change and don't use deleteRange until these issues are resolved.  ### Changes  This PR is essentially reverting back the commit https://github.com/yahoo/bookkeeper/commit/4b849904bcd65b49cf963e6508dc7fb745f56294 from Yahoo branch (which was squashed when merging back to apache). The only addition here is to use `DELETE_ENTRIES_BATCH_SIZE` to amortize the cost of `batch.flush()` when there are many ledgers with few entries.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1620 from merlimat/rollback-delete-range
2018-08-23T07:51:45Z,281,UpdateLedgerOp uses MetadataUpdateLoop  Also refactored a lot of things around the operation that didn't make sense  like the executor.  Master issue: #281  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1587 from ivankelly/update-ledger-op
2018-08-22T12:14:29Z,281,Get currentEnsemble from ledger rather than directly from metadata  This will allow us to override the currentEnsemble being used during recovery without modifying the metadata itself.  Master issue: #281  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1586 from ivankelly/current-ensemble
2018-08-21T22:12:21Z,1612,Allow to configure num of Netty IO threads in client and bookie  ### Motivation  Currently the number of IO threads for client and bookie are set to `2 *  Runtime.getRuntime().availableProcessors()`. Added configuration options to tune it.  Author: Matteo Merli <mmerli@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1612 from merlimat/configure-io-threads
2018-08-21T22:11:10Z,1616,Index for lockarray should be non-negative  Descriptions of the changes in this PR:  Make sure lockIndex is non-negative.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1616 from reddycharan/modfix
2018-08-21T21:08:14Z,1610,Issue #1610: netty leak detector logs 'LEAK: HashedWheelTimer.release() was not called before it's garbage-collected.' in unit tests  Descriptions of the changes in this PR:  Enabled netty's paranoid leak detection for tests. Fixed most of the 'LEAK: HashedWheelTimer.release() was not called before it's garbage-collected.' issues. Did not fix ones produced by AuditorElector. In long term we should fix these  ByteBuf leaks in BufferedChannel and whatever else we find and make tests fail if netty logs a leak.  ### Motivation  I used to have random test timeouts/failures caused by delayed bookie shutdown when I built repo with OpenJDK 8 but ran tests after switching to Oracle JDK 8 (or vice versa). After these changes tests did not fail in these runs.  ### Changes  Made bk/bkadmin/auditor close resources properly in the tests and shutdown calls. Changed order of initialization in Bookkeeper so it creates HashedWheelTimer after bookie client  in case bookie client creation fails due to misconfiguration.  Master Issue: #1610  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1613 from dlg99/fix/issue_1610_hashedwheeltimer  closes #1610
2018-08-21T18:42:14Z,1578,ISSUE #1578: Fixed deadlock in auditor blocking ZK thread  ### Motivation  Fixes #1578  After getting ZK callback from ZK event thread  we need to jump to a background thread before doing synchronous call to `admin.openLedgerNoRecovery(ledgerId);` which will try to make a ZK request a wait for a response (which would be coming through same ZK event thread currently blocked..)  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1608 from merlimat/fix-auditor-deadlock  closes #1578
2018-08-21T18:15:14Z,1414,Ensure BufferedChannel instance is properly closed  Whenever the the `EntryLogger` is closing the `BufferedChannel` instance (the channel used for writing) it is closing the file descriptor but it's not calling `close()` on the object itself.  This causes a small mem leak for each log file  because the `writeBuffer` from `BufferedChannel` is never released.  I think this should be considered for a 4.7.1 release.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1414 from merlimat/fix-entry-log-leak
2018-08-21T11:23:12Z,1589,Make LedgerHandle injectable  This patch removes the hard dependency of LedgerHandle on BookKeeper. This allows us to create an instance of LedgerHandle independently  with a fully mocked BookieClient or LedgerManager and be clear on where the objects used by the LedgerHandle are coming from.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1589 from ivankelly/injectable-lh
2018-08-21T06:30:52Z,1584,Issue #1584: LedgerHandleAdv should expose asyncAddEntry variant that takes ByteBuf (LedgerHandle exposes it as public)  Descriptions of the changes in this PR:  - exposed asyncAddEntry as public  similarly to other variants. - fixed ByteBuf retention  ### Motivation  It's useful to have this exposed as public for clients to make use of netty's allocator and pass ByteBuf directly.  ### Changes  exposed asyncAddEntry as public  similarly to other variants.  Master Issue: #1584  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1585 from dlg99/feature/issue-1584-LedgerHandleAdv-public-addEntry-bytebuff  closes #1584
2018-08-17T20:04:22Z,1601,Downgraded ZK version to 3.4.13  ### Motivation  BK 4.7 has shipped with newer ZooKeeper client 3.5.3-beta. In many cases  there has been concerns regarding having a dependency on a "beta" release. Irrespective of the seriousness of these concerns for the specific case of ZK which has been in alpha/beta for a very long time  we should not have dependency on versions of software for which the team itself has marked as "not yet stable".  Adding to that  there is no clear roadmap or ETA for when final 3.5.x stable release will be available.  ### Changes   * Downgraded ZK to latest stable version 3.4.13  * Adjusted few usages of new client APIs that were introduced in 3.5.x  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1601 from merlimat/downgrade-zk
2018-08-17T15:57:18Z,1602,BP-34: Cluster metadata checker  Descriptions of the changes in this PR:  - BP for cluster metadata checker  Master Issue: #1602  Author: cguttapalem <cguttapalem@salesforce.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1603 from reddycharan/checkerbp
2018-08-17T15:53:13Z,1609,[BOOKIE] Avoid throwing exceptions if a loopback address is returned from the possible ip check  Descriptions of the changes in this PR:   ### Motivation  At some network environment  a loopback address might be returned by default. However when you want to specify `advertisedAddress` to avoid the loopback address  it still throws exception as following:  ``` 17:23:35.696 [main] ERROR org.apache.bookkeeper.server.Main - Failed to build bookie server org.apache.bookkeeper.bookie.BookieException$UnknownBookieIdException: java.net.UnknownHostException: Trying to listen on loopback address  127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())  at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:325) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.bookie.Bookie.checkEnvironmentWithStorageExpansion(Bookie.java:415) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:256) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:627) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.proto.BookieServer.newBookie(BookieServer.java:115) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:96) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.server.service.BookieService.<init>(BookieService.java:42) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.server.Main.buildBookieServer(Main.java:299) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.server.Main.doMain(Main.java:219) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.server.Main.main(Main.java:201) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:252) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1] Caused by: java.net.UnknownHostException: Trying to listen on loopback address  127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())  at org.apache.bookkeeper.bookie.Bookie.getBookieAddress(Bookie.java:564) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:315) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]  ... 10 more ```  The exception is thrown on `possibleBookieIds` check. However we don't need to throw exception on `possibleBookieIds` check if it is a loopback address. We can defer the exception until bookie attempts to listen on the loopback address.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1609 from sijie/avoid_exceptions_on_possible_ips
2018-08-17T01:42:10Z,1590,Typo in bookie request processor read handling  The response in the case of overload should take the ledgerId and entryId from the read request.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1590 from ivankelly/request-processor-typo
2018-08-17T01:40:18Z,1528,ISSUE #1528: logging "No network topology script is found when using script based DNS resolver" can be noisy and misleading.  Descriptions of the changes in this PR:   ### Motivation  "No network topology script is found when using script based DNS resolver" is misleading and noisy.   ### Changes  Only log the error message but not the stack trace.  Master Issue: #1528  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1605 from sijie/fix_log_message  closes #1528
2018-08-16T16:53:57Z,1606,ISSUE #1606: Fixed race condition during expansion of concurrent open hash maps  ### Motivation  As reported in #1606  there is a race condition in the concurrent open hash maps implementation. The race happens when the maps gets re-hashed after the expansion and the new arrays are substituting the old ones.  The race itself is that a thread doing a `get()` on the map is first checking the current `capacity` of the map  uses that to get the bucket and then tries to do optimistic read of the value in that bucket.  This assumes `capacity` update is visible only after the `values` array is already swapped  but that is not always the case in current code.  ### Changes  * Use `volatile` qualifier for `capacity` and `values` arrays to ensure ordering of memory read is respected by compiler  * In rehashing  update `capacity` after `values`  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1607 from merlimat/fix-concurrent-maps  closes #1606
2018-08-15T07:36:23Z,1600,Provide consistent locking mechanism in EntryLogManagerForEntryLogPerLedger  Descriptions of the changes in this PR:  Assumption: The lock stored alongside the EntryLog in this map is meant to be used to ensure that no two threads can be writing to the same ledger at the same time.  The above invariant can be violated if the EntryLogAndLockTuple object is evicted from the cache while in a critical section nominally protected by the contained lock.  The conditions required for this to happen would be pretty odd -- there needs to be a huge amount of cache churn during one of the protected operations.  The fix for this issue is to allocate in the constructor a fixed array of locks and select for each EntryLogAndLockTuple a lock from that array deterministically by ledgerId such that the same ledgerId will always get the same lock.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1600 from reddycharan/elmlock
2018-08-14T09:56:15Z,1595,Make bookie client an interface  So that it can be mocked easily for testing. This patch also contains a simple mock.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1595 from ivankelly/bookie-client-iface
2018-08-13T20:51:07Z,1594,Make bookie watcher an interface  So that it can be mocked out easily for testing. This patch also contains a simple mock.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1594 from ivankelly/bookie-watcher-iface
2018-08-13T20:18:43Z,1593,Create CI jobs for branch-4.8  In order to ensure quality on branh-4.8 we need to create CI jobs which run periodically QA tests  Author: Sijie Guo <sijie@apache.org> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1593 from eolivelli/ci_jobs_for_48
2018-08-13T18:11:36Z,1530,Add a deployment method using docker-compose  Descriptions of the changes in this PR:  ### Motivation  Provide a deployment method using docker-compose.  ### Changes  - Use helm as the template engine to generate docker compose file - Deploy zookeeper in cluster mode in docker-compose - Manages port mapping to make it able to access out side of the docker-composed cluster.  Author: Khurrum Nasimm <khurrumnasimm@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1530 from khurrumnasimm/docker_compose
2018-08-13T13:00:02Z,610,Delayed write ensemble change may cause dataloss  Descriptions of the changes in this PR:  The Original intent of this change is to do a best-effort ensemble change. But this is not possible until the local metadata is completely immutable. Until the feature "Make LedgerMetadata Immutable #610" Is complete we will use handleBookieFailure() to handle delayed writes as regular bookie failures.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Master Issue: #1591 Relate Issue: #1395  Author: JV Jujjuri <vjujjuri@salesforce.com> Author: Ivan Kelly <ivank@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1592 from jvrao/datalossbug
2018-08-13T08:39:36Z,1598,Avoid releasing sent buffer to early in BookieClient mock  If the buffer was sent to more than one bookie with the mock  it would be released after being sent to the first one. Each write should retain a refCount themselves  and then release when done.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1598 from ivankelly/double-rel-mock
2018-08-13T08:37:34Z,1597,Move GenericCallbackFuture so it can be used in production code  It's a useful utility to have when dealing with callbacks.  Author: Ivan Kelly <ivank@apache.org> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1597 from ivankelly/gen-cb-future
2018-08-12T20:43:03Z,1596,Move MockLedgerManager out of MetadataUpdateLoopTest  This mock is useful for other tests  so move it out.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1596 from ivankelly/mocklm-common
2018-08-12T15:09:47Z,1599,Fix master versions (4.8.0-SNAPSHOT->4.9.0-SNAPSHOT)  Some pom versions and the versions in bk_test_bin_common.sh were missed when the version was bumped to 4.9.0-SNAPSHOT  which is killing all builds.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1599 from ivankelly/broken-master
2018-08-10T09:49:01Z,,[maven-release-plugin] prepare for next development iteration
2018-08-10T09:48:54Z,,[maven-release-plugin] prepare branch branch-4.8
2018-08-08T18:04:43Z,1576,Record ctime for underreplicated ledger mark time.  Descriptions of the changes in this PR:  Enable the Auditor to use system time as underreplicated ledger mark time. If this is enabled  Auditor will write a ctime field into the underreplicated ledger znode. This would be useful in knowing when the ledger is marked underreplicated  using BookieShell commands and also later we can add alerts/metrics on under replicated ledgers which remained under replicated for more than acceptable duration.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1576 from reddycharan/urlctime
2018-08-07T15:33:09Z,281,Metadata Update mechanism  This patch introduces a metadata update mechanism for the client which will be used in all places where metadata is updated.  The mechanism takes a bunch of predicates and functions  and runs a loop again the ledger manager  attempting to apply the mutation required as specified.  It assumes that the ledger metadata objects on the client side are immutable and that any metadata object read reflects state that exists on the metadata store. This isn't the case right now  but as the current metadata updates are changed to use this  it will be the case.  This patch also introduces a limited LedgerMetadataBuilder  though only the fields required for testing at mutable.  Master Issue: #281  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1577 from ivankelly/ledger-fragment-immutable-metadata
2018-08-06T22:34:03Z,1582,Enhancing DecommissionBookieCmd  Descriptions of the changes in this PR:  - adding bookieid option to DecommissionBookieCmd  to enable decommissioning remote bookie. This might be needed because  in an extreme scenario Bookie node might not be completely accessible and hence we might need to decommission a Bookie remotely. - also DecommissionBookieCmd should delete the cookie of the decommissioned Bookie.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1582 from reddycharan/decomfix
2018-08-01T09:29:41Z,281,Make each ensemble in ensemble list immutable  Previously  the ensemble list was a Map<Long  ArrayList<BookieSocketAddress>>. ArrayList is by definition mutable  so ensemble passed to metadata users are always mutable.  This patch changes in ensembles in the list to be immutable. We were also leaking the implementation of ledger metadata to the placement policy  so this has been modified to use List<BookieSocketAddress> also.  Master issue: #281  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1575 from ivankelly/ledger-fragment-immutable-metadata and squashes the following commits:  14977a242 [Ivan Kelly] fix dlog bdaef31e8 [Ivan Kelly] checkstyle 6e3431118 [Ivan Kelly] Make each ensemble in ensemble list immutable
2018-07-31T17:25:59Z,281,Disallow direct access to LedgerHandle#metadata  This object has been accessed and mutated all over the client  which makes it hard to do anything with the object. This patch removes the direct accesses  so the object can only be accessed through an accessor.  Master issue: #281  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1574 from ivankelly/onlyaccessmdthroughaccessor
2018-07-31T10:50:50Z,281,LedgerManager should return the metadata just written  First part of changes to make ledger metadata immutable. The client should only act on metadata which has been written to zookeeper. To this end  we need to be able to get back from the ledger manager what has been written to zookeeper (with the version number updated).  Master issue: #281  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1573 from ivankelly/ledger-manager-returns-ledgermeta
2018-07-30T06:45:21Z,1559,ISSUE #1559: Fix for moveLedgerIndexFile logic in relocateIndexFileAndFlushHeader  Descriptions of the changes in this PR:  - In IndexPersistenceMgr.relocateIndexFileAndFlushHeader  if the currentDir is full and if it is the only indexDir which is eligible for newIndexFile creation then instead of failing with NoWritableLedgerDirException it should flushHeader without trying to move LedgerIndexFile.  Master Issue: #1559  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1560 from reddycharan/fixfileinfomove  closes #1559
2018-07-30T06:44:26Z,1565,ISSUE #1565: Update 'upgrade' doc for 4.8 release  Descriptions of the changes in this PR:  Update 'upgrade' doc by adding an entry "4.7.x to 4.8.0 upgrade" for ExplicitLac persistence  Master Issue: #1565  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1568 from reddycharan/upgradenote  closes #1565
2018-07-30T06:29:32Z,1571,Write DEFERRED_SYNC docs  Write a little documentation about DEFERRED_SYNC WriteFlag and force() API  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1571 from eolivelli/fix/bp14-docs
2018-07-27T08:59:07Z,1570,Flag to disable test reruns from the commandline  Useful when trying to hunt down flakes.  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1570 from ivankelly/retryFlag
2018-07-27T08:16:07Z,1569,Replace guava multimap in PCBC with custom impl  For a long time PerChannelBookieClient has used guava LinkedListMultiMap to store conflicting V2 completion keys and values. This is problematic though. Completion keys are pooled objects. When a key-value pair is stored in a LinkedListMultiMap  if it is the first value for that key  a collection is created for the values  and added to a top-level map using the key  and then the key and the value are added to the collection. When a second value is added for the same key  the key and value are simply added to the collection. The problem occurs when the first key is removed. PBCB will recycle the key object  but this object is still being used in the multimap in the top-level map. This causes all sorts of fun like NullPointerException and IllegalStateException.  Because of this  this patch introduces a very simple multimap implementation that only stores the key one time (in the collection) and uses the hashCode of the key to separate the collections into buckets. It's pretty inefficient  but this code it only hit in the rare case where a client is trying to read or write the same entry from the same ledger more than once at the same time.  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1569 from ivankelly/conc-test-flake
2018-07-24T12:06:08Z,1538,ISSUE #1538: Expose MetricsServer in http server  Descriptions of the changes in this PR:  Expose MetricsServer in  http server under `/metrics`  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1546 from jiazhai/issue_1538  closes #1538
2018-07-24T11:11:39Z,1551,[TABLE SERVICE] Set storage type on creating tables  Descriptions of the changes in this PR:  *Motivation*  We are using same metadata objects for both streams and tables. and we are using a storage model to distinguish them. We need to make sure we setting the storage model when creating tables.  *Changes*  Set storage type on creating tables.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1551 from sijie/set_storage_type
2018-07-24T11:10:04Z,1555,Provide BookieId option for listledgers command  Descriptions of the changes in this PR:  ### Motivation  While diagnosing/analyzing/debugging cluster  sometimes it would be helpful to know the list of the ledgers residing in a particular bookie. Currently there is no simple way (BookieShell command) to find out that.  ### Changes  For listledgers BookieShell command  provide bookieid option  which helps us in knowing list of ledgers residing in this particular Bookie.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1555 from reddycharan/printledgersofbookie
2018-07-23T21:21:24Z,1527,ISSUE #1527: Make ExplicitLAC persistent  Descriptions of the changes in this PR:  For persisting explicitLAC  we can follow the same approach as followed in persisting fencing information / stateBits (d69986c) in FileInfo file and special marker entry in Journal.  ### Motivation  ExplicitLAC is kept in the memory and it can be lost in bookie reboot. Though it is an extreme corner case scenario  it can break one of the BK guarantees. " If you read once you can always read it". If all the bookies of the Write stripe were rebooted  it can loose its explicitLAC value and the client which was able to read the entry before the reboot  can't read it anymore.  Master Issue: #1527  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1532 from reddycharan/storeexplicitlac  closes #1527
2018-07-23T20:15:32Z,1552,Provide utils to dump component configuration as json string (#1552)      *Motivation*    It is useful to dump configuration during service components started.  Bookie server already did that.    *Changes*    - Move JsonUtil to bookkeeper-common module to make it available to other modules.  - Add toJson method to ComponentConfiguration
2018-07-23T18:11:18Z,1563,ISSUE #1563: Spammy logs on Bookie in ReadEntryProcessorV3 in case of tailing reader on empty ledger  Descriptions of the changes in this PR: ### Motivation  In case of an empty ledger the bookie floods the disk with an useless message.  ### Changes  Make that line "No ledger found while reading entry" to be logged at 'debug' level.  Master issue #1563  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1564 from eolivelli/fix/1563-logs  closes #1563 and squashes the following commits:  f66a9b8c0 [Enrico Olivelli] only skip logging for LastAddConfirmed Entry 83f6217a0 [Enrico Olivelli] Issue-1563 Spammy logs on Bookie in ReadEntryProcessorV3 in case of tailing reader on empty ledger
2018-07-23T18:04:33Z,1544,ISSUE #1544: [DLOG] ConcurrentModificationException with nonblocking logReader.readNext(true)  Descriptions of the changes in this PR:  *Motivation*  Fixes #1544. ConcurrentModificationException is thrown when trying to access a non-thread-safe hashmap from different threads.  *Changes*  Make sure accessing to this non-thread-safe hashmap is under synchronized block.  *Tests*  It is a bit tricky to reproduce this race condition in a unit test or an integration test. so not going to attempt adding any tests.  Master Issue: #1544  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1558 from sijie/issue_1544  closes #1544
2018-07-23T18:02:36Z,1540,ISSUE #1540: Bookie/BookieServer components shutdown will fail to end exit the BookieProcess  Descriptions of the changes in this PR:   ### Motivation  Fixes the issue at #1540.  If Bookie/BookieServer components are shutdown internally because of any fatal errors (ExitCode - INVALID_CONF  SERVER_EXCEPTION  ZK_EXPIRED  ZK_REG_FAIL  BOOKIE_EXCEPTION) then it will go through shutdown method logic and shutdowns components internal to Bookie/BookieServer but it will not succeed in bringing down the bookie process.  This is because in BookieServer.main / server.Main.doMain it would wait for the startComponent future to complete http://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/server/Main.java#L227 . The startComponent future will be market complete only in runtime shutdownhook - https://github.com/apache/bookkeeper/blob/master/bookkeeper-common/src/main/java/org/apache/bookkeeper/common/component/ComponentStarter.java#L66.  But the problem is nowhere in Bookie/BookieProcess shutdown we are calling System.exit() and hence the runtime shutdownhook is not executed to mark the startComponent future to complete. Hence Main.doMain will wait forever on this future though Bookie/BookieServer components are shutdown because of known fatal errors.   ### Regression  Issue #508 introduced this regression. Before this change  the main thread is blocking using `BookieServer#join()`. When bookie is dead for any reason  the DeathWatchThread will kill the bookie and bookie server. so the main thread will quite. However after #508 is introduced  the lifecycle management is disconnected from the bookie and bookie server. so when they are dead  lifecycle management is unaware of the situation and the main thread doesn't quite.   ### Changes  - Add `UncaughtExceptionHandler` to lifecycle components - When a lifecycle component hits an error  it can use `UncaughtExceptionHandler` to notify lifecycle component stack to shutdown the whole stack  Master Issue: #1540  Author: Sijie Guo <sijie@apache.org>  Reviewers: Andrey Yegorov <None>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1543 from sijie/fix_lifcycle_components  closes #1540
2018-07-23T14:39:46Z,1547,Allow concurrent write requests for same entry in V2 protocol  With the V2 protocol we have previously allowed a single client to issue concurrent read requests for the same entry. We didn't allow the same for write requests  as we always assume single writer. This assumption isn't absolutely correct though. When opening a ledger  the recovery process will rewrite entries after the LAC. To PerChannelBookieClient these look no different to normal writes.  If a client tries to open a ledger multiple times concurrently  currently some of the attempts can hang forever since there is no support for concurrent writes.  This patch adds support for concurrent writes  so multiple concurrent ledger open attempts will always complete (though some may fail for unrelated reasons).  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1547 from ivankelly/conc-open
2018-07-23T14:36:20Z,1553,[TABLE SERVICE] Improve bin/bookkeeper standalone to start all available service components  Descriptions of the changes in this PR:  *Motivation*  Currently `bin/bookkeeper standalone` simply starts local bookies. It is not very useful when using standalone for local development for other service components.  *Changes*  - change `bin/bookkeeper standalone` to start a cluster of zookeeper  bookkeeper and table service containers - add `bin/standalone.process` to start a cluster of zookeeper  bookkeeper and table service containers in one process - change `bin/standalone` to support both process and docker-compose  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1553 from sijie/improve_bk_standalone
2018-07-23T14:35:02Z,1541,ISSUE #1541: Fix ReadOnlyBookie constructor  Descriptions of the changes in this PR:  ### Motivation  ReadOnlyBookie doesn't sets shutdownHandler to its statemanager.  There are couple of issues with how 'stateManager' is handled in ReadOnlyBookie   - ReadOnlyBookie creates its own stateManager in its constructor but it does not sets shutdownHandler. - Also  it is not correct to create stateManager instance in Bookie constructor and then again in ReadOnlyBookie constructor and override the instance created in super constructor.  ### Changes  - move initializeStateManager logic to a method and override it in ReadOnlyBookie.  Master Issue: #1541  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1557 from reddycharan/readonlybookiefix  closes #1541
2018-07-23T05:53:38Z,1566,[CI] Cleanup workspace before build  Descriptions of the changes in this PR:  *Motivation*  A lot of CI jobs failed due to gitlock file left in the workspace  *Changes*  Cleanup workspace before build  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1566 from sijie/cleanup_workspace
2018-07-20T11:51:48Z,1516,Disable testConcurrentWriteAndReadCalls in EntryLogTest  Descriptions of the changes in this PR:  *Motivation*  Those tests passed locally. However they are taking very long time to complete and cause all CI jobs become very flaky. In order to unblock all PRs  disable these tests in EntryLogTest.  *Changes*  Marked 4 tests in EntryLogTest as `FlakyTest`.  Relate Issue: #1516  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1561 from sijie/disable_some_entrylog_test
2018-07-18T07:15:05Z,1554,[TABLE SERVICE] Fix Journal replay issue on range deletion  Descriptions of the changes in this PR:  *Motivation*  We use `\000` as an indicator for null key in the protobuf delete operation. However when we convert the protobuf delete request to an delete operation  we didn't take `\000` into account.  *Changes*  - Fix ProtoDeleteOpImpl and ProtoRangeOpImpl to handle '\000'  (have a separated PR for an integration test to ensure this work)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1554 from sijie/fix_journal_replay
2018-07-18T07:14:19Z,1550,[TABLE SERVICE] Support getStreamById in root range store.  Descriptions of the changes in this PR:  *Motivation*  Stream readers need to fetch metadata information by quering its metadata using stream id.  *Changes*  Add support in root range to get stream properties using stream id.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1550 from sijie/add_get_stream_by_id
2018-07-17T07:36:30Z,1534,ISSUE #1534: LedgerCache should be flushed  Descriptions of the changes in this PR:  ### Motivation  EntryLogComparator.CompactionScannerFactory.flush just calls "ledgerStorage.updateEntriesLocations(offsets);" but not "ledgerStorage.flushEntriesLocationsIndex()".  Because of this  EntryLogCompactor.compact method would remove compacted entryLog without updated offsets/locations getting flushed/persisted/fsynced to LedgerCache (Index/FileInfo files). This could lead to data corruption/loss if Bookie is broughtdown/killed before those updated offsets/locations are flushed/persisted/fsynced. ### Changes  In EntryLogComparator  before removing compacted entryLog  LedgerCache (IndexInMemPageMgr and Index files) should be flushed  just like EntryLogger.  Master Issue: #1534  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1536 from reddycharan/compactfix  closes #1534
2018-07-17T07:34:27Z,1537,ISSUE #1537: fix distributedlog incubator link  Descriptions of the changes in this PR: ### Motivation  In bookkeeper website  we are still using incubator locations for dlog references. we should change it to http://bookkeeper.apache.org/distributedlog  ### Changes change links from `https://distributedlog.incubator.apache.org` to `https://bookkeeper.apache.org/distributedlog`  Master Issue: #1537  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1545 from jiazhai/issue_1537  closes #1537
2018-07-17T07:32:27Z,1542,ISSUE #1542: Unable to run 'bookkeeper' shell script from /bookkeeper/bin folder  Descriptions of the changes in this PR:  *Bug*  ``` Getting NoClassDefFoundError while trying to run 'bookkeeper' shell script from 'bin' folder. Issue seems to be related with classpath (cached classpath file - cached_classpath.txt)  ~/Workspace/Community/bookkeeper/bin$ ./bookkeeper shell JAVA_HOME not set  using java from PATH. (/usr/bin/java) cat: bookkeeper-server/target/cached_classpath.txt: No such file or directory Error: A JNI error has occurred  please check your installation and try again Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration at java.lang.Class.getDeclaredMethods0(Native Method) at java.lang.Class.privateGetDeclaredMethods(Class.java:2701) at java.lang.Class.privateGetMethodRecursive(Class.java:3048) at java.lang.Class.getMethod0(Class.java:3018) at java.lang.Class.getMethod(Class.java:1784) at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544) at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526) Caused by: java.lang.ClassNotFoundException: org.apache.commons.configuration.Configuration at java.net.URLClassLoader.findClass(URLClassLoader.java:381) at java.lang.ClassLoader.loadClass(ClassLoader.java:424) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ... 7 more ```  *Motivation*  Fixes #1542  *Problem*  `bin/common.sh` uses a relative path for caching classpath and locating the pom file.  *Changes*  - change to use full path for cached classpath file and the module pom file - add a test case to cover this problem  Master Issue: #1542  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #1548 from sijie/fix_issue_1542  closes #1542
2018-07-11T05:32:14Z,1539,Website - Add other usecases to the overview page  Add Twitter Manhattan and Herddb.org Distributed Databases usecases for BookKeeper as Write-Ahead-Log  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1539 from eolivelli/fix/websiteusacase
2018-06-26T21:23:43Z,1523,[RELEASE] Bump bk version to 4.7.1 in docker file  Descriptions of the changes in this PR:  Bump bk version to 4.7.1 to build docker image for `4.7.1`  Author: Sijie Guo <sijieapache.org>  Reviewers: Jia Zhai <None>  This closes #1523 from sijie/bump_docker_version  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1529 from sijie/cherry-pick_docker_change
2018-06-20T15:36:51Z,1526,LedgerManagerIteratorTest: avoid ledger collision  For the non-LHLM managers  the ledger space seems to be small enough to allow collisions to occasionally cause a test failure.  Remember created ledgers to avoid collisions.  (bug W-5104859) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1526 from athanatos/forupstream/wip-ledger-manager-iterator-test
2018-06-20T01:13:09Z,1525,[WEBSITE] update release guide to reflect current release process  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1525 from sijie/fix_release_guide
2018-06-20T01:08:26Z,1495,ISSUE #1495: Option to enforce minNumRacksPerWriteQuorum  Descriptions of the changes in this PR:  Provide an option to enforce the guarantee of minNumRacksPerWriteQuorum if it is enabled. If it cann't find a bookie to enforce the guarantee then the API in RackawareEnsemblePlacementPolicy should throw BKNotEnoughBookiesException.  Master Issue: #1495  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1496 from reddycharan/enforceminracks  closes #1495
2018-06-19T21:10:14Z,1522,[RELEASE] update website with 4.7.1 documentation  Descriptions of the changes in this PR:  Signed-off-by: Sijie Guo <sijieapache.org>  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1522 from sijie/update_website
2018-06-19T18:15:53Z,705,ISSUE #705: add site/scripts/release_minor.sh for minor releases  Descriptions of the changes in this PR:  *Motivation*  Currently `site/scripts/release.sh` only supports major releases.  *Changes*  Added a similar `release_minor.sh` to support minor releases.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1524 from sijie/provide_script_release_minor  closes #705
2018-06-19T18:13:37Z,1518,[RELEASE] Release Notes for Release 4.7.1  Descriptions of the changes in this PR:  Release Notes for release 4.7.1  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1518 from sijie/release_notes_471
2018-06-18T18:16:15Z,1520,Fix typo in bk_server.conf  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1520 from ivankelly/ivankelly-patch-1
2018-06-18T07:05:11Z,1436,BP-14 force() API - client side implementation  - Introduce the client side force() API - Implementation on the client side wire protocol for FORCE_LEDGER RPC - Disable ensemble changes for DEFERRED_SYNC writers - Prevent v2 client from using force() API.  The force() API enables the client (usually with DEFERRED_SYNC write flags) to require a point of synchronization with all the bookies in the ensemble  to have guarantees about durability of previously written entries (and ackknowledgerd)  this way LastAddConfirmed is able to advance.  For DEFERRED_SYNC writers LastAddConfirmed will advance only using this API  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1436 from eolivelli/bp14-force-client-api
2018-06-14T14:57:33Z,1516,Move TimedOutTestsListener from dlog to bookkeeper-common  Descriptions of the changes in this PR:  This PR is to debug CI problems observed at #1516  ### Motivation  dlog uses a `TimedOutTestsListener` to dump the jvm stack when a junit test timed out. move this class to bookkeeper-common and built with `test-jar`  so it can be used across the project.  ### Changes  relocate `TimedOutTestsListener` and its related classes from distributedlog-common to bookkeeper-common.  Related Issue: #1516  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1517 from sijie/add_test_timedout_listener
2018-06-14T09:13:22Z,1476,ISSUE #1476: LedgerEntry is recycled twice at ReadLastConfirmedAndEntryOp  Descriptions of the changes in this PR:  The issue #1476 is caused by peculative reads with object recycling  same request object will be added to the CompletionObjects multiple times with different txnid.  In fact the logic of process the request already take this into account  only on place inside `ReadLastConfirmedAndEntryOp.requestComplete` forget to check requestComplete before calling `submitCallback` which in turn call request.close.  ### Motivation  to fix #1476  ### Changes  check `requestComplete` before `submitCallback` in `ReadLastConfirmedAndEntryOp.requestComplete`  Master Issue: #1476  Author: Sijie Guo <sijie@apache.org> Author: infodog <infodog@hotmail.com> Author: zhengxiangyang <zxy@xinshi.net>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1509 from infodog/issue1476  closes #1476
2018-06-14T00:41:02Z,1489,Issue #1489: Better Prevent Read Outliers during short-term Bookie Slow-Down  ### Motivation  Bookies can temporarily be slow for a large number of reasons  often for just a brief time of few milliseconds to seconds such as during Java Garbage Collection or EntryLog compaction. For writes  latencies of individual bookies are masked by acknowledging the client after a quorum of bookies have replied. However for reads  we don't have any equivalent feature to mask short-term latencies of individual bookies yet (in case of SequenceReadRequests). This PR implements such a feature by reordering reads to prefer bookies with a high probability of being fast over bookies that are potentially slow.  ### Changes This change implements a configurable reordering of read requests in Bokkeeper client based on the number of pending requests to each bookie that could service the request. The intention is to mask the latency of one bookie by directing a read request to another bookie that could potentially service the request faster. This should help prevent read time outliers due to bookies that temporarily are responsing slow  for example due to Java garbage collection  compaction  or any other kind of hickup. Unlike the implementation for Issue #709  this algorithm quickly reacts to both an or decrease increase in queue length of a bookie relative to others  and allows to redirect requests long before they would hit the speculativeReadTimeout. Once the problem is resolved (e.g. Java GC finished)  it will quickly direct requests to the previously "slow" bookie as its queue length decreases.  Reordering of reads is based on a threshold of relative queue length to other bookies. Setting the threshold very low will more frequently reorder the read set and potentially result in better latency  but will also reduce data affinity of reads. Reads send to other than the preferred bookie have a low chance to be served from file system cache on that bookie  and will likely result in a physical read. Small thresholds therefore shuffle read requests more among bookies and may lead to reduced file system cache reach and increased physical reads on disks. A larger timeout will maintain data affinity and avoid above problems  but only kick in once a bookie has built-up a considerable queue of requests. It therefore masks only slightly larger outliers  and leads to overall better efficiency.  Master Issue: #1489  Author: Nicolas Michael <nmichael@salesforce.com>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1504 from nicmichael/ReadReordering  closes #1489
2018-06-14T00:35:34Z,1344,Allow to configure read-only mode in ZooKeeperClient  Underlying `Zookeeper` instance has an option to specify the client is fine to remain connected when the ZK quorum is lost  just in read-only mode.  We should expose the "allow read-only mode" option in `ZooKeeperClient`.  One example of use case for this flag is when connecting to a ZK ensemble that is just used for configuration/metadata store  in which no ephemeral nodes are used. It's therefore better to keep the connection with ZK and be able to keep reading (possibly stale) data from ZK rather than no read at all. Concrete use case is for ZK session for Pulsar global ZK ensemble  where we read configuration data and we don't really need to have a valid session when brokers are trying to read.  Author: Sijie Guo <sijie@apache.org> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1344 from merlimat/zk-client-read-only
2018-06-13T08:42:46Z,1511,Issue #1511: Upgrade nokogiri to version 1.8.2  Version <1.8.2 contain a security vulnerability.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1515 from ivankelly/nokogiri  closes #1511
2018-06-13T02:29:15Z,1490,ISSUE #1490: BookieJournalForceTest is flaky  Descriptions of the changes in this PR:  ### Motivation  The test cases in BookieJournalForceTest check if the forceWriteQueue is empty after everything is flushed. However if `adaptiveGroupWrites` is enabled  the forceWrite thread will insert a marker entry into force write queue  this will fail the forceWriteQueue length checking.  ### Changes  Disable `adaptiveGroupWrites` in BookieJournalForceTest  Master Issue: #1490  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1512 from sijie/fix_journalforcetest  closes #1490
2018-06-12T04:48:02Z,1922,[TABLE SERVICE] replaying TxnRequest is not implemented  *Motivation*  when enabling table service for pulsar at apache/incubator-pulsar#1922  I noticed that replaying TxnRequest is missed somehow.  *Solution*  This PR implements the replaying TxnRequest logic in the command process.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1505 from sijie/replay_txn_request
2018-06-11T17:41:31Z,1507,[TABLE SERVICE] Fix StringUtf8Coder and add VarIntCoder  Descriptions of the changes in this PR:  *Motivation*  The getSerializeLen() returned by StringUtf8Coder is different from the serialized buffer size.  *Changes*  - Fix StringUtf8Coder - Add tests to coders - Add a VarIntCoder  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1507 from sijie/fix_string_coder
2018-06-11T17:08:03Z,1500,Issue #1500: PendingReadOp.logErrorAndReattemptRead logs errors with debug level  some of them useful for troubleshooting at info/warn level  (bug W-3976846)  Descriptions of the changes in this PR:  Changed log level of one line from debug to info  ### Motivation  Useful for troubleshooting of prod issue  don't want to have debug log enabled in prod all the time.  ### Changes  Changed log level of one line from debug to info  Master Issue: #1500  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1501 from dlg99/fix/pendingreadop-log  closes #1500
2018-06-10T19:13:50Z,1506,[TABLE SERVICE] Fix ZkClusterMetadataStoreTest  Descriptions of the changes in this PR:  ### Motivation  initialize signature was changed. but the test was not changed.  ### Changes  Fix the test case.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1506 from sijie/fix_zk_cluster_initialize
2018-06-08T02:20:11Z,1498,Issue #1498: Log messages/exception text in DiskChecker shows 'used <threshold' in 'used > threshold' situations  (bug W-3812505)  Descriptions of the changes in this PR:  Fixed log/exception text.  ### Motivation  Reduced confusion when debugging an issue/going through the logs.  ### Changes  replaced '<' with '>'  Master Issue: #1498  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1499 from dlg99/fix/diskchecker-log  closes #1498
2018-06-08T01:45:30Z,1503,[DEVTOOLS] Use ASF Jenkins API properly  Descriptions of the changes in this PR:  According to https://cwiki.apache.org/confluence/display/INFRA/Using+the+ASF+Jenkins+API  we need to include 'tree' or 'depth' when using ASF jenkins API.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1503 from sijie/access_jenkins_apis_should_include_depth
2018-06-08T01:43:07Z,1502,[WEBSITE] Include trademark attribution in footer  Descriptions of the changes in this PR:  According to http://www.apache.org/foundation/marks/pmcs#attributions  include trademark attribution in the footer.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1502 from sijie/update_trademarks
2018-06-07T06:20:38Z,1487,[BOOKIE] [DBLEDGERSTORAGE] fix illegal reference count exception on filling read cache  Descriptions of the changes in this PR:  *Problem*  ByteBuf is released at a finally block. DbLedgerStorage doesn't have to release it on return. If it does so  that will cause double-release and it will throw IllegalReferenceCountException.  *Solution*  Remove `ByteBuf.release` at return.  Related Issue: #1487  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1488 from sijie/fix_double_release_on_db_ledgerstorage
2018-06-07T06:17:00Z,1494,[CI] Allow selecting a list of precommit checks to skip in the pull request description.  Descriptions of the changes in this PR:  *Motivation*  precommit checks are good. however sometime it takes a long time to wait for precommit checks to complete  for trivial changes (e.g. documentation  ci jenkins files  scripts  proposals).  *Changes*  This PR updates the PULL_REQUEST_TEMPLATE.md to provide a list of precommit checks to be allowed to skip. So people can choose skip some precommit checks when filing a pull request.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1494 from sijie/skip_tests_is_too_general
2018-06-07T06:10:18Z,1478,[TABLE SERVICE] Move table service cli to bookkeeper-tools  Descriptions of the changes in this PR:  *Motivation*  This PR follows #1478  to move table service cli to bookkeeper-tools. So different service components are now available in one cli tool.  *Changes*  - move stream/cli module to tools/stream module - organize the table service commands as groups:  * cluster * namespace * table * tables  *Output*  Example output:  ``` $ bin/bkctl bkctl interacts and operates Apache BookKeeper clusters  Usage:  bkctl [flags] [command group] [commands]  Commands:      bookie          Commands on operating a single bookie     bookies         Commands on operating a cluster of bookies     cluster         Commands on administrating bookkeeper clusters     ledger          Commands on interacting with ledgers     namespace       Commands on operating namespaces     table           Commands on interacting with tables     tables          Commands on operating tables      help            Display help information about it  Flags:      -c  --conf         Configuration file      -n  --namespace         Namespace scope to run commands (only valid for table service for now)      -u  --service-uri         Service Uri      -h  --help         Display help information  Use "bkctl [command] --help" or "bkctl help [command]" for more information about a command ```  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1485 from sijie/stream_cli
2018-06-07T06:07:04Z,1491,ISSUE #1491: fix GLIBC_2.14 dep issue for protoc-3.5.1-linux-x86_64  Descriptions of the changes in this PR:  I tried to build the bookkeeper branch-4.7 on RHEL6 and ran into:  ```  /lib64/libc.so.6: version `GLIBC_2.14' not found (required by bookkeeper-proto/target/protoc-plugins/protoc-3.5.1-linux-x86_64.exe) ``` This is similar to google/protobuf#4109 and it's related to google/protobuf#4138  We can take advantage of pulsar's fix apache/incubator-pulsar#1914 here  Master Issue:  https://github.com/apache/bookkeeper/issues/1491  Author: Ethan Li <ethanopensource@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1492 from Ethanlm/ISSUE-1491  closes #1491
2018-06-07T06:05:07Z,1484,RegionAwareEnsemblePlacementPolicy class should use super class's minNumRacksPerWriteQuorum variable  Descriptions of the changes in this PR:  RegionAwareEnsemblePlacementPolicy class should use minNumRacksPerWriteQuorum variable which is declared in its super class - RackawareEnsemblePlacementPolicyImpl  since it is related to its super class.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1484 from reddycharan/fixregpp
2018-06-07T06:03:48Z,1486,[TABLE SERVICE] dlog configuration settings are not propagated  Descriptions of the changes in this PR:  *Motivation*  When stream storage server starts the bookie watcher service  it waits for at least `ensembleSize` bookies available before starting other components. However the dlog settings are not propagated correctly. so when using this component in an environment that only has 1 bookie (e.g. pulsar standalone). Startup will be hanging on waiting 3 bookies.  *Solution*  load the dlog settings from the base configuration.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1486 from sijie/fix_loading_dlog_configuration
2018-06-07T06:02:52Z,1493,[TABLE SERVICE] Improve logging message on initializing table range stores.  Descriptions of the changes in this PR:  *Motivation*  Exceptions might be throwing on starting/stopping table ranges. It would be good to have logging messages about the state transition for debugging purpose.  *Build*  Only touch following stream modules  skip bookkeeper-server related tests:  [skip tests]  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1493 from sijie/improve_logging
2018-06-07T05:59:13Z,1497,Improve merge script on checking the statuses of github checks (missing commit)      Descriptions of the changes in this PR:      *Motivation*      Sometimes Jenkins CI job might already succeed  however they failed on publishing the build status     to Github due to timeout (one example is attached below). In this case  we don't need to rerun the jenkins check again.      ```     Setting status of 55c1d54f3293e5166c59f238afd3fb3d98c7eb67 to SUCCESS with url https://builds.apache.org/job/bookkeeper_precommit_client_tests/21/ and message: 'SUCCESS      '     Using context: Jenkins: Client Tests     Could not update commit status of the Pull Request on GitHub.     org.kohsuke.github.HttpException: Server returned HTTP response code: -1  message: 'null' for URL: https://api.github.com/repos/apache/bookkeeper/statuses/55c1d54f3293e5166c59f238afd3fb3d98c7eb67             at org.kohsuke.github.Requester.parse(Requester.java:633)             at org.kohsuke.github.Requester.parse(Requester.java:631)             at org.kohsuke.github.Requester.parse(Requester.java:631)             at org.kohsuke.github.Requester.parse(Requester.java:594)             at org.kohsuke.github.Requester._to(Requester.java:272)             at org.kohsuke.github.Requester.to(Requester.java:234)             at org.kohsuke.github.GHRepository.createCommitStatus(GHRepository.java:1075)             at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.createCommitStatus(GhprbSimpleStatus.java:281)             at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.onBuildComplete(GhprbSimpleStatus.java:239)             at org.jenkinsci.plugins.ghprb.GhprbBuilds.onCompleted(GhprbBuilds.java:205)             at org.jenkinsci.plugins.ghprb.GhprbBuildListener.onCompleted(GhprbBuildListener.java:28)             at hudson.model.listeners.RunListener.fireCompleted(RunListener.java:211)             at hudson.model.Run.execute(Run.java:1769)             at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)             at hudson.model.ResourceController.execute(ResourceController.java:97)             at hudson.model.Executor.run(Executor.java:429)     Caused by: java.net.SocketTimeoutException: Read timed out             at sun.reflect.GeneratedConstructorAccessor10056.newInstance(Unknown Source)             at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)             at java.lang.reflect.Constructor.newInstance(Constructor.java:423)             at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1944)             at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1939)             at java.security.AccessController.doPrivileged(Native Method)             at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1938)             at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1508)             at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)             at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)             at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)             at org.kohsuke.github.Requester.parse(Requester.java:602)             ... 15 more     Caused by: java.net.SocketTimeoutException: Read timed out             at java.net.SocketInputStream.socketRead0(Native Method)             at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)             at java.net.SocketInputStream.read(SocketInputStream.java:171)             at java.net.SocketInputStream.read(SocketInputStream.java:141)             at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)             at sun.security.ssl.InputRecord.read(InputRecord.java:503)             at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:983)             at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:940)             at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)             at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)             at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)             at java.io.BufferedInputStream.read(BufferedInputStream.java:345)             at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)             at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)             at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)             at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)             at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)             at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)             at org.kohsuke.github.Requester.parse(Requester.java:602)             ... 13 more     Finished: SUCCESS     ```      *Changes*      Improve the merge script to check jenkins status before treating the checks as failed.      Author: Sijie Guo <sijie@apache.org>      Reviewers: Enrico Olivelli <eolivelli@gmail.com>      This closes #1497 from sijie/improve_merge_script
2018-06-07T05:32:39Z,1497,Improve merge script on checking the statuses of github checks  Descriptions of the changes in this PR:  *Motivation*  Sometimes Jenkins CI job might already succeed  however they failed on publishing the build status to Github due to timeout (one example is attached below). In this case  we don't need to rerun the jenkins check again.  ``` Setting status of 55c1d54f3293e5166c59f238afd3fb3d98c7eb67 to SUCCESS with url https://builds.apache.org/job/bookkeeper_precommit_client_tests/21/ and message: 'SUCCESS  ' Using context: Jenkins: Client Tests Could not update commit status of the Pull Request on GitHub. org.kohsuke.github.HttpException: Server returned HTTP response code: -1  message: 'null' for URL: https://api.github.com/repos/apache/bookkeeper/statuses/55c1d54f3293e5166c59f238afd3fb3d98c7eb67  at org.kohsuke.github.Requester.parse(Requester.java:633)  at org.kohsuke.github.Requester.parse(Requester.java:631)  at org.kohsuke.github.Requester.parse(Requester.java:631)  at org.kohsuke.github.Requester.parse(Requester.java:594)  at org.kohsuke.github.Requester._to(Requester.java:272)  at org.kohsuke.github.Requester.to(Requester.java:234)  at org.kohsuke.github.GHRepository.createCommitStatus(GHRepository.java:1075)  at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.createCommitStatus(GhprbSimpleStatus.java:281)  at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.onBuildComplete(GhprbSimpleStatus.java:239)  at org.jenkinsci.plugins.ghprb.GhprbBuilds.onCompleted(GhprbBuilds.java:205)  at org.jenkinsci.plugins.ghprb.GhprbBuildListener.onCompleted(GhprbBuildListener.java:28)  at hudson.model.listeners.RunListener.fireCompleted(RunListener.java:211)  at hudson.model.Run.execute(Run.java:1769)  at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)  at hudson.model.ResourceController.execute(ResourceController.java:97)  at hudson.model.Executor.run(Executor.java:429) Caused by: java.net.SocketTimeoutException: Read timed out  at sun.reflect.GeneratedConstructorAccessor10056.newInstance(Unknown Source)  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)  at java.lang.reflect.Constructor.newInstance(Constructor.java:423)  at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1944)  at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1939)  at java.security.AccessController.doPrivileged(Native Method)  at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1938)  at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1508)  at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)  at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)  at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)  at org.kohsuke.github.Requester.parse(Requester.java:602)  ... 15 more Caused by: java.net.SocketTimeoutException: Read timed out  at java.net.SocketInputStream.socketRead0(Native Method)  at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)  at java.net.SocketInputStream.read(SocketInputStream.java:171)  at java.net.SocketInputStream.read(SocketInputStream.java:141)  at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)  at sun.security.ssl.InputRecord.read(InputRecord.java:503)  at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:983)  at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:940)  at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)  at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)  at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)  at java.io.BufferedInputStream.read(BufferedInputStream.java:345)  at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)  at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)  at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)  at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)  at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)  at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)  at org.kohsuke.github.Requester.parse(Requester.java:602)  ... 13 more Finished: SUCCESS ```  *Changes*  Improve the merge script to check jenkins status before treating the checks as failed.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1497 from sijie/improve_merge_script
2018-06-06T06:57:38Z,1482,Remove phrase trigger on post commit jobs  Descriptions of the changes in this PR:  *Problem*  After enabling phrase trigger on precommit jobs to allow rerun individual precommit jobs  "retest this please" will run all the jobs including postcommit jobs.  *Solution*  Running postcommit jobs on pull requests doesn't make sense. This PR removes all the phrase trigger from postcommit jobs.  Additionally  fixes typos and also increases the timeout for integration tests.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1482 from sijie/fix_typoes
2018-06-06T06:55:34Z,1465,Fix checkstyle in EntryLogTest  Descriptions of the changes in this PR:  *Problem*  PR #1465 introduces a checkstyle error  but somehow it wasn't caught by CI jobs.  *Solution*  Fix the checkstyle error and bring master back to normal.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1483 from sijie/fix_checkstyle_complains_entrylogtest
2018-06-06T06:53:27Z,2717,Upgrade RocksDB to 5.13.1  Upgrade RocksDB version to include a fix for empty SSTs written by flushing with deleteRange() operations that cause assertion failures on DB open.  Description can be found at : facebook/rocksdb#2717  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1466 from merlimat/upgrade-rocksdb
2018-06-05T21:45:33Z,1460,Metrics for EntryLogManagerForEntryLogPerLedger.  Descriptions of the changes in this PR:  Add counters/statsloggers for EntryLogManagerForEntryLogPerLedger.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1460 from reddycharan/elmmetrics
2018-06-05T21:39:52Z,1471,Update the new bookkeeper tools to use the new framework  Descriptions of the changes in this PR:  *Motivation*  #1471  introduces a new tools framework based on jcommander. This PR is changing the new bookkeeper-tools to leverage that framework.  *Solution*  - Changed the related classes to use the new framework. - Rename `BookKeeperCLI` to `BKCtl` and `bookkeeper-cli` to `bkctl` - Use service loader to load command groups to allow better extensibility - Rename command group `cluster` to `bookies`  *Results*  Example output of this change:  ``` $ bin/bkctl bkctl interacts and operates Apache BookKeeper clusters  Usage:  bkctl [flags] [command group] [commands]  Commands:      bookie      Commands on operating a single bookie     bookies     Commands on operating a cluster of bookies     ledger      Commands on interacting with ledgers      help        Display help information about it  Flags:      -c  --conf         Configuration file      -u  --service-uri         Service Uri      -h  --help         Display help information  Use "bkctl [command] --help" or "bkctl help [command]" for more information about a command ```  *sub command* ``` $ bin/bkctl help bookie Commands on operating a single bookie  Usage:  bkctl bookie [command] [command options]  Commands:      lastmark        Print last log marker      help            Display help information about it  Use "bkctl bookie [command] --help" or "bkctl bookie help [command]" for more information about a command ```  *sub-sub command*  ``` $ bin/bkctl bookie help lastmark Print last log marker  Usage:  bkctl bookie lastmark [flags]  Flags:      -h  --help         Display help information ```  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1478 from sijie/bkctl_tools
2018-06-05T20:04:38Z,1465,Append ledgersMap when entrylog is removed from cache.  Descriptions of the changes in this PR:  In EntryLogManagerForEntryLogPerLedger when ledger-entrylog entry is removed from cache  it will be moved to rotatedEntryLogs list. Before moving it to rotatedEntryLogs  ledgersMap should be appended.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1465 from reddycharan/fixappendledgersmap
2018-06-05T17:59:17Z,1481,Improve precommit build time  Descriptions of the changes in this PR:  *Motivation*  The build/test time of `bookkeeper-server` is almost close to or more than 1 hr.  *Solution*  Split the precommit jobs into multiple jobs:  - *PR Validation* : run `apache-rat:check`  `checkstyle:check`  to ensure codestyle and license headers - *Build (Java x)* : run `package` `spotbugs:check`  to ensure PR can be compiled and tested on different java environments. No spotbugs errors. `bookkeeper-server` tests are skipped. - *Integration Tests* : run integration tests with docker environment - *bookkeeper-server Tests* : tests `bookkeeper-server` on certain packages:   - bookie: `org.apache.bookkeeper.bookie`   - client: `org.apache.bookkeeper.client`   - replication: `org.apache.bookkeeper.replication`   - tls: `org.apache.bookkeeper.tls`   - all others: all other tests in `bookkeeper-server` module  Each job can be triggered and skipped individually.  - *PR Validation* : "(re)run pr validation" | "" (unskippable) - *Build (Java x)* : "(re)build java(8|9)" | "skip build java(8|9)"   - "(re)build" to build on both java8 and java9   - "skip build" to skip building jobs on both java8 and java9 - *Integration Tests* : "(re)run integration tests" | "skip integration tests" - *bookkeeper-server tests* : "(re)run (bookie|client|replication|tls|remaining) tests" | "skip (bookie|client|replication|tls|remaining) tests"   - "(re)run tests" to run all bookkeeper-server test jobs   - "skip tests" to skip all bookkeeper-server test jobs  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1481 from sijie/improve_build_time
2018-06-05T06:53:16Z,1480,Throttle integration tests to run 1 build per host  Descriptions of the changes in this PR:  If running multiple integration tests build on same host  they will be conflicting on installing docker images. So throttle integration tests to run max 1 build per host.  See discussions at : http://mail-archives.apache.org/mod_mbox/pulsar-dev/201806.mbox/%3CCAJdLeK0nj9n-TKC4t43Nyc8bO9UUW17wM%2By_fF68EgFL6Fpo8w%40mail.gmail.com%3E  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1480 from sijie/disable_concurrent_builds
2018-06-04T20:30:43Z,1000,Abstract the tools framework to allow merging multiple CLI tools together  Descriptions of the changes in this PR:  *Motivation*  There are multiple CLI tools spreading across multiple places  e.g. new bookkeeper cli  stream storage cli and dlog. There have similar implementations. It would be better to consolidate all these tools in one place `bookkeeper-tools`.  This is a PR to prepare moving `stream/cli` to be part of bookkeeper-tools.  *Solution*  - Abstract the CLI logic in bookkeeper-tools into a simple tools framework that can be reused in a extensible way to unify multiple tools together. - organize the tools module into tools/framework and tools/all  *Result*  Example output of the tool using this framework is listed as below:  ``` $ bin/bkctl bkctl interacts and operates Apache BookKeeper clusters  Usage:  bkctl [flags] [command group] [commands]  Commands:      bookie          Commands on operating a single bookie     bookies         Commands on operating a cluster of bookies     cluster         Commands on administrating bookkeeper clusters     ledger          Commands on interacting with ledgers     namespace       Commands on operating namespaces     table           Commands on interacting with tables     tables          Commands on operating tables      help            Display help information about it  Flags:      -c  --conf         Configuration file      -n  --namespace         Namespace scope to run commands (only valid for table service for now)      -u  --service-uri         Service Uri      -h  --help         Display help information  Use "bkctl [command] --help" or "bkctl help [command]" for more information about a command ```  *result from help sub-command*  ``` $ bin/bkctl help table Commands on interacting with tables  Usage:  bkctl table [command] [command options]  Commands:      get         Get key/value pair from a table     inc         Increment the amount of a key in a table     put         Put key/value pair to a table      help        Display help information about it  Use "bkctl table [command] --help" or "bkctl table help [command]" for more information about a command ```  *result from help sub-sub-command*  ``` $ bin/bkctl table help inc Increment the amount of a key in a table  Usage:  bkctl table inc [flags] <table> <key> <amount>  Flags:      -h  --help         Display help information ```  Master Issue: #1000  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1471 from sijie/tools_framework
2018-06-04T20:07:42Z,1469,Improve precommit CI jobs on handling PRs made to branches  Descriptions of the changes in this PR:  *Motivation*  Current precommit CI jobs uses `master` as target branch for applying the pull requests. However pull requests might be made against branches. e.g. #1469  precommit jobs can't run properly on those pull requests. This PR tends to address the problem.  *Solution*  Use `ghprbTargetBranch` as the build branch for precommit jobs.  Besides that  split the validation goals (e.g. checkstyle  apache-rat) from build/test goals (package  spotbugs)  this reduces build time for different jdk versions and address problem when running checkstyle:check with other goals (e.g. deploy).  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1475 from sijie/run_precommit_jobs_over_target_branches
2018-06-04T20:00:04Z,1469,Improve merge script to merge PRs based on branches  Descriptions of the changes in this PR:  *Motivation*  Merge script doesn't handle well on handling PRs based on branches. So committers ended up using merge button to merge PRs. so we lose a lot of informations such as descriptions  reviewers in the commit message.  *Solution*  This PR fixes the problems on handling merging PRs based on branches.  This allows us merging #1469 using merge script.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1477 from sijie/merge_pull_request_from_branch
2018-06-04T13:46:33Z,1470,Support build on JDK10  - switch to "javac -h" in circe-checksum instead of 'javah' because in JDK10 javah has been dropped (see http://openjdk.java.net/jeps/313) - add openjdk10 to Travis-CI  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1470 from eolivelli/nar-jdk10
2018-06-04T07:57:09Z,1472,ISSUE #1472: [TABLE SERVICE] TestStorageClientBuilder.testBuildClientInvalidNamespaceName failed  Descriptions of the changes in this PR:  *Problem*   #1457 changed the validation of namespace/stream name. so "-" is a valid character.  *Solution*  Fix the test.  Master Issue: #1472  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1473 from sijie/fix_storage_client_builder  closes #1472
2018-06-02T05:08:46Z,1467,Issue #1467: build failing with MavenReportException: Error while generating Javadoc. (#1468)
2018-06-01T23:28:17Z,1409,Issue #1409: Added server side backpressure (@bug W-3651831@) (#1410)  (@bug W-3651831@) backpressure: server-side backpressure
2018-06-01T16:42:20Z,1463,[CI] Run integration tests concurrently if possible  Descriptions of the changes in this PR:  Execute integration tests concurrently if necessary.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1463 from sijie/concurrent_builds
2018-06-01T16:32:57Z,1455,ISSUE #1455: Revert ": Unable to process suppressions file during checkstyle execution"  Descriptions of the changes in this PR:  This reverts commit 4bc021a438ca1e5acff23f7e3cb6cdb6984c1066 to address the issue we saw in #1461  Related Issue: #1456  This fixes #1461  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1462 from sijie/fix_maven_builds  closes #1455
2018-06-01T16:30:49Z,1458,ISSUE #1458: [CI] Fix bookkeeper-seed CI Job  Descriptions of the changes in this PR:  *Motivation*  Issue #1454 introduced a typo  which cause the seed job can not parse groovy DSL files.  *Solution*  Fix the typo.  Master Issue: #1458  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1464 from sijie/fix_job_seed  closes #1458
2018-06-01T06:26:04Z,1449,BP-33: Move releasing official docker images out of main repo  Descriptions of the changes in this PR:  *Motivation*  Current bookkeeper docker images are auto-built by apache docker account. However it becomes problematic in the release process:  Docker autobuild uses release tag for labeling the versions for docker images. But the Dockerfile can only be updated after a release is successfully made. So we have to retag a release after a release  in order to update Dockerfile to build the docker images.  Master Issue: #1449  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1450 from sijie/official_docker_images
2018-06-01T06:24:02Z,1459,[TABLE SERVICE] cleanup : provide unified service uri for resolving service endpoints  Descriptions of the changes in this PR:  *Motivation*  Currently there are multiple settings in `StorageClientSettings` on configuring how to resolve service endpoints to find the services. It is a bit inconvinient and confusing  *Solution*  Provide a class `ServiceURI` for parsing service uri to retrieve common informations including:  - serviceName - serviceInfos - serviceUser - serviceHosts - servicePath  It extends the java.net.URI and does parsing and validation in the same place. Then it can be used by the grpc name resolver to resolve service endpoints.  Also update dlog to use it for resolving its namespace uri.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1459 from sijie/name_resolver
2018-05-31T08:45:59Z,1453,Make bookkeeper-server module buildable on jdk10  Upgrade lombok and javadoc plugin to latest versions. This way it is possible to work on most of the modules using JDK10.  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1453 from eolivelli/fix/build-jdk10
2018-05-31T06:26:08Z,1457,[TABLE SERVICE] cleanup : cleanup protobuf definitions  Descriptions of the changes in this PR:  *Motivation*  There are some unused fields and some fields that were not renamed correctly from col to namespace.  *Solution*  This is a cleanup PR to remove unused fields and rename "col" to "ns" or "namespace".  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1457 from sijie/cleanup_fields
2018-05-30T17:18:15Z,1448,[TABLE SERVICE] remove StorageContainerRequest and StorageContainerResponse  Descriptions of the changes in this PR:  *Motivation*   #1448 uses reverse proxy for serving storage container requests and responses. so the `StorageContainerRequest` and `StorageContainerResponse`  become redundant.  *Solution*  removes `StorageContainerRequest` and `StorageContainerResponse`  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1452 from sijie/remove_storage_container_request_response
2018-05-30T11:14:32Z,1455,Issue 1455: Unable to process suppressions file during checkstyle execution  Descriptions of the changes in this PR:  *Motivation*  Failed to run `mvn clean apache-rat:check checkstyle:check install -DskipTests`  ``` [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (default-cli) on project bookkeeper-stats-api: Failed during checkstyle execution: Unable to process suppressions file location: bookkeeper/suppressions.xml: Cannot create file-based resource:invalid block type -> [Help 1] [ERROR] [ERROR] To see the full stack trace of the errors  re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR] [ERROR] For more information about the errors and possible solutions  please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException [ERROR] [ERROR] After correcting the problems  you can resume the build with the command [ERROR]   mvn <goals> -rf :bookkeeper-stats-api ```  *Solution*  - Make `buildtools` not inherit from bookkeeper root pom. - Make bookkeeper root pom includes `buildtools` as a `provided` dependency for each module.  Master Issue: #1455 Related Issues: #1435  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1456 from sijie/fix_ci_failure
2018-05-30T07:56:40Z,1451,Update release procedure to use candidate tags for voting  Descriptions of the changes in this PR:  *Motivation*  We used final release tag during release voting procedure. However there might be changes happen between different candidate votes. So we ended up retagging the release tag for different votes.  *Solution*  Use a candidate tag for voting. After a release is approved  create the final release tag.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1451 from sijie/update_release_guid
2018-05-30T07:55:27Z,1454,Allow CI to publish a snapshot version with gitsha information  Descriptions of the changes in this PR:  *Motivation*  Currently bookkeeper publishes a snapshot release nightly to maven artifacts. It provides a convenient solution for people to try out new bookkeeper releases as soon as the changes land in master branch. However sometime it is also problematic when you reference this snapshot version in other projects  subsequent changes in bookkeeper might potentially break those projects.  *Solution*  Update the CI to provide a mechanism to publish a snapshot version with gitsha information. so it can publish a snapshot version that is pinned to the given gitsha. so the projects can safely use a snapshot version for development without worrying bookkeeper changes break it.  *NOTES*  The mechanism is a manual operation. It should be used when it is needed.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1454 from sijie/publish_snapshot_with_gitsha
2018-05-29T01:29:09Z,1430,[TABLE SERVICE] use grpc reverse proxy to serve storage container requests  Descriptions of the changes in this PR:  *Motivation*  #1430 introduced client interceptor and grpc reverse proxy for storage container requests. This PR is the subsequent change to leverage client interceptor and reverse proxy for storage container requests.  *Changes*  **Client Changes**  Changed `StorageContainerChannel` to add client interceptor to stamp storage container id into the the requests' metadata.  **Server Changes**  - moved the stream storage logic out of storage containers to a `service` package. the main logic will be kept in `RangeStoreService` and `RangeStoreServiceFactory`. - make the storage container logic for hosting `StorageContainerService`. - Each storage container will run an inprogress grpc server for serving the grpc services registered to the container and provide an `channel` for accessing those grpc service. - Changed the server to use reverse proxy for serving/proxying storage container requests.  *NOTE*  This change doesn't directly remove `StorageContainerRequest` and `StorageContainerResponse`.  It would be done in a subsequent change.  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1448 from sijie/storage_container_channel
2018-05-28T05:57:22Z,1447,Include stream modules in bookkeeper distributions only when `-Dstream` is specified  Descriptions of the changes in this PR:  *Motivation*  stream modules are only built when `-Dstream` is specified. so if we want to include binary distribution  `-Dstream` is needed. This updates those modules with profiles that enabled when `-Dstream` is specified.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1447 from sijie/fix_stream_module
2018-05-28T05:56:33Z,1446,Add printreplicationworkerid option to ListUnderreplicatedCmd.  Descriptions of the changes in this PR:  Add printreplicationworkerid option to ListUnderreplicatedCmd. This helps in knowing who is holding lock on UnderReplicated ledger  and diagnosing that ReplicationWorker if we are seeing any issues in rereplication.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1446 from reddycharan/printreplicationworkerid
2018-05-26T03:52:50Z,1440,[TABLE] mark TableClientTest & TableClientSimpleTest as FlakyTest  Descriptions of the changes in this PR:  *Motivation*  These two integration tests are flaky on shutting down. Mark them as `FlakyTest` to make CI stable while investigating the issue.  *Changes*  Move `FlakyTest` annotation from bookkeeper-server test jar to bookkeeper-common test jar. So it can be used across multiple modules.  At the same time  remove redundant `FlakyTest` annotation at distributedlog-core module.  Related Issue: #1440  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1445 from sijie/mark_two_integration_tests_as_flaky
2018-05-25T22:02:03Z,1844,Update bookkeeper dependencies : netty/protobuf/grpc  Descriptions of the changes in this PR:  *Motivation*  The netty version in bookkeeper is a bit dated than the version in pulsar. Hence the grpc version is limited to the version that use same netty version. It causes issues at pulsar using bookkeeper  because pulsar has been using a newer version for longer time. This causes conflicts when pulsar client and grpc are used together without proper shading.  *Solution*  Upgrade netty/protobuf/grpc dependencies.  - update netty from `4.1.12` to `4.1.22`  which is the one grpc is using and closer to the one that pulsar is using. - update grpc from `1.5.0` to `1.12.0`  which is using netty `4.1.22` and protobuf `3.5.1`. - update protobuf from `3.4.0` to `3.5.1`  Related Issue: apache/pulsar#1844  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1441 from sijie/bump_grpc_version
2018-05-25T18:10:22Z,1420,Provide the flag to allow ignoring startup failures on loading extra server components  Descriptions of the changes in this PR:  Addressed the comments in apache/bookkeeper#1420  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1426 from sijie/flag_to_allow_silent_failures
2018-05-25T17:52:13Z,1442,ISSUE #1442: Assembly descriptor contains a filesystem-root relative reference '/'  Descriptions of the changes in this PR:  *Motivation*  Warnings on buidling bookkeeper dist packages. See #1442.  *Solution*  Remove "/" from the relative reference.  See https://lonelycoding.com/maven-assembly-plugin-warning-the-assembly-descriptor-contains-a-filesystem-root-relative-reference/ for details.  Master Issue: #1442  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1443 from sijie/address_assembly_warnings  closes #1442
2018-05-25T17:49:57Z,1435,Fix checkstyle warnings  Descriptions of the changes in this PR:  *Motivation*  There were two concurrent PRs merged at the same time.  apache/bookkeeper#1435 (checkstyle changes) was merged before apache/bookkeeper#1430. so checkstyle warnings introduced by apache/bookkeeper#1430 were not caught by any CI jobs.  *Solution*  Address the checkstyle warnings introduced by apache/bookkeeper#1430  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1444 from sijie/fix_checkstyle_issue
2018-05-25T08:02:06Z,1428,[TABLE SERVICE] client interceptor and storage container grpc proxy  Descriptions of the changes in this PR:  This is a subsequent change after apache/bookkeeper#1428.  *Motivation*  Current almost every grpc requests are wrapped into `StorageContainerRequest` and their responses are wrapped into `StorageContainerResponse`. It makes things a bit complicated on adding new grpc services.  *Changes*  To simplify things  this PR introduces two functionalities for simplifying dispatching container requests/responses.  1) *StorageContainerClientInterceptor*: A grpc `ClientInterceptor` that stamps container information (currently is `scId`) into the requests' metadata before sending the requests to the wire.  2) A simple grpc reverse proxy to dispatch grpc requests to the channels provided by a `ChannelFinder`.  *Tests*  1. Existing unit tests covered client interceptor changes. 2. Introduced a `stream-storage-tests-common` module to include common classes that would be used for testing. 3. Introduced a `PingPongService` for testing reverse proxy : unary/client-streaming/server-streaming/bidi-streaming.  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1430 from sijie/interceptor_container_requests
2018-05-25T07:58:26Z,1434,Issue #1434: Checkstyle is not executed at some modules  Descriptions of the changes in this PR:  *Motivation*  Checkstyle was supposed to run at `validate` phase for every modules. However checkstyle is not running at some modules. This introduces inconsistency between modules.  *Changes*  - Fix Checkstyle warnings. - Remove `checkstyle` plugins from modules  only leave it at root pom file or modules that have overrides. This improves default build time. - Add `checkstyle:check` to CI jobs.  *NOTES*  `microbenchmarks` has too many checkstyle volations. so skip checkstyle for this PR.  Master Issue: #1434  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1435 from sijie/checkstyle_tests  closes #1434
2018-05-24T22:48:59Z,1437,Use maven-exec-plugin to get the maven project version for CI jobs  Descriptions of the changes in this PR:  *Motivation*  The current approach to get project version isn't reliable on CI environment. It might have garbage output (e.g. exceptions).  *Solution*  Changed to use `exec-maven-plugin` to echo `${project.vesion}`. It provides a more reliable approach to get version on CI environments.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1437 from sijie/fix_getversion_problem
2018-05-24T22:45:47Z,1438,ISSUE #1438: BookKeeperVerifierMain: fix typo for drain_timeout argument  (bug W-5025785) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1439 from athanatos/forupstream/wip-1438  closes #1438
2018-05-24T15:36:11Z,1432,Allow overriding `redirectTestOutputToFile` with environment settings  Descriptions of the changes in this PR:  Some modules (e.g. `tests/integration`) are allowed to override `redirectTestOutputToFile` behavior; while some are disallowed.  This PR is to make all modules are allowed to override that setting.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1432 from sijie/make_redirectTestOutputToFile_configurable
2018-05-24T15:35:33Z,1401,Exclude `.vagrant` from apache-rat:check  Descriptions of the changes in this PR:  *Motivation*  apache/bookkeeper#1401 provides a `Vagrantfile` for running integration tests on linux vm. A `.vagrant` directory will be left under `dev` directory  which it will fail `apache-rat:check`.  *Solution*  Exclude `.vagrant` directory from apache-rat check  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1431 from sijie/fix_apache_rat_check
2018-05-23T22:42:02Z,1422,Fix bookkeeper post commit CI  Descriptions of the changes in this PR:  *Motivation*  apache/bookkeeper#1422 includes stream storage integration tests in tests/integration. so we need to include `-Dstream` on building the tests.  *Solution*  Update the bookkeeper post commit CI jobs to include `-Dstream`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1429 from sijie/fix_post_commit_ci
2018-05-23T17:56:58Z,1205,[TABLE SERVICE] Move grpc services from server module to storage module  Descriptions of the changes in this PR:  *Motivation*  Current almost every grpc requests are wrapped into `StorageContainerRequest` and their responses are wrapped into `StorageContainerResponse`. It makes things a bit complicated on adding new grpc services.  To simplify things  we can use grpc ClientInterceptor to stamp container information (e.g. scId) into the request metadata and write a grpc service registry to take the container information from request metadata and dispatch requests to containers.  In order to achieve it  we need to move the grpc services to storage container.  *Solution*  This PR moves grpc services from server module to storage module  so we can simplify the wire protocols.  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1428 from sijie/move_grpc_service_to_storage
2018-05-23T17:56:04Z,1427,Publish bookkeeper dev image to docker hub  Descriptions of the changes in this PR:  *Motivation*  We built a `bookkeeper-current` image that reflects latest master for integration tests. However currently we don't publish this docker image to any docker registry. So it is inconvenient to test latest master in dockerized environments.  *Solution*  - Add a dev script to publish `bookkeeper-current` image to configured docker registry specified at `DOCKER_REGISTRY` - Update the nightly snapshot job to publish generated `bookkeeper-current` image to docker hub `apachebookkeeper` - Add `bin/standalone` script to use `docker-compose` to launch a 3-nodes bookkeeper cluster locally. The script generates docker-compose.yml and handles mounting local volumes and port forwarding. so developers can use that for quick development.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1427 from sijie/push_current_docker_image
2018-05-23T02:11:16Z,1422,[TABLE SERVICE] Move integration tests under `stream/tests/integration` to `tests/integration/cluster`  Descriptions of the changes in this PR:  The original integration tests were written based a non-dockerized standalone stream cluster. Moved them to use the dockerized integration test framework. So all the integration tests are actually testing the table service run as part of bookies.  This change is based on #1422 . a371ff2 is the change in this PR to be reviewed.  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1423 from sijie/move_more_stream_it_tests
2018-05-23T02:09:08Z,1415,ISSUE #1415: [DLOG] org.apache.distributedlog.fs.TestDLFileSystem fails on CI  Use a generated tempDir for DL FS tests instead of using an hard coded /tmp path  Fix for #1415  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1417 from eolivelli/fix/no-tmpdir-fsdl  closes #1415
2018-05-22T18:43:31Z,1205,[TABLE SERVICE] start table service as an extra component of bookie  Descriptions of the changes in this PR:  *Motivation*  table service was built over bookkeeper ledgers. it is an extension to bookies' functionalities  so it is much convenient to start the service as one additional component with bookie  just like how we start `AutoRecovery` along with bookie.  *Solution*  - include `stream/server` module as part of bookkeeper server/all binary distributions - abstract `StorageServer` to allow controlling whether to start bookie or not - provide a ServerLifecycleComponent of `StorageServer`  so it can be used as an extra component of bookie  *Tests*  - improve the integration tests to start table service as part of bookie containers - move `LocationClientTest` to container based integration tests  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1422 from sijie/start_table_service
2018-05-22T14:05:07Z,853,BP-14 WriteFlag DEFERRED_SYNC Client Side Implementation  Introduce implementation of WriteFlag#DEFERRED_SYNC on LedgerHandle (purely client-side).  Tests are only on the client-side (with Mockito)  there is no implementation on the bookie side. Most significant tests will come with the force() API  at this point we can only test that we have not broken the LAC advance mechanism.  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV)  This closes #853 from eolivelli/bp14-deferred-force-write-client-side
2018-05-22T08:43:46Z,1420,Allow bookie to start if failed to load extra server components  Descriptions of the changes in this PR:  *Motivation*  `extraServerComponents` provides the flexibility to allow bookie to start with extra server components. It acts as a plugin mechanism to extend the functionality of bookies. However it is okay to allow bookie start up when failed to load extra server components.  This is a change for allowing starting table service as extra components in bookies.  *Solution*  Catch the exception and log it when failed to load extra server components.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1420 from sijie/allow_start_bookie
2018-05-22T07:27:46Z,1422,Build stream modules for integration tests  Descriptions of the changes in this PR:  *Motivation*  apache/bookkeeper#1422 adds table service as part of integration tests. so we need to build stream modules in order to run integration tests for apache/bookkeeper#1422  *Solution*  Add "-Dstream" in the maven commands for `precommit-integrationtests` CI job.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1424 from sijie/compile_stream_module
2018-05-22T05:39:40Z,1421,Provide a util method to run functions with metadata client driver  Descriptions of the changes in this PR:  *Motivation*  Currently `MetadataDrivers` provides util methods to run functions with metadata bookie driver. It is convinient to provide a util method to run functions with metadata client driver as well.  *Solution*  Provide a util method `runFunctionWithMetadataClientDriver` to run functions with metadata client driver.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1421 from sijie/utils_to_run_client_driver
2018-05-22T05:38:52Z,1418,Fix dev/check-binary-license on macOS  Descriptions of the changes in this PR:  *Motivation*  `dev/check-binary-license` is used for checking whether LICENSE files are updated to reflect the dependencies included in the distribution packages. However this script doesn't work on macOS  which makes the development on macOS inconvinient.  *Solution*  The change removes `--wildcards` from tar command. The option only works on linux machines.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1418 from sijie/fix_check_license_script_master
2018-05-22T02:02:35Z,570,Issue #570: EntryLogManagerForEntryLogPerLedger implementation  Descriptions of the changes in this PR:  This is < sub-task6  > of Issue #570  introducing EntryLogManagerForEntryLogPerLedger  which is the implementation of EntryLogManager for entrylog per ledger feature.  Master Issue: #570  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Andrey Yegorov <None>  Sijie Guo <sijie@apache.org>  This closes #1391 from reddycharan/entrylogmanagerentrylogperledger  closes #570
2018-05-21T21:54:52Z,1416,Provide zookeeper startup script  Descriptions of the changes in this PR:  *Motivation*  ZooKeeper is a dependency of bookkeeper shipped along with bookkeeper dist package. However we never provide any script to startup zookeeper in the bookkeeper binary package and never test the zookeeper version shipped along with bookkeeper  *Solution*  - add zookeeper in `bin/bookeeper` scripts to start zookeeper using bookkeeper scripts - refactor bookkeeper docker scripts to start bookie/zookeeper/standalone - use zk adminPort for health check  since 4letters commands are explicitly disabled at 3.5  *Tests*  Existing integration tests test the docker scripts and the bash script changes to start zookeeper.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1416 from sijie/package_zookeeper
2018-05-21T21:53:43Z,1397,Bookies should be from different racks in a Writequorum.  Descriptions of the changes in this PR:  Ideally RackAwareEnsemblePlacementPolicy should try to select bookies from different racks for a write quorum. So in a WriteQuorum  bookies should be from WriteQuorum number of racks  provided there are sufficient number of available racks and bookies.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1397 from reddycharan/configracks
2018-05-18T19:49:31Z,1412,Add a docker based `BookKeeperClusterTestBase` for failure related integration tests  Descriptions of the changes in this PR:  *Motivation*  Currently we don't have any failure related testing for table service. Since we are using docker as the integration testing infrastructure  It is better to use container for those failure testings  rather than going down the path as what we did before.  *Solution*  This change provides the basic test base for bookkeeper cluster using dockers. `BookKeeperClusterTestBase` provides the similar functionalities to start/stop bookies as what we did in the unit test.  `bookkeeper/tests/containers` in `integration-tests-topologies` provides all the basic containers used for testing. `tests/integration/cluster` and `tests/integration/topologies` provides the test base for writing tests using dockerized bookkeeper cluster.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1412 from sijie/docker_cluster_dev
2018-05-17T08:39:04Z,1408,Add a test docker image for current version only  Descriptions of the changes in this PR:  *Motivation*  The current test images don't use any scripts that shipped with official docker image. We basically don't have any test coverage on the official docker image we shipped for each release.  *Solution*  Introduce a `bookkeeper-current` image representing an image for latest master.  Use `apachebookkeeper/all-versions-image` for BC tests  use `apachebookkeeper/bookkeeper-current` as tests only needs latest master image.  Add an integration test to test standalone mode using the `bookkeeper-current` image  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1408 from sijie/docker_dev
2018-05-17T08:38:20Z,1405,Issue #1405: ReplicationWorker should back-off retrying.  Descriptions of the changes in this PR:  ReplicationWorker should backoff replication after threshold number of replication failures of a ledger.  Currently ReplicationWorker will do busy retrials if replication is failed for a ledger  instead it should backoff if replication had failed for threshold number of times. This can be done by deferring releasing of underreplicated lock by 'lockReleaseOfFailedLedgerGracePeriod' amount of time.  Master Issue: #1405  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1406 from reddycharan/fixreplicator  closes #1405
2018-05-17T08:37:28Z,1390,ISSUE #1390 Ensemble change on delayed write error  Error on delayed writes are dropped if the addEntry is in complete state (ack quorum satisfied). This change records the delayed write failure and forces ensemble change onthe next write. This saves from having extended under replicated status on the ledger and also avoids unnecessary build up at PCBC channel.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Descriptions of the changes in this PR:  (PR description content here)...  Master Issue: #<master-issue-number>  Author: JV Jujjuri <vjujjuri@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1395 from jvrao/bk-issue-1390-delayedWriteError  closes #1390
2018-05-17T04:00:42Z,1407,Refactor bookkeeper bash scripts and move dlog script to root bin directory  Descriptions of the changes in this PR:  *Motivation*  Since 4.7  we have moved bash scripts and configuration to the root directory. However the scripts and configurations for dlog and table-service modules are still in their own modules. It is inconvenient and confusing. This change mainly refactor current bookkeeper script to make it reusable for other modules.  *Code Change*  The main changes are:  - abstract the common logic in `bin/bookkeeper` to `bin/common.sh`. These common logics include:    * common definitions on environment variables  such jvm settings  bk conf  log4j conf  classpath and such.    * common functions can be reusable  such as find jars  add maven dependencies. - simplify `bin/bookkeeper` and `bin/bookkeeper-cli` by reusing `bin/common.sh` - remove `stream/distributedlog/core/bin/dlog` to `bin/dlog` and simplify it by reusing `bin/common.sh`  *Tests*  Most of the changes in this PR are tests to ensure this script refactor is done correctly.  - introduced a module `tests/scripts` for testing all the bash scripts in bookkeeper project. This module uses [shUnit2](https://github.com/kward/shunit2) for testing bash scripts. This gives a good test coverage on `bin/common.sh`.  - add a few CLI smoketests under `tests/integration/smoke` to smoke test all CLI tools  including `bin/bookkeeper shell`  `bin/bookkeeper-cli` and `bin/dlog`. This makes sure all the CLI scripts work well after refactor.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1407 from sijie/include_dlog_library
2018-05-15T18:12:54Z,1403,ISSUE #1403: ArrayIndexOutOfBoundsException is thrown on readLastAddConfirmedAndEntry  Descriptions of the changes in this PR:  *Motivation*  There are two bugs in `ReadLastAddConfirmedAndEntry`:  1) a regression was introduced by #657. the long poll read op is attempting to long-poll reading lac. since lac is stored across ensemble  so the retry logic assumes it will attempt over all the bookies in the ensemble. however #657 use a `write-quorum-size` write set for tracking those attempts. this leads to ArrayIndexOutOfBoundsException reported at #1403. The integrate tests added in this PR can easily reproduce this issue.  2) there was a bug on retry logic when a ledger whose ensemble size is larger than write quorum size. when this happens  it will claim lac is not advanced prior to attempt the bookie in the ensemble. so the client will never know lac is advanced if using long poll reads on such ledgers. The integrate tests added in this PR can also catch this issue.  disclaim: twitter uses long poll reads but never uses `ensembleSize > writeQuorumSize`. so this is not a problem for dlog users.  *Solution*  - introduce a `getWriteSetForLongPoll` call that uses `ensembleSize` for building the write set. this would address problem 1) - fix the assignment of `numEmptyResponsesAllowed`  so the long poll reads can work with `ensembleSize > writeQuorumSize` - add integration tests for long polling reads  at the same time  also add an integration test for normal tailing reads with  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1404 from sijie/longpoll_tests  closes #1403
2018-05-15T11:55:36Z,1371,Use isEmpty method instead of size check  In HTTP ListLedgerService use is Empty instead of size check.  Author: Ali Ahmed <alahmed.se@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1371 from aahmed-se/minorRefactor
2018-05-14T20:03:54Z,1396,Issue #1396: Export metrics in same http server  Descriptions of the changes in this PR:  *Motivation*  Currently metrics provider and http admin endpoint are isolated due to the way how things are modularized. This requires two ports to be used  one is for metrics provider to expose metrics  while the other one is used by http admin endpoint for expose admin endpoints.  When implementing a bookkeeper operator on k8s  it becomes confusing on managing those ports and do health checks. It would be good to allow export metrics in same http admin endpoint if it is enabled.  *Solution*  - Introduce a method `writeAllMetrics` in stats provider to allow stats provider exporting metrics. - Add a `MetricsService` in bookie http service and export stats provider's metrics under `/metrics` endpoint.  This fixes #1396  Master Issue: #1396  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1399 from sijie/same_http_metrics_port  closes #1396
2018-05-14T06:16:22Z,1393,BP-14 forceLedger wire protocol server side implementation  Implementation of the wire protocol for the BP-14 force ledger API on bookie side  Author: Enrico Olivelli <eolivelli@apache.org> Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>   Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>  This closes #1393 from eolivelli/bp14-simple-force-ledger-proto
2018-05-12T11:32:57Z,1402,Fix TestSmoke#testTailingReads  Descriptions of the changes in this PR:  *Motivation*  TestSmoke#testTailingReads is testing the tailing behavior at bookkeeper. However the current testing logic is a bit problematic on checking whether the reader has caught up with the expected last add confirmed. so the read logic break earlier before reading the expectedLastConfirmedEntry.  *Solution*  Fix the checking logic on breaking the read loop.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1402 from sijie/fix_integration_tests
2018-05-12T06:45:25Z,1401,Provide a vagrantfile to launch a linux vm for running integration tests  Descriptions of the changes in this PR:  *Motivation*  Currently all bookkeeper's integration tests and bc tests are docker based and written using arquillian framework. Due to the network issues in docker and the way how bookies advertise themselves in the cluster  we can *ONLY* run integration tests in a linux environment. It is inconvinient to people who is using macOS as the development environment.  *Solution*  This PR is providing a Vagrantfile to lanuch a dev vm that contains all the tools required for running integration tests and bc tests. So people can actually debug and test integration tests locally using a linux vm.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1401 from sijie/vagrant_files
2018-05-12T03:13:29Z,1339,ISSUE #1339: Cleanup the directories created by DbLedgerStorageTest  Descriptions of the changes in this PR:    Cleaned up the directories `dir1` and `dir2` left behind by the test `DbLedgerStorageTest`  Master Issue: #1339  Author: arunlakshman <arunmuthuravi@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1398 from arunlakshman/issue1339  closes #1339
2018-05-08T09:21:41Z,1375,BP14 - forceLedger bookie side implementation  This is the bookie side implementation of the force() API as defined in BP-14  without the wire protocol handler. We will introduce a new RPC which allows the client to ensure that all data sent for a  given ledger is persisted durably to the bookie  this is useful for DEFERRED_SYNC writers. In this case we are simulating a regular sync'd write to the journal choosen for the ledger.  Author: Enrico Olivelli <eolivelli@apache.org> Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  JV Jujjuri <vjujjuri@salesforce.com>  This closes #1375 from eolivelli/bp14-simple-forceledger
2018-05-07T08:50:29Z,1392,[TABLE SERVICE] a zk based storage container controller  Descriptions of the changes in this PR:  *Motivation*  The original storage container "controller" was written in helix. The helix controller's placement is kind of not assuming any properties of shared storage. however the table service is leverage bookkeeper's as its segment/log store. the table service is built in a more `stateless` way  where a storage container can be moved between servers in a much lightweight way.  Also helix codebase is a bit large  if we eventually going to eliminate zookeeper  the cost of switching it off helix will be much expensive. so this PR is introducing a simple zk based controller for assigning storage containers to servers.  *Solution*  In this zk base solution  it is comprised of 3 parts: server registration  cluster & storage controller  storage container manager.  **registration**  this solution leverages existing registration client/manager interfaces. so each storage server registers itself under `/stream/servers/available`.  **cluster & storage controller**  A storage server is elected as a the leader  which runs a ClusterController. The cluster controller reads cluster metadata from zookeeper (the cluster metadata includes like how many containers available in the cluster)  and use a storage controller to compute an assignment plan as the ideal state for container assignment mapping  and then update the assignment mapping to zookeeper under `/stream/assignment`.  **storage container manager**  Each storage server runs a storage container manager  which watches the assignment plan in zookeeper. The cluster controller updates the assignment plan. Once it receives watches/updates from the assignment plan that computed by cluster controller  the storage container manager will align itself to the ideal assignment map by starting/stopping storage containers.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1392 from sijie/table_service_manager
2018-05-07T08:46:30Z,1394,Enable Prometheus stats provider to use custom http container  This change enable Prometheus stats provider to: - use an user supplied registry - do not start internal Jetty server  The context is to run the Bookie inside a process together with a servlet container (like Apache Tomcat) and use the existing web endpoint instead of opening another http (plain) port  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1394 from eolivelli/prom-use-servlet
2018-05-06T12:06:24Z,1389,Add smoke tests for LedgerHandleAdv and TailingReads  Descriptions of the changes in this PR:  Add two tests:  - basic writes/reads with LedgerHandleAdv - tailing reads with LedgerHandle  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1389 from sijie/more_integration_tests
2018-05-04T02:09:15Z,1373,Make bookie state manager & registration manager reusable outside of bookie  Descriptions of the changes in this PR:  *Motivation*  Since 4.6.0  we have already abstracted a pretty good interfaces around registration service and state management. Most of the classes can actually be reused for use cases that have similar service discovery and writable/readonly state transition management.  *Solution*  The change is try to cleanup `BookieStateManager` and `ZKRegistrationManager` to make them more generic and can be reused for other usage.  *Result*  Registration Interfaces and StateManager can be used outside of bookie.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1373 from sijie/refactor_bookie_state_manager
2018-05-04T02:08:35Z,1378,[TABLE SERVICE] [DLOG] Fix `ConcurrentModificationException` on accessing component configuration  Descriptions of the changes in this PR:  *Motiviation*  Currently when running table service in standalone mode  it occasionally throws `ConcurrentModificationException`. Because multiple components are sharing same underlying composite configuration. It causes the contention between copying keys and retrieving keys.  *Solution*  Change the component configuration to use a concurrent hashmap based configuration. Also changed the `loadConf` behavior to copy the keys / sub-keys into the component configuration. This prevents components sharing same underlying composite configuration.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1378 from sijie/fix_conf
2018-05-04T02:07:27Z,1387,ISSUE #1387: added unit test for LedgerHandleAdv handling of attempts to use LedgerHandle's specific API calls (add without specifying entry id)  Descriptions of the changes in this PR:  - added unit test.  Master Issue: #1387  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1388 from dlg99/fix/ISSUE-1387_LedgerHandleAdv_with_nonAdv_usage  closes #1387
2018-05-03T22:49:30Z,1365,Refactor EntryLogger class  Descriptions of the changes in this PR:  - Split EntryLogger class into multiple classes. - create separate classes for EntryLogManager  EntryLoggerAllocator and EntryLogManagerForSingleEntryLog.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1365 from reddycharan/refactorentrylogger
2018-05-03T22:47:46Z,1352,Fix TestCompatUpgrade  Descriptions of the changes in this PR:  *Motivation*   #1352 update the BC tests to include newer versions  however it removes the flags that used for 4.6.0 to handle badly shutdown.  This change makes the BC tests become very flaky.  *Solution*  - apply `badlyshutdown` flag to both from 4.6.0 to 4.6.1 and from 4.6.1 to 4.6.2 upgrade  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #1386 from sijie/vagrant_files
2018-05-03T19:31:34Z,1383,Fix format problem of BP-32  Also mark BP-32 as accepted.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1383 from sijie/fix_typos
2018-05-03T19:30:54Z,1384,ISSUE #1384: Bump checkstyle version  Descriptions of the changes in this PR:  *Motivation*  mvn build fails on a centos/7 box. Exceptions are thrown as below:  ``` [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (checkstyle) on project circe-checksum: Execution checkstyle of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check failed: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check: java.lang.NoSuchMethodError: org.slf4j.spi.LocationAwareLogger.log(Lorg/slf4j/Marker;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V ```  *Solution*  The problem was addressed in https://issues.apache.org/jira/browse/MCHECKSTYLE-335. We need to bump the checkstyle plugin version to `3.0.0`  Master Issue: #1384  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1385 from sijie/vagrant_files  closes #1384
2018-05-03T06:38:10Z,1382,ZKLedgerManager.writeLedgerMetadata should return appropriate error.  Descriptions of the changes in this PR:  ZKLedgerManager.writeLedgerMetadata should return NoSuchLedgerExistsException error in the case it gets KeeperException.Code.NONODE rc value from ZK. ZKLedgerManager.removeLedgerMetadata does that as well.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1382 from reddycharan/abstractzkledgermanagerissue
2018-05-03T04:19:42Z,1379,[TABLE SERVICE] apply backoff policy to rpc requests if storage container is not found  Descriptions of the changes in this PR:  *Motivation*  A storage container can move between servers due to failures  or it can take time to start on a server. During that short period of time  it is "unavailable" and clients will receive `Status.NOT_FOUND` from grpc channels. The client should retry on this error and attempt to re-locate the storage container again.  *Modification*  - add backoff policy in client settings - apply the backoff policy at storage container channel. if it receives `NOT_FOUND` grpc exception  it will reset the server channel  so subsequent requests will re-attempt to relocate the storage container.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1379 from sijie/rpc_backoffs
2018-05-03T03:59:04Z,1343,BP-32: Advisory (optimistic) write close  Descriptions of the changes in this PR:  initial proposal for Advisory (optimisitic) write close  Master Issue: #1343  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1374 from reddycharan/advwriteclosebp
2018-04-30T23:29:08Z,1372,OrderedScheduler#chooseThread(key) handle null key  Descriptions of the changes in this PR:  *Motivation*  It is more convenient if OrderedScheduler#chooseThread(key) can handle null key. so the applications who is using #chooseThread don't need to worry which method to choose - `chooseThread()` vs `chooseThread(key)`.  *Solution*  in `chooseThread(key)`  fallback to randomly pickup a thread if key is null.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1372 from sijie/order_scheduler_null_key
2018-04-27T23:33:49Z,570,Issue #570: Introduce EntryMemTableWithParallelFlusher  Descriptions of the changes in this PR:  This is < sub-task4  > of Issue #570  When there is going to be entrylog per ledger  then for better utilizing the availability of multiple entrylogs  parallel flush of entrymemtable can be done. In this sub-task EntryMemTableWithParallelFlusher is introduced  which uses OrderedExecutor with "numOfMemtableFlushThreads" number of threads.  Master Issue: #570  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1358 from reddycharan/memtableparallel  closes #570
2018-04-27T03:12:47Z,1086,ISSUE #1086 (@bug W-4146427@) Client-side backpressure in netty (Fixes: io.netty.util.internal.OutOfDirectMemoryError under continuous heavy load) (#1088)  * ISSUE #1086 (@bug W-4146427@) Client-side backpressure in netty (Fixes: io.netty.util.internal.OutOfDirectMemoryError under continuous heavy load)
2018-04-25T09:13:28Z,1366,[TABLE SERVICE] Dlog based checkpoint store  *Motivation*  Currently the table range stores are using local filesystem as a checkpoint store. It is okay for running as standalone mode. But it doesn't work to run in a distributed mode. This change is introducing a dlog based checkpoint store to make sure all the sst files of table ranges are durably checkpointed into bookkeeper itself.  *Solution*  Introduced a dlog based checkpoint store.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1366 from sijie/dlog_checkpoint_manager
2018-04-25T09:11:46Z,1345,Issue #1345: entrylogger.flush should flush currentlog first.  Descriptions of the changes in this PR:  It is incorrect to call flushrotatedlogs first and then flushcurrentlogs in the EntryLogger (EntryLogManager) flush method. It should be other way around.  Master Issue: #1345  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1360 from reddycharan/elmflushorder  closes #1345
2018-04-25T09:09:36Z,1363,Issue #1363: Fast and Garbage-Free Codahale Statistics Timers  This change introduces a new Codahale-based metrics provider "FastCodahaleMetricsProvider" in the codahale-metrics-provider artifact  which can be activated through the "statsProviderClass" config parameter (no changes made to the existing "CodahaleMetricsProvider"). This new "FastCodahaleMetricsProvider" brings a new timer implementation "FastTimer"  which extends Codahale's Timer class  provides an identical API  is registered in Codahale's timer registry  and can be queried through the existing JettyServices implementation. FastTimer provides similar functionality as Codahale's default timer  but is significantly faster and (nearly) garbage free.  The improvements of FastTimer over Codahale default Timer with ExponentiallyDecayingReservoirs are: * entirely garbage-free Timer updates (only snapshot creations when querying a timer allocate a small number of Java objects) * 3x faster Timer updates (i.e. 3x shorter code-path to update a timer) * half the memory footprint (in default configuration)  FastTimer reduces GC pause times in our experiments as described in Issue 1363 by half (same as entirely deactivating all timers).  The primary functional differences between FastTimer and Codahale default Timer with ExponentiallyDecayingReservoirs are: * FastTimer keeps values for a fixed  configurable time period (default: 60 seconds) rather than exponentially decaying them * FastTimer bucketizes event times rather than storing discrete values. Percentile values depend on the bucket resolution.  Design Considerations ---------------------  The design goals of this timer implementation are for it to be  - fast (i.e. few instructions to update a timer)  - scalable (i.e. little synchronization cost for concurrent timer updates)  - garbage-free for timer updates (i.e. no object allocation for timer updates)  - space-efficient (i.e. as little memory footprint as possible while achieving first three goals)  - provide similar functionality as Codahale's default timers with ExponentiallyDecayingReservoirs  This implementation provides rate and response times over a configurable sliding time window. Data is stored in upfront allocated circular arrays  in which each array element holds data for one second. Data is overwritten in a circular fashion without the allocation of new data structures and is therefore garbage-free for all timer updates.  This implementation does not store individual response times  but instead allocates bucketized counters upfront  which are incremented for any event falling into a particular response time bucket. A fine-grained bucket definition (intended for capturing successsful events) and a coarse-grained bucket definition (intended to capture failure or timed-out events) are provided.  To improve scalability of concurrent timer updates  most data structures are replicated HASH_SIZE times  and calling threads updating a timer are hashed to individual instances. Performance tests (see below) have shown that this implementation is light-weight enough to achieve slightly better scalability than Codahale's default timers even without hashing  and can further improve scalability if hashing is used.  Trading off performance and scalability vs. memory footprint  we need to be conservative in the hash size we chose. Different flavors of this timer implementation have been evaluated using JMH micro-benchmarks (see microbenchmarks/src/main/java/org/apache/bookkeeper/stats/TimerBenchmark.java)  comparing implementations of FastTimer with a time window of 60 seconds and - (DEV1)   a HASH_SIZE of 3 for all data structures (meters  counters  min/max  and response time buckets) - (DEV2)   a HASH_SIZE of 1 for all data structures (meters  counters  min/max  and response time buckets) - (FINAL)  a HASH_SIZE of 3 for meters  counters  min/max  and no hashing for response time buckets to the default timer implementation - (BASE-E) Codahale Timer with ExponentiallyDecayingReservoir (default as used by bookkeeper code) - (BASE-T) Codahale Timer with SlidingTimeWindowReservoir configured to 60 seconds - (BASE-S) Codahale Timer with SlidingWindowReservoir configured to hold 100 000 events.  Based on results below  implementation (FINAL) was chosen as the final FastTimer implementation  as it achieves nearly the same throughput as (DEV1) at nearly the same memory footprint as (DEV2)  and ultimately achieves roughly 3x higher throughput and scalability that Codahale's default implementation at around half the memory footprint.  The following results have been collected on an eight core x86 server running at 3.2 GHz (updated timers are shared across 4 threads):  ``` Config   Timer Impl             Timers   Threads      ops/ms   Alloc B/op   Kb/TimerPair ----------------------------------------------------------------------------------------  DEV1    FastTimer (Hash 3)          1         4   11487.904        0                253  DEV1    FastTimer (Hash 3)         10         4   22621.702        0                253  DEV1    FastTimer (Hash 3)        100         4   21781.319        0                253  DEV2    FastTimer (Hash 1)          1         4    5138.143        0                 88  DEV2    FastTimer (Hash 1)         10         4   22902.195        0                 88  DEV2    FastTimer (Hash 1)        100         4   19173.085        0                 88  FINAL   FastTimer (Hash 3/1)        1         4    9291.002        0                 99  FINAL   FastTimer (Hash 3/1)       10         4   16379.940        0                 99  FINAL   FastTimer (Hash 3/1)      100         4   16751.020        0                 99  BASE-E  CodahaleTimer               1         4    3845.187       82.609            189  BASE-E  CodahaleTimer              10         4    7262.445       35.035            189  BASE-E  CodahaleTimer             100         4    7051.77        32.843            189  BASE-T  CodahaleTimer/TimeWindow    1         4     102.479       90.851            174  BASE-T  CodahaleTimer/TimeWindow   10         4      68.852       84.812            174  BASE-T  CodahaleTimer/TimeWindow  100         4     153.444      136.436            174  BASE-S  CodahaleTimer/SlidingWdw    1         4    4670.543        0               2103  BASE-S  CodahaleTimer/SlidingWdw   10         4   13696.168        0               2103  BASE-S  CodahaleTimer/SlidingWdw  100         4   12541.936        0               2103 ```  - ops/ms is the number of timer updates per millisecond. - Alloc B/op is the number of bytes allocated per timer update - Kb/TimerPair is the heap footprint per pair of timers (one with fine-grained  one with coarse-grained buckets)  The following test results include snapshot creation every 109 timer updates (typically  we would assume snapshot creation to be much less frequent)  and show that also with snapshots in the mix  FastTimer outperforms Codahale default Timers both with respect to throughput and scalability as well as object allocation:  ``` Config   Timer Impl             Timers   Threads      ops/ms   Alloc B/op -------------------------------------------------------------------------  FINAL   FastTimer (Hash 3/1)        1         4    1569.953       23.707  FINAL   FastTimer (Hash 3/1)       10         4    7316.794       24.073  FINAL   FastTimer (Hash 3/1)      100         4    6498.215       24.073  BASE-E  CodahaleTimer               1         4     246.953      481.771  BASE-E  CodahaleTimer              10         4    1989.134      476.807  BASE-E  CodahaleTimer             100         4    1514.729      468.624  BASE-T  CodahaleTimer/TimeWindow    1         4       6.063    43795.810  BASE-T  CodahaleTimer/TimeWindow   10         4      44.651    33916.315  BASE-T  CodahaleTimer/TimeWindow  100         4     180.431    12330.939  BASE-S  CodahaleTimer/SlidingWdw    1         4      17.439    14683.756  BASE-S  CodahaleTimer/SlidingWdw   10         4     107.257    14683.745  BASE-S  CodahaleTimer/SlidingWdw  100         4     236.538     9767.106 ```  Unfortunately Codahale does not have a Timer interface we can implement  and some Codahale base classes are assuming instances of Timer (for example  our JettyServices instantiate a Codahale MetricsServlet  which instantiates a Codahale MetricsModule  which only serializes timers that are instances of Timer class into the json output stream). Unless we wanted to reimplement or override all these base classes  we can't just implement Codahale's Metered and Sampling interfaces. Instead we have to extend its Timer class  even though we're not using any of its inherited functionality or data structures. The inherited (unused) member variables of Codahale Timer consume slightly less than 512 byte per FastTimer (measured around 425 byte in Codahale 3.1). Above memory footprint results include ~ 1 kb of inherited (unused) data structures  which comprise around 1% of FastTimer's overall memory footprint.  In terms of functionality  FastTimer provides the same functionality as Codahale's timers (in default configuration with ExponentiallyDecayingReservoirs)  with the following exceptions: - Statistics are kept for a fixed amount of time (rather than exponentially decayed)  by   default 60 seconds. As a consequence  getMeanRate()  getOneMinuteRate()   getFiveMinuteRate()   and getFifteenMinuteRate() all return the same value if FastTimer is configured to use a   60 second time window. - FastTimer and FastSnapshot only record bucketized instead of discrete response times. As a   consequence  the accuracy of percentiles depends on bucket granularity. FastSnapshot also   can't return discrete values: getValues() returns an empty array  and size returns 0.  Author: Nicolas Michael <nmichael@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1364 from nicmichael/FastTimer  closes #1363
2018-04-24T10:17:32Z,791,Issue #791: Eliminate byte[] copies in AddEntry code path  The AddEntry code path in Bookkeeper Client performs several copies of the send buffer before sending it out to bookies  which not only costs CPU cycles for array copying  but also drives up object allocation rate and thus increases young GC frequency.  Currently  the send buffer is prepared by DigestManager.computeDigestAndPackageForSending()  which wraps the netty ByteBuf containing the data together with a (direct) header buffer into a ByteBufList. So far  we haven't yet allocated or copied any new buffers. But in order to send the buffer to the bookies  PendingAddOp.safeRun() will invoke sendWriteRequest() for each bookie in the write set  which will eventually invoke PerChannelBookieClient.addEntry() for each bookie. In here  we are now allocating two new byte[] and copying the buffer twice per bookie for V3 protocol with protobuf:     byte[] toSendArray = toSend.toArray();      // 1st byte[] allocation and copy     .setBody(ByteString.copyFrom(toSendArray)); // 2nd byte[] allocation and copy If for example we're using a write set size of 3  then we allocate 6 byte arrays and copy the same buffer 6 times.  All 6 copies can be eliminated if DigestManager.computeDigestAndPackageForSending() would return a ByteBuf (or ByteBufList) that is backed by an array  which we can access and use without further copying it. PerChannelBookieClient.addEntry() could then wrap this array into a protobuf ByteString without performing any additional copies.  This change eliminates all byte[] allocations and copies in PCBC by: 1. allocating a new (pooled) array-backed heap ByteBuf for header  digest  and data in DigestManager.computeDigestAndPackageForSending() 2. copying the data payload into this newly allocated ByteBuf and returning it wrapped into a ByteBufList of size 1 (instead of header + body separately) 3. enhancing ByteBufList to give access to the underlying array if it consists of only a single ByteBuf that's backed by an array 4. extracting the underlying array in PerChannelBookieClient.addEntry() from ByteBufList and wrapping it into protobuf ByteString without copying it.  With this change  no more object allocations are required in this code path. DigestManager uses a pooled array (1). We're adding one arraycopy in (2) compared to the original code path  trading this against the allocations and copies we save later on.. Later steps  in particular step (4)  is free of object allocation and array copies. As a result  the object allocation rate in the AddEntry code path is reduced significantly. In case of a write set size of 3  it is reduced from 6 to 0. This translates into much less frequent young generation garbage collections (in my experiments with write-heavy workload by ~4x overall).  Author: Nicolas Michael <nmichael@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1361 from nicmichael/AddEntryNoCopy  closes #791
2018-04-24T05:38:17Z,1352,[RELEASE-4.7.0] update BC tests  Descriptions of the changes in this PR:  add 4.6.2 and 4.7.0 to BC tests list  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1352 from sijie/update_bc_tests
2018-04-24T00:52:05Z,1362,Add config BK_metadataServiceUri for docker  Descriptions of the changes in this PR:  While trying docker in 4.7.0 release  found that the new config parameter `metadataServiceUri` was changing leaked  and docker could not run success. This change add the config `BK_metadataServiceUri` for docker config  and make docker 4.7.0 runs success.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1362 from jiazhai/docker_conf
2018-04-20T08:17:11Z,1359,In EntryLogger.addEntry method  rollLog flag should not be ignored.  In EntryLogger.addEntry method  rollLog flag should not be ignored.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1359 from reddycharan/fixrolllogcall
2018-04-19T07:09:12Z,1246,ISSUE #1246: Scripting the whole release procedure  Descriptions of the changes in this PR:  *Motivation*  Releasing bookkeeper becomes tricky after introducing `circe-checksum`  since we need to ensure linux jni library is shipped as part of `circe-checksum`.  *Solution*  - switch to use docker for generating bookkeeper release - scripting the whole release procedure as many as possible  Master Issue: #1246  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1329 from sijie/release_scripts  closes #1246
2018-04-19T07:06:28Z,1353,[RELEASE-4.7.0] add integrationtests CI job for branch-4.7  Descriptions of the changes in this PR:  add integrationtests CI job for branch-4.7  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1353 from sijie/make_it_test_as_postcommit_jobs
2018-04-18T17:32:37Z,1354,ISSUE #1354: Spin-Wait for I/O completion wastes CPU time in BK Client  Issue 1354: Spin-Wait for I/O completion wastes CPU time in BK Client (JDK8)  This bugfix for issue 1354 changes the call of CompletableFuture.get() in SyncCallbackUtils.waitForResult() to CompletableFuture.get(Long.MAX_VALUE  TimeUnit.NANOSECONDS)  which leads to the same behavior  but avoids spinning (and thus reduces CPU consumption) in JDK8.  Author: Nicolas Michael <nmichael@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1355 from nicmichael/FutureNoSpin  closes #1354
2018-04-18T17:30:16Z,570,Issue #570: Introducing EntryLogManager.  Descriptions of the changes in this PR:  Introducing EntryLogManager interface  which abstracts out current activeLogChannel  rotatedLogChannels and corresponding lock for activeLogChannel. The current logic of handling logs is moved to EntryLogManagerForSingleEntryLog class  in the next sub-task EntryLogManagerForEntryLogPerLedger will be introduced. Also there are minor changes to createNewLog logic and leastUnflushedLogId logic.  This is < sub-task5  > of Issue #570  Master Issue: #570  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1281 from reddycharan/entrylogmanager  closes #570
2018-04-17T19:59:41Z,1330,[RELEASE-4.7.0] upgrade guide and release notes  - add upgrade for 4.6.x to 4.7.0 - backfill upgrade guide in old releases - add release notes for 4.7.0 - add 4.7.0 to releases  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1330 from sijie/update_release_notes
2018-04-17T18:41:04Z,1351,[RELEASE-4.7.0] update docker file  Descriptions of the changes in this PR:  update the release version from 4.6.0 to 4.7.0 and its corresponding gpg key  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1351 from sijie/update_docker_file
2018-04-17T06:56:29Z,1342,Provide memory & gc options in bookkeeper script  Descriptions of the changes in this PR:  It is convenient to provide `MEM_OPTS` and `GC_OPTS` in bookkeeper script and bkenv.sh to allow overriding jvm settings through.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1342 from sijie/gc_settings
2018-04-15T22:08:55Z,1341,Update release schedule for 4.8.0  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1341 from sijie/update_release_schedulea
2018-04-15T22:07:38Z,1340,Only check ipv6 binding when /sbin/sysctl exists  Descriptions of the changes in this PR:  *Problem*  If bookkeeper is included in some slim docker images  sysctl might not exists at all. It would fail bookie to start.  *Solution*  Only check ipv6 binding when /sbin/sysctl exists  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1340 from sijie/disable_ipv6_binding
2018-04-13T16:44:13Z,1336,Fallback to use `getZkServers` and `getZkLedgersPath` when resolving from metadata service uri  Descriptions of the changes in this PR:  *Problme*  Dlog tests are failing because dlog is using an external zookeeper client  where both `zkServers` and `metadataServiceUri` are not set on client configuration. It will throw NPE when trying to resolve `zkServers` and `zkLedgersRootPath` from metadata service uri.  *Solution*  Fallback to use deprecated `getZkServers` and `getZkLedgersPath` when metadata service uri is null  Related Issues: #1336  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1338 from sijie/fix_dlog_tests
2018-04-12T23:30:09Z,1335,Use metadata service uri rather than zkServers  Descriptions of the changes in this PR:  *Motivation*  Metadata service uri is introduced as part of BP-29. However most of the tests and tools are still assuming `zkServers`. This causes a problem if people configures `metadataServiceUri`  some of the admin tools don't actually work.  *Solution*  This change changes bookkeeper to use `metadataServiceUri` in all the possible places and provides methods to resolve zkServers and zkLedgersRootPath from metadata service uri. This ensures:  1) if users configure `metadataServiceUri`  all the tools would work properly. 2) if users doesn't configure `metadataServiceUri` and still use `zkServers` and `zkLedgersRootPath`  all the tools would still work.  *Changes*  The main changes are:  - deprecated direct usage of `getZkServers`  `setZkServers`  `getZkLedgersRootPath`  `setZkLedgersRootPath  `getZkAvailablePath` at AbstractConfiguration - provide util methods `resolveZkServers` and `resolverZkLedgersRootPath` in `ZkMetadataDriverBase` for resolving zookeeper specific settings from metadata service uri - change the tools to use `getMetadataServiceUri` - change the tests to use `getMetadataServiceUri` to ensure code coverage  *NOTES*  There are a few places still using `getZkServers`  `setZkServers`. those are hard to change at this moment.  Related Issue: - #1335  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1336 from sijie/fix_local_bookkeeper
2018-04-12T07:14:37Z,1335,Issue #1335: LocalBookKeeper doesn't work with metadata service uri  Descriptions of the changes in this PR:  *Problem*  `"zk+hierarchical://localhost:2181/ledgers"` is invalid because `"` is an invalid character.  *Solution*  Fix the invalid settings in `bk_server.conf`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1337 from sijie/fix_invalid_settings  closes #1335
2018-04-11T09:52:31Z,,[maven-release-plugin] prepare for next development iteration (missing modules)
2018-04-11T05:47:57Z,1328,Create CI jobs for branch-4.7  Descriptions of the changes in this PR:  We need to CI jobs running for subsequent minor releases on branch-4.7.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1328 from sijie/create_ci_job_for_4.7
2018-04-10T19:26:47Z,,[maven-release-plugin] prepare for next development iteration
2018-04-10T19:26:36Z,,[maven-release-plugin] prepare branch branch-4.7
2018-04-10T17:26:12Z,1326,Prepare 4.7.0 release  Descriptions of the changes in this PR:  - copy the current `docs/latest` as `docs/4.7.0` - bump latest development release to 4.8.0 SNAPSHOT release  beside that  also change stable version to 4.6.2 release  NOTE: this change doesn't put 4.7.0 in the menu. will update menu and releases page after 4.7.0 is released  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1326 from sijie/prepare_release_4.7
2018-04-10T11:17:42Z,1327,Update News after release of 4.6.2  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1327 from eolivelli/fix/update-news-462
2018-04-10T09:24:26Z,1325,Update missing configuration settings & missing shell commands  Descriptions of the changes in this PR:  Update missing configuration settings & missing shell commands for preparing 4.7.0 release.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1325 from sijie/update_docs
2018-04-10T07:03:36Z,1324,Remove WriteFlags from public API  Descriptions of the changes in this PR:  `DeferredSync` is not implemented at server side. So remove `withWriteFlags` from builder API.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1324 from sijie/remove_write_flag
2018-04-09T23:01:23Z,1323,Improve "Failed to resolve network location" logging  Descriptions of the changes in this PR:  *Problem*  Rackware/Region-Aware is using a script based DNS resolver for resolving network topology. If the network topology script is not configured  the DNS resolver will return `null` as network location. It results in using `default-rack` as the network location and log "Failed to resolve network location" for each resolution.  *Solution*  If a script file is not provided  throw a runtime exception. So the rackaware/region-aware placement policy can fallback to use the default-rack resolver. It would avoid the logging flood.  *Result*  Before this change  it will log following statement for each DNS resolution:  "Failed to resolve network location".  After this change  it will only log following statement during initialization:  ``` INFO  - [Time-limited test:RackawareEnsemblePlacementPolicyImpl313] - Failed to initialize DNS Resolver org.apache.bookkeeper.net.ScriptBasedMapping  used default subnet resolver. java.lang.RuntimeException: No network topology script is found when using script based DNS resolver.  at org.apache.bookkeeper.net.ScriptBasedMapping$RawScriptBasedMapping.setConf(ScriptBasedMapping.java:150)  at org.apache.bookkeeper.net.ScriptBasedMapping.setConf(ScriptBasedMapping.java:122)  at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.initialize(RackawareEnsemblePlacementPolicyImpl.java:306)  at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.initialize(RackawareEnsemblePlacementPolicyImpl.java:75)  at org.apache.bookkeeper.client.BookKeeper.initializeEnsemblePlacementPolicy(BookKeeper.java:598)  at org.apache.bookkeeper.client.BookKeeper.<init>(BookKeeper.java:490) ```  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1323 from sijie/improve_dns_resolver_logging
2018-04-09T07:34:58Z,1322,Improve logging on ledger dirs monitor to avoid log flooding  Descriptions of the changes in this PR:  *Problem*  When a bookie is in readonly mode  the ledger dirs monitor will keep check the disk usage and generate tons of logs if the disk usage is unchanged. This makes debugging much difficult.  *Solution*  - Improve the logging logic in ledger dirs monitor to only log changes when disk usage is changed. - Disable logging on checking threshold for high priority writes. Only log changes when high priority writes availability is changed.  *Result*  This reduces the logging when a bookie is outage in readonly mode.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Yiming Zang <yzang2016@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1322 from sijie/improve_monitor_logging
2018-04-09T06:50:49Z,1297,Release notes for 4.6.2 version  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1297 from eolivelli/fix/releasenotes462
2018-04-08T18:31:17Z,1289,Allow multiple directories in DbLedgerStorage  In normal conditions  the max throughput that a bookie can sustain is mostly determined by how fast we can write entries on the journal.  If we assume a *very* fast journal  for example using multiple journal threads and setting `journalSyncData=false` or with the journal on a RAM disk (there are some cases in which it might make sense)  then the LedgerStorage becomes the "bottleneck". We need to be able to flush data on disk faster than the incoming rate  otherwise the write cache will get full and then we have to apply backpressure.  In different testing scenario  the bottleneck has become the LedgerStoarge flush/checkpoint because it's done by a single thread.  For smaller entries (1KB) the limit is ~250 K write/s and the limitation is due to preparing a batch with the offsets to write into rocksdb. Each insertion in the batch needs to cross JNI boundaries and that is expensive.  For bigger entries (10KB)  the limit is ~50K write/s (or 500MB /s). This mostly because the single flush thread cannot drive 100% IO utilization on the disks (since it's doing the rest of work). Raw disk writes in that test environment (12 HDDs) could reach 1.4GB/s.  This change is only relative to DbLedgerStorage and it's a simple refactoring that  when configured with multiple directories  it will hash a ledger into a certain directory. Each directory is flushed independently on its own thread.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1289 from merlimat/db-storage-multiple-dirs
2018-04-06T23:39:28Z,1316,ISSUE #1316: A bookie with non-writable dirs should be able to start in readonly mode  Descriptions of the changes in this PR:  *Problem*  Bookie failed to start when it doesn't have non-writable dirs. Issue is reported at #1316  *Solution*  - Introduce a setting `minUsageSizeForEntryLogCreation` to allow creating entry logs even when there is no writable dirs. This setting is replacing `getIsForceGCAllowWhenNoSpace` for creating new log  since entry log files are created not only for gc/compaction. It can also happen on startup and also journal replays.  - Defer creating entry log files until first write happens  when there is no writable ledger dirs.  - add bunch of tests for EntryLog and Bookie initialization.  Master Issue: #1316 Related Issue: #190  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #1319 from sijie/allow_bookie_to_start_with_no_writable_bookies  closes #1316
2018-04-06T18:57:48Z,1321,Avoid contention on netty channel promise  With profiler  I have seen there can be heavy contention between BK threads and Netty IO thread due the the checking for channel write condition that was recently added for monitoring purpose.  The problem relies in that there is one BK thread that is doing the `writeAndFlush()` on the PCBC and getting the `ChannelFuture`  adding a listener to the future.  The write operation  though  is completed in the Netty IO thread and the promise gets also triggered from that thread. So  there is contention between current thread adding the listener and the IO threads completing the promise.  If we add the listener before doing the write on channel  we can avoid the contention. Another option could be to do the write from the Netty IO thread as well.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1321 from merlimat/channel-promise-contention
2018-04-05T21:40:55Z,1318,y  Previously it was not duplicating  so the underlying ByteBuf was being returned to the client  and this was having its reader index modified  which meant that if it was read again  the data could not be read.  By calling duplicate() on the LedgerEntryImpl  the underlying ByteBuf is sliced and retained  so it has a new set of indices. The retention does nothing  as the buffer is unpooled.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1318 from ivankelly/dup-mock
2018-04-05T07:02:59Z,1314,ISSUE #1314: Provide a mechanism to allow high priority writes to readonly bookies  Descriptions of the changes in this PR:  *Problem*  Currently we allow fence requests going through readonly bookies  since fence requests are special read requests. However a ledger can only be sealed after it is successfully recovered. If bookies are in readonly  those recovery writes won't go through.  If there is a bookie outage happened (e.g. all bookies are readonly)  all ledgers are not able to be sealed. It might be good to have a similar setting like minUsableSizeForIndexFileCreation for recovery writes.  This can improve operability during outage.  *Solution*  - add a setting `minUsableSizeForHighPriorityWrites` to allow accepting high priority writes on readonly bookies.  Master Issue: #1314  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1315 from sijie/allow_high_priority_writes  closes #1314
2018-04-05T07:02:06Z,1298,newOpenLedgerOp and ReadHandle implementation for MockBookKeeper  This will allow users of MockBookKeeper to use the new ReadHandle API.  There are two implementations of the ReadHandle interface. One pure  which isn't backed by any production code  and another on MockLedgerHandle which passes through to the pure implementation.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1298 from ivankelly/better-mock
2018-04-05T07:01:23Z,1310,Issue #1310: Filter out body and masterKey from ProcessorV3s  Descriptions of the changes in this PR:  In certain logs instances of ProcessorV3 (for eg WriteEntryProcessorV3) are logged.  Logging entry data and credentials details is not appropriate. Filter out those details  (have to consider other ProcessorV3s as well and testcases to validate this change)  Master Issue: #1310  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1311 from reddycharan/filterlogs  closes #1310
2018-04-04T00:15:32Z,1308,longPollThreadPool can not be null  Descriptions of the changes in this PR:  *Problem*  The long polling logic is built with the assumption that there is a thread pool for scheduling deferred reads. So if people happens to set `numLongPollWorkerThreads` to zero or negative  a null value is passed into long poll requests which causes NPE.  *Solution*  If `numLongPollWorkerThreads` is set to zero or negative  fall back to use read thread pool. If there is no read thread pool  create a thread pool aligned with num processors.  With this change  turn the default value of `long poll threads` to zero. so no additional threads are needed if long poll feature is not used (e.g. at pulsar).  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Yiming Zang <yzang2016@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1308 from sijie/validate_number_long_poll_threads
2018-04-03T20:48:23Z,1304,Issue #1304: in listunderreplicated cmd provide option to print missing replicalist  Descriptions of the changes in this PR:  in listunderreplicated bookieshell command  provide option to print missing replicalist  Master Issue: #1304  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1305 from reddycharan/urlbookies  closes #1304
2018-04-03T20:45:48Z,1313,Upgrade Maven Assembly Plugin to 3.1.0  - upgrade Maven Assembly Plugin because 2.2.1 version has issues about file permissions - explicitly set tarLongFileMode to 'posix' in order to handle user ids with large values  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1313 from eolivelli/upgrade-assembly-master
2018-04-03T20:43:47Z,1294,BK configuration file updates  Descriptions of the changes in this PR:  - Change two default values: `fileInfoCacheInitialCapacity` to 1/4 of openFileLimit() and `journalRemoveFromPageCache` to true. - Fix default values in conf/bk_server.conf to make them consistent with `ServerConfiguration` - Organize the settings into sections for both `conf/bk_server.conf` and `site/_data/config/bk_server.yaml`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1294 from sijie/update_default_values
2018-04-03T03:03:12Z,1309,Refactored OrderedSafeExecutor and OrderedScheduler  As outlined in https://lists.apache.org/thread.html/102383ea42f473f36720637e41af0ee83fc38d9f992736e0d1a7f985%3Cdev.bookkeeper.apache.org%3E  right now `OrderedSafeExecutor` is implemented on top of `OrderedScheduler`.  There are few problems with this approach that are causing impact on performance:   1. `OrderedScheduler` is a `ScheduledExecutorService` which uses a priority queue for tasks. The priority queue has a single mutex for both publishers/consumers on the queue  2. There are many objects created for each task submission  due to listenable future decorators  Since in all cases in critical write/read path we don't need delay task execution or futures  we should try to have a light weight execution for that.  ### Modifications   * Inverted the hierarchy between `OrderedSafeExecutor` and `OrderedScheduler`. Now the base class is `OrderedSafeExecutor` and the other extends from it  since it provides additional methods.  * Moved `OrderedSafeExecutor` in `bookkeeper-common` since `OrderedScheduler` was already there.  * Moved `OrderedSafeGenericCallback` in its own file  since it needs to be in `bookkeeper-server` module at this point.  * Changed some method names from `submitOrdered()` into `executeOrdered()` to be consistent with JDK name (`submit()` returns a future while `execute()` returns void).  * Changed `BookKeeper` instance of `scheduler` into `OrderedScheduler` so that the few cases which were using the `mainWorkerPool` could be easily converted to use the scheduler instead.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Andrey Yegorov <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1309 from merlimat/refactor-ordered-executor and squashes the following commits:  9af6eadc2 [Matteo Merli] Fixed findbugs configuration to ignore genereted JMH code c85ad21e5 [Matteo Merli] Use ImmutableMap 22eba18c8 [Matteo Merli] Added microbenchmark 2c67d0e56 [Matteo Merli] Fix for TestMaxSizeWorkersQueue 54a72ba1b [Matteo Merli] Fix for TestReadAheadEntryReader 019d5202d [Matteo Merli] More fixes for submitOrdered b8175f311 [Matteo Merli] Fixed array initialization type 5d68d431d [Matteo Merli] Fixed class names in integration tests 7c529dde7 [Matteo Merli] Fixed submitOrdered in DL code c91259b7d [Matteo Merli] Removed "final" modifier on checkQueue c5f70d5b4 [Matteo Merli] Merge remote-tracking branch 'apache/master' into refactor-ordered-executor 957c98309 [Matteo Merli] Correctly handle number of tasks in queue check e45f78c09 [Matteo Merli] Renamed into OrderedExecutor and OrderedGenericCallback 926868429 [Matteo Merli] Refactored OrderedSafeExecutor and OrderedScheduler
2018-04-02T01:27:10Z,1303,Make CRC32C_HASH a final static variable and log when we cannot use native crc32c library  For CRC32c there is a marked performance difference when the JNI library is available versus when it's not  since the fallback involves creating many `ByteBuffer`s and copy payloads.  Additionally we should set the static variable to `final` so the optimizer can get rid of the `(CRC32C_HASH instanceof Sse42Crc32C)` checks.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1303 from merlimat/crc-final
2018-04-02T01:26:11Z,1306,Minimize number of thread local instances in CRC32CDigestManager  CRC32CDigestManager uses thread local to store the current crc value (since the crc is computed on the headers and then on the payload).  One issue is that the thread local instances are per-ledger and are never cleaned up from the thread local storage. As new ledgers get used  we'd have more memory used there.  For digest we really need 1 single variable  Changes:  * Use Netty FastThreadLocal instead of JDK ThreadLocal  * Made the thread local variable static  since one thread is computing the checksum for an entry of a given ledge  before moving to next entry.  * Minimized thread local `.get()` access since it's more expensive than regular variable access.  * Removed the usage of `isNewCrc` since initial value for crc32c (as well as crc32) is 0  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1306 from merlimat/impro-crc32c
2018-03-29T23:04:37Z,1292,Avoid acquiring closeLock.readLock() on every add/read operation  In the `BookieClient`  we are always acquiring a readlock when grabbing a connection to use for sending a write/read request.  The lock is the `closeLock` and it's only acquired in "write" mode when the `BookKeeper` instance is closed.  The problem with the read-lock is that it introduces contention between the threads that are acquiring it (even if all of them in read mode). Multiple threads can be be in read mode in the critical section  though they have contention when they're entering/exiting the section.  Additionally  the Java implementation of read/write lock is creating and destroying a lot of objects when that contention happens.  My understanding of the code is that we don't need to acquire the read lock in that point. The reason is that  we are already acquiring the lock in the `lookupClient()` method  although only if the pool is null. Additionally  when `Bookkeeper.close()` is invoked all PCBC will be set to closed as well  so it will not be possibile to create a new connection.  All the line changes in the patch are just removing the readLock acquire and try/finally  and reducing the indentation level.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1292 from merlimat/bookie-client-rw-lock and squashes the following commits:  2104a3aa7 [Matteo Merli] Converted anonymous classes into lambdas cabad14e5 [Matteo Merli] Avoid acquiring closeLock.readLock() on every add/read operation
2018-03-29T13:17:15Z,1306,Use reflection based CRC32 to pass direct memory pointer  The crc update with the bytebuffer is very expensive  especially in netty > 4.1.12.  ```java crc.get().update(data.nioBuffer()); ```  Converting a direct`ByteBuf` into a `ByteBuffer` with `data.nioBuffer()` is actually resorting to allocating an unpooled `DirectByteBuffer` which is actually killing the GC (since direct memory is freed when the `DirectByteBuffer` instances are GCed  but the pauses are > 1 second).  This is an adaptation of a change from Yahoo branch at https://github.com/yahoo/bookkeeper/commit/6c01ca2921a998f3bf2e85cacb27867773e7ea28  Initially I though this change was not needed anymore in 4.7 codebase  and that is true for the CRC32c variant. For the regular CRC32  though  we need to avoid the bad behavior of unpooled direct buffers.  Additionally  as in #1306  the thread local variable was made static to avoid the leakage of instances per each ledger.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1307 from merlimat/crc32-bytebuffer and squashes the following commits:  8b81245a0 [Matteo Merli] Made classed package private a7ff1573f [Matteo Merli] Use reflection based CRC32 to pass direct memory pointer
2018-03-29T05:19:37Z,1282,Issue #1282: call to appendLedgersMap in flushCompactionLog  Descriptions of the changes in this PR:  with this change https://github.com/apache/bookkeeper/commit/3392beee5c70abe36d36604723e14d97b7764be9 compactionlog was introduced. But for compactionlog call to appendLedgersMap (// Append ledgers map at the end of entry log) isn't made.  So for these logs  getEntryLogMetadata call has to call extractEntryLogMetadataByScanning for getting the metadata of entrylog. Which is a perf hit.  Master Issue: #1282  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1283 from reddycharan/compactionlogfix  closes #1282
2018-03-29T05:17:00Z,1299,[DLOG] use Atomic***FieldUpdater and LongAdder if possible  Descriptions of the changes in this PR:  AtomicFieldUpdater + volatile provides similar guarantees as Atomic but use much fewer memory. In dlog  when handling large number of streams  there can be a lot of Atomic fields with `LogHandler`  `SegmentWriter` and such. Switching using Atomic to using AtomicFieldUpdater + volatile will save a lot of memory. See [details](http://normanmaurer.me/blog/2013/10/28/Lesser-known-concurrent-classes-Part-1/)  LongAdder is less contended across threads  which is more preferable to AtomicLong when multiple threads update a common sum. E.g. SampledMovingAverageRate. Switching to use LongAdder if AtomicLong is not needed. See [details](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/LongAdder.html)  Master Issue: #<master-issue-number>  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia@apache.org>  Philip Su <psu@twitter.com>  This closes #1299 from sijie/use_atomic_field_updater
2018-03-29T05:12:08Z,1300,[DLOG] Fix TestZKLogStreamMetadataStore  Descriptions of the changes in this PR:  *Problem*  All test cases in `TestZKLogStreamMetadataStore` share same zookeeper cluster. so if the tests run before `testGetMissingPathsRecursive` runs  they might create the missing path components for `testGetMissingPathsRecursive`  which will fail the assertion in `testGetMissingPathsRecursive`  *Solution*  Add unique suffix to "/path" for each test case to avoid conflicts  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Jia Zhai <zhaijia@apache.org>  Philip Su <psu@twitter.com>  This closes #1300 from sijie/fix_zk_log_stream_metadata_store
2018-03-29T05:10:31Z,1301,Drop MD5 signatures from Release Guide and add a reference to git sha in VOTE email template  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1301 from eolivelli/drop-md5-release-guide
2018-03-29T05:09:37Z,1302,Remove references to md5 checksums in download page  According to current ASF suggestions  it is better to stop signing release with MD5  so we need to drop the links in the download page.  See paragraph which states "MD5 hashes are deprecated; please use SHA for new release" at https://www.apache.org/dev/release-signing.html  Author: eolivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1302 from eolivelli/dropmd5-download
2018-03-28T06:33:01Z,1290,Added executeOrdered to complement submitOrdered  In many cases  we are not interested in the `ListenableFuture` returned by `submitOrdered()` call. In these cases we can avoid creating the future object which will be ignored by calling the `execute()` instead of `submit()` on the underlying executor.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1290 from merlimat/execute-ordered
2018-03-28T06:27:45Z,1296,Create 4.6.2 documentation stub  This change prepares the directory structure for docs of 4.6.2. New pages are not linked from menu.  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1296 from eolivelli/fix/copy-website-462
2018-03-28T06:25:00Z,1288,Add sync variants of all methods in handles  As discussed on the mailing list [1]  this patch removes the inconsistency around the naming of the close call on the new handle APIs  by creating sync versions of each async calls  and renaming the async versions to have the suffix "Async".  Most of the changes are very mechanical - just a copy of the old method and some small fixups the javadoc. One thing to note is that I've made a copy of the close and closeAsync methods in the WriteHandle interface  so that the ReadHandle and Handle javadoc for these methods do not have to talk about what it means to close/seal a ledger.  Another change is that I've removed the SneakyThrows from close  that would have also been needed on the other sync methods. Instead  I pass a exception handler to FutureUtils which generates a BKException.  [1] https://lists.apache.org/thread.html/c3784cffb949438510d21e5eac8c0351865c6748c42c380e673a60db%3Cdev.bookkeeper.apache.org%3E  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1288 from ivankelly/async-rename
2018-03-27T17:29:45Z,1287,Issue #1287: NPE at DNS.reverse  Descriptions of the changes in this PR:  *Problem*  Null value can be returned on retrieving attributes.  *Solution*  If null value is returned  throw NamingException so cached localhost name is used.  Master Issue: #1287  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1295 from sijie/fix_dns_reverse  closes #1287
2018-03-26T09:40:26Z,1286,Implement directly ChannelOutboundHandlerAdapter in BookieProtoEncoding#ResponseEncoder  This change is mostly a clean up/refactor which drops intermediate MessageToMessageEncoder and MessageToMessageDecoder from BookieProtoEncoding  Author: Enrico Olivelli <eolivelli@apache.org> Author: Enrico Olivelli <eolivelli@gmail.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  This closes #1286 from eolivelli/fix/java9-response-corrupted
2018-03-24T21:42:28Z,1291,Refactored logAndConvertStatus() to avoid allocation when debug is off  The method `logAndConvertStatus(StatusCode status  int defaultStatus  Object... extraInfo)` is being called when processing the response for each write/read request in `PerChannelBookieClient`.  The logging is only done at debug level and the `extraInfo` is not used otherwise. By taking the `Object...` we're effectively taking a `Object[]` that is allocated each time  along with the boxing for ledgerId/entryId.  Refactored the code separate the logging and the status code conversion  so that we can skip the allocation when debug is off.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1291 from merlimat/log-and-convert-status
2018-03-24T21:41:42Z,913,Improve FileInfoBackingCache  Descriptions of the changes in this PR:  There are a couple of issues noticed in FileInfoBackingCache:  1) There is a race condition in loadFileInfo between get-check and put. If concurrent loading happens  there might be a FileInfo loaded into the map after get-check. This can cause incorrect reference count on FileInfo.  2) FileLoader is doing I/O operation which happens under a giant write lock.  3) assert is typically not recommended since it is disabled at production runtime typically.  *Changes*  - Check whether fileinfo exists or not after getting write lock and before put - Move any I/O operations out of write lock - release the new FileInfo if concurrent puts happen - remove the usage of assert  Beside that  switch to use ConcurrentLongHashMap to avoid boxing and unboxing.  Related Issues:  #913 #832  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #1284 from sijie/improve_fileinfo_backing_cache
2018-03-23T03:14:53Z,1285,Fixed typos in README.md  Author: dmsergeevp44 <32652957+dmsergeevp44@users.noreply.github.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1285 from dmsergeevp44/patch-1
2018-03-22T06:17:48Z,1280,Improve write rejection in DbLedgerStorage  This PR contain 2 changes that are much related to each other.  1. Changed DbLedgerStorage write cache read-write lock into a `StampedLock`    Main reason for using `StampedLock` is that this lock is always taken as a "read" lock  when putting entries in the the cache. It is protecting for the swapping of the write cache when the flush is triggered. Most of the time  we have many threads acquiring the read-lock. `StampedLock` is better in this scenario because there isn't any contention in the optimistic path (just a double volatile read).  2. Have a configurable throttle timing when the write cache is really full.     If we try to write faster than we can put data in the storage device  eventually both write caches will get full and we have to throttle writes. Added here a setting to configure the amount of time to block the thread (who's calling `Bookie.addEntry()`  it could be IO thread or a addEntryWorker depending on configuration).    After the timeout  if we still weren't able to flush the write cache and insert the current entry  bookie will reject the write operation  without logging but rather using a counter to keep track of it.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1280 from merlimat/db-storage-stamped-lock
2018-03-21T00:02:39Z,1279,Fixed DbStorage write cache segment index computation  When the write cache was merged from `yahoo-4.3` branch into master  an improvement went in around computing the the write cache segment index (doing shift instead of division) and that introduced a problem.  The write cache is broken into multiple segments (since buffers in JVM can only be at most 2GB). By default we use 1GB segments (or smaller if the write cache is overall smaller).  Because the shift count was wrong  the entries in the first segment were being ovrridden by entries in the 2nd segment (entries in the other segments were all fine).  That would lead to write some garbage in the entry log and subsequent read failures.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1279 from merlimat/fix-write-cache-segment-index
2018-03-20T14:54:40Z,1278,Implement `toString` method for CheckpointList and BufferedLogChannel  Descriptions of the changes in this PR:  ``` Flushing entry logger 102 back to filesystem  pending for syncing entry loggers : [org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel7d98c184].  org.apache.bookkeeper.bookie.SortedLedgerStorage - Reached size org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointListd2c00ea5 ```  `CheckpointList` and `BufferedLogChannel` is missing `toString` implementation.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1278 from sijie/fix_tostring_issue
2018-03-19T20:13:37Z,1268,Fix ByteBuf leaking at Journal  Descriptions of the changes in this PR:  BufferLogChannel uses a pooled bytebuf for buffering writes. However Journal only closes the underlying log file channel  but it doesn't close buffer log channel  which can cause bytebuf leaking.  This problem get exposed at #1268  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1275 from sijie/fix_bytebuf_leaking_on_journal
2018-03-19T17:57:42Z,1268,Fix logging issue on PendingReadOp  Descriptions of the changes in this PR:  `EntryImpl` is recycled after callback is submitted for a given read op. However the object might be referenced after it is recycled  since read callback can come back after the read op is error-out.  This doesn't affect any operation or correctness. However it might introduce some confused logging.  This also got exposed by #1268  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1276 from sijie/fix_recycling_entries
2018-03-19T02:23:00Z,1252,Set `ENABLE_DIGEST_TYPE_AUTODETECTION` to true as default value  Descriptions of the changes in this PR:  *Motivation*  We have recorded digest type in the ledger metadata since BK 4.5. it would be great to let client automatically detect the digest type on opening ledger. So turn on the autodetection feature by default.  *Result*  digest type autodetection is on by default.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1252 from sijie/flip_default_values
2018-03-18T07:59:42Z,1274,Ensure we instantiate threads that extend Netty FastThreadLocalThread  Since we make heavy use of `Recycler` and other `FastThreadLocal` objects from Netty  we should make sure that all (critical) threads that we instantiate are inheriting from `FastThreadLocalThread`.  `FastThreadLocalThread` has an optimization that makes access to `FastThreadLocal` faster. It's a class that extends regular `Thread` and adds a field for the thread local access.  There are a couple of places where we're currently not using `FastThreadLocal`:  * `OrderedScheduler` builder  * `BookieThread` (which is used in `Journal`  `ForceSyncThread`  etc..)  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1274 from merlimat/fast-thread-local
2018-03-18T07:55:57Z,1273,Use final variables in BoundedScheduledExecutorService  Make the fields final so that the optimizer can easily remove the `if (maxTasksInQueue > 0) {}` branch when the limit on the executor is disabled.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1273 from merlimat/final-bounded-executor
2018-03-17T04:31:24Z,1269,Improve `BookKeeperAdmin#format` to avoid constructing redundant resources  Descriptions of the changes in this PR:  *Problem*  After metadata service uri change  all the metadata managers can be retrieved via metadata drivers. So there is no need to construct another bookkeeper client to get ledger manager factory for formatting ledger metadata.  *Solution*  - remove constructing bookkeeper client and use the metadata driver to get ledger manager factory to format ledger metadata - expose layout manager in bookie driver as well - since we are adding `getLayoutManager` in bookie driver  we need to update `MetadataDriversTest`. cleanup the test drivers in `MetadataDriversTest`.  Related Issue: #1269  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1270 from sijie/improve_format
2018-03-17T03:41:03Z,1271,Fixed journalQueueSize counter increment  The `journalQueueSize` counter was only decremented.  Moved the increment in the common method that is called in every path when adding to journal.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1271 from merlimat/journal-stat
2018-03-17T03:40:23Z,1272,Register jvm_memory_direct_bytes_used metric so that it's reported on Prometheus  The `jvm_memory_direct_bytes_used` metric is being registered on the default Prometheus static registry  though we're only exporting the stats that were added into the local registry instance.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1272 from merlimat/fix-mem-stats
2018-03-16T18:19:49Z,1269,Close bookkeeper client used in format  Otherwise  the executors threads could keep the process calling it alive. This isn't a problem for BookieShell  since it does a System.exit  but it currently is for pulsar metadata cluster format.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1269 from ivankelly/close-format-client
2018-03-16T16:41:14Z,1254,Fixes for multiple journals recovery  Currently  the implementation of multiple journals in bookie is broken because all journal instances are using the same `logMark` file to store the journal marker  stepping into each others.  Adding here a suffix for `logMark` to have unique files: `logMark.0`  `logMark.1` etc. If there's 1 single journal  we'll keep using `logMark` so there's no compatibility issue.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1254 from merlimat/fix-multiple-journals and squashes the following commits:  41c01af63 [Matteo Merli] Fixed LastMarkCommandTest 15ea26806 [Matteo Merli] Merge remote-tracking branch 'apache/master' into fix-multiple-journals 48346b856 [Matteo Merli] Fixes for multiple journals recovery
2018-03-16T16:39:51Z,1266,Fixed buffer release in v2 BookieProtocol  There was a buffers leak when using V2 bookie protocol. This was introduced with the refactoring and the merges from yahoo branch.  Note: this was only happening when selecting  v2 protocol in client configuration.  The current code was missing a release in both the add and read entries path. I've been running it for some time and the ref-counting seems correct after the fix.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1266 from merlimat/fix-refcounting
2018-03-16T16:38:22Z,1264,Refactored LAC cache in DbLedgerStorage  The `TransientLedgerInfo` cache that holds the LAC (or explicit lac) for all ledgers has showed up in the profiler as a big contention point.  ### Modifications   * Only add an item in `TransientLedgerInfo` is someone has asked for LAC or has set explicity LAC. This will save lot of memory if many ledger are not requiring the LAC info.  * Use `ConcurrentLongHashMap` to store the `TransientLedgerInfo`. There are few advantages:    - Key in the map is `long` and doesn't need boxing    - The `get()` operation uses a stamped lock which is ideal in cases the number of `get()` is way bigger than `put()` operations  since it only needs a volatile variable read. In this case the map is only updated when new ledgers are added / removed  but we do a `get()` on each `addEntry()` operation.   - Schedule periodical cleanup of the map for stale ledger info entries  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1264 from merlimat/refactor-lac-cache-db-ledger-storage
2018-03-16T05:27:49Z,1123,BP-29 (task 4): use metadata service uri for constructing registration manager and ledger manager factory  Descriptions of the changes in this PR:  The main changes are at two places:  - Deprecating using ServerConfiguration#getRegistrationManagerClass(). Changed Bookie.java to use MetadataBookieDriver to getRegistrationManager(). - Use MetadataBookieDriver/MetadataClientDriver to retrieve ledger manager factory in Bookie.java / BookKeeper.java  The other changes are in-place changes for replacing using registration manager to using metadata drivers.  - provides a few util functions in `MetadataDrivers` to run `functions` with registration manager / ledger manager factory  Master Issue: #1123  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1251 from sijie/use_metadata_service_uri_in_registration_manager
2018-03-16T05:24:05Z,881,ISSUE #881: use initialize insteadof format in docker image  Descriptions of the changes in this PR:  Currently docker image uses format during startup to initialize the cluster. It would be good to separate initialize from format. The initialize command should only create znodes for brand new environment. It should not involve any logic on reformatting.  - use initialize insteadof format in docker image. - make initialize an atomic operation. - add initialize and nuke command in makefile. - fix error for non root user running.  This PR tested by local build  since 4.7 is not released  will bump bk version in Dockerfile once 4.7 released.  Master Issue: #881  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1263 from jiazhai/issue_881  closes #881
2018-03-16T05:20:25Z,1265,Merge tests/jmh into microbenchmark  Descriptions of the changes in this PR:  tests/jmh was added a while ago  but it is got dropped out of root pom with mistakes. mircobenchmark was added later. it is making sense to merge tests/jmh into microbenchmark module since they are using jmh to do microbenchmarks  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1265 from sijie/move_jmh_to_benchmarks
2018-03-15T06:48:32Z,1245,Collect Prometheus latency stats using DataSketches  The implementation for collecting and estimating the latency quantiles in the Prometheus Java client library is very slow and it is impacting the the bookie performance.  I have added a micro-benchmark that tests our various stats providers. These tests are simulating 16 concurrent threads updating the stats.  #### Counter increment ``` Benchmark                              (statsProvider)   Mode  Cnt    Score      Error   Units StatsLoggerBenchmark.counterIncrement       Prometheus  thrpt    3  391.882 ±  786.987  ops/us StatsLoggerBenchmark.counterIncrement         Codahale  thrpt    3  449.341 ± 1337.736  ops/us StatsLoggerBenchmark.counterIncrement          Twitter  thrpt    3   43.354 ±    9.331  ops/us StatsLoggerBenchmark.counterIncrement          Ostrich  thrpt    3   43.790 ±    1.332  ops/us ```  Here prometheus is fast  though not as fast as a simple `LongAdder` which can reach ~500M ops/sec.  #### Latency quantiles  ``` Benchmark                              (statsProvider)   Mode  Cnt    Score      Error   Units StatsLoggerBenchmark.recordLatency          Prometheus  thrpt    3    0.255 ±    0.667  ops/us StatsLoggerBenchmark.recordLatency            Codahale  thrpt    3    4.963 ±    1.671  ops/us StatsLoggerBenchmark.recordLatency             Twitter  thrpt    3    4.793 ±    0.766  ops/us StatsLoggerBenchmark.recordLatency             Ostrich  thrpt    3    2.473 ±    6.394  ops/us ```  Here is where Prometheus is super-slow: 250K ops/second max  mostly due to contention and GC pressure.  ## Modification  I have re-adapted a stats collector I had done in the Yahoo branch: https://github.com/yahoo/bookkeeper/tree/yahoo-4.3/bookkeeper-stats-providers/datasketches-metrics-provider/src/main/java/org/apache/bokkeeper/stats/datasketches  This is based on the [DataSketches](https://datasketches.github.io/) library to have very fast and lightweight quantile estimates (along with a number of other operations)  plus some tricks to avoid concurrency issues by using thread local collectors and aggregating when needed in background.  After the change  the throughput is 150x the original prometheus collector.  ``` Benchmark                              (statsProvider)   Mode  Cnt    Score     Error   Units StatsLoggerBenchmark.counterIncrement       Prometheus  thrpt    3  531.906 ± 129.602  ops/us StatsLoggerBenchmark.recordLatency          Prometheus  thrpt    3   27.538 ±   5.893  ops/us ```  It is worth noting that the main bottle-neck in the `recordLatency` test is now the `System.nanoTime()` call used to pass different samples to the stat logger.  `System.nanoTime()` is not super fast:  ``` Benchmark                               (statsProvider)   Mode  Cnt    Score     Error   Units StatsLoggerBenchmark.currentTimeMillis              N/A  thrpt    3  161.502 ± 267.238  ops/us StatsLoggerBenchmark.nanoTime                       N/A  thrpt    3   32.822 ±   2.256  ops/us ```  By removing the `System.nanoTime()` call from the benchmark  the Prometheus+DataSketches collector results in:  ``` Benchmark                               (statsProvider)   Mode  Cnt    Score     Error   Units StatsLoggerBenchmark.recordLatency           Prometheus  thrpt    3  108.542 ±  31.848  ops/us ```  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1245 from merlimat/prometheus-datasketches
2018-03-14T23:32:36Z,1261,Fixed journal trimming after write cache flush in DbLedgerStorage  `DbLedgerStorage` uses an in-memory write cache to accumulate entries before writing into the entry log.  The flush of the write cache is triggered by 2 factors:  1. `SyncThread` issuing a checkpoint (eg: every 10sec or 1min)  2. Write cache is full  so we need to force the flush  In case (1)  the checkpoint is also communicated to the journal which can then move the `logMark` forward and eventually discard old unused journals.  In cae (2)  we're not moving the `logMark`. This has few side effects:  1. When restarting the bookie it will replay a bigger portion of the journal  2. We are moving the `logMark` only every 1min  so we need to keep 1minute of journals on disk     - If the disk hosting the journal(s) has low capacity  it can fill it up     - This is evident when mounting the journal on a 60GB ram-disk and using 8 journals in the bookie. At a sufficient rate  the write cache keeps getting flushed  but the journals are only trimmed after 1 minute  thus accumulating 1min worth of writes in the journal device  filling up the space.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1261 from merlimat/db-storage-journal-trimming
2018-03-14T21:30:44Z,1258,Allow to send callbacks from journal thread  In BK 4.3 it was possible to configure 0 threads for the dispatching of journal callback threads.  There might be good reasons to not use a thread pool when dispatching the callback threads:  * Avoiding one more context switch  * Avoiding contention on the executor enqueuing  * When using multiple journals  the journal thread is not a bottleneck anymore  We should allow the same convention (threads=0 means direct execution) that we have in other places.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1258 from merlimat/journal-callbacks
2018-03-14T19:11:11Z,1259,Replaced synchronized with volatile read in BookieStatus  `BookieStatus.isInReadOnlyMode()` is being called from IO threads at each write request.  Having `synchronized` method is a major source of contention between all these threads and caps the throughput and increases the latency.  Replacing here with a `volatile` variable read. This will have the same exact behavior as today while removing the contention point.  I think we could eventually even do a "dirty" read of that variable to further reduce the overhead of the volatile read.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1259 from merlimat/bookie-status-contention
2018-03-14T18:15:54Z,762,ISSUE #762: copy codahale files to org.apache.bookkeeper.stats.codahale  Descriptions of the changes in this PR: Codahale stats providers are sharing same package name with the stats library org.apache.bookkeeper.stats. We should consider moving them to their own package name. `org.apache.bookkeeper.stats => org.apache.bookkeeper.stats.codahale`  For BC concerns  we need to do this in two phases: - in 4.7  we copy the files but still have the old files for BC. but mark the old classes as deprecated. - in 4.8  we remove the old files. because the class names are used for reflection.  Master Issue: #762  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1257 from jiazhai/issue_762  closes #762
2018-03-14T18:03:05Z,1255,ISSUE #1255: Bookie should not advance the journal marker before creating the index file  Descriptions of the changes in this PR:  *Problem*  Currently Bookie journal 'new ledger' entry if a ledger doesn't exist at ledger storage. This 'new ledger' entry is journaled before adding the entry to ledger storage. so this would cause a problem on checkpointing.  - journal 'new ledger' entry  ```     /**      * Retrieve the ledger descriptor for the ledger which entry should be added to.      * The LedgerDescriptor returned from this method should be eventually freed with      * #putHandle().      *      * throws BookieException if masterKey does not match the master key of the ledger      */     private LedgerDescriptor getLedgerForEntry(ByteBuf entry  final byte[] masterKey)             throws IOException  BookieException {         final long ledgerId = entry.getLong(entry.readerIndex());          LedgerDescriptor l = handles.getHandle(ledgerId  masterKey);         if (masterKeyCache.get(ledgerId) == null) {             // Force the load into masterKey cache             byte[] oldValue = masterKeyCache.putIfAbsent(ledgerId  masterKey);             if (oldValue == null) {                 // new handle  we should add the key to journal ensure we can rebuild                 ByteBuffer bb = ByteBuffer.allocate(8 + 8 + 4 + masterKey.length);                 bb.putLong(ledgerId);                 bb.putLong(METAENTRY_ID_LEDGER_KEY);                 bb.putInt(masterKey.length);                 bb.put(masterKey);                 bb.flip();                  getJournal(ledgerId).logAddEntry(bb  false /* ackBeforeSync */  new NopWriteCallback()  null);             }         }          return l;     } ```  - add entry to ledger storage ```     /**      * Add an entry to a ledger as specified by handle.      */     private void addEntryInternal(LedgerDescriptor handle  ByteBuf entry                                    boolean ackBeforeSync  WriteCallback cb  Object ctx)             throws IOException  BookieException {         long ledgerId = handle.getLedgerId();         long entryId = handle.addEntry(entry);          writeBytes.add(entry.readableBytes());          if (LOG.isTraceEnabled()) {             LOG.trace("Adding {}{}"  entryId  ledgerId);         }         getJournal(ledgerId).logAddEntry(entry  ackBeforeSync  cb  ctx);     }  ```  The problematic sequence can be described as below:  - thread t1 is adding the first entry of ledger L1 - thread t2 is adding entries of ledger L2 - t1 is adding a journal entry of 'new ledger L1' - t2 is adding entries after t1 adds the journal entry and before t1 adding the entry to ledger storage - after t2 added entries  checkpoint happens in the ledger storage. it would roll the journal mark  which will claim the 'new ledger L1' entry as persistent. - if the bookie restarts  it would fail with no such ledger exception.  The problem can be produced using a unit test: https://github.com/sijie/bookkeeper/commit/5053a717cd578aeb88236d373553d7494501b801  *Solution*  The fix is simple - just make sure the 'new ledger' journal entry is added after an entry is added to ledger storage. so it make sure when checkpoint happen it will flush and create the ledger before moving the journal mark.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Jia Zhai <None>  Yiming Zang <yzang2016@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1256 from sijie/fix_db_ledger_storage_checkpoint  closes #1255
2018-03-14T14:20:03Z,1248,Jenkins seed job for testing DSLs  The job allows you to specify a repo and a branch. It will look for all files named .test-infra/jenkins/jenkins_testing_job_*.groovy and try to generate jobs for them. The seed job is in the folder bookkeeper-jenkins-testing/ and has lookupStrategy set to 'SEED_JOB'. This means that any job generated by this seed will be created in the same folder  thus lowering the chance of breaking our existing production jobs.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1248 from ivankelly/test-seed
2018-03-13T23:49:50Z,1009,Fixed Journal stats names  In `BOOKKEEPER-1009: Use multiple journals in bookie` 123eccd435a4a96a9147ed4a24efbe9025fe79ba there was a change in the metrics name that would be affecting also user not running with multiple journal.  It is a bit inconvenient to aggregate the stats in the metrics collector (how to aggregate 99pct latency for example).  I think the best option is to have a single metric even when using multiple journal threads.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1250 from merlimat/journal-metric-names
2018-03-13T23:07:32Z,336,ISSUE #336: add DC/OS package update and instructions  Descriptions of the changes in this PR:  Provide instructions of updating DCOS package by using latest docker image when do new release.  Master Issue: #336  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1247 from jiazhai/issue_336  closes #336
2018-03-13T23:03:20Z,1253,Make it possible to build site on ubuntu and debian  Xenial ships with ruby 2.3.1. Debian Stretch ships 2.3.3. The current Gemfile asks for 2.4.1. This patch drops the requirement to >=2.3.1.  It also make it possible to test the site without sudo.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1253 from ivankelly/site-deb
2018-03-13T22:51:42Z,570,Issue #570: make changes to SyncThread/checkpoint logic.  Descriptions of the changes in this PR:  make changes to SyncThread/checkpoint logic  so that incase of entrylogperledger  checkpoint happens for every flushInterval but not when active entrylog is created/rolled over.  This is < sub-task3  > of Issue #570  Master Issue: #570  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1236 from reddycharan/addcheckpointlogic  closes #570
2018-03-13T01:35:30Z,1249,Fixed Journal static empty array list recycling  When `journalSyncData=false`  we passing `EMPTY_ARRAY_LIST` to the `ForceWriteThread` when the journal is rolled over.  I have seen this exception:  ``` 18:39:52.285 [ForceWriteThread] ERROR org.apache.bookkeeper.bookie.BookieCriticalThread - Uncaught exception in thread ForceWriteThread and is exiting! java.lang.NullPointerException: null  at io.netty.util.Recycler$DefaultHandle.recycle(Recycler.java:219) ~[io.netty-netty-all-4.1.21.Final.jar:4.1.21.Final]  at org.apache.bookkeeper.common.collections.RecyclableArrayList.recycle(RecyclableArrayList.java:55) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]  at org.apache.bookkeeper.bookie.Journal$ForceWriteRequest.recycle(Journal.java:402) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]  at org.apache.bookkeeper.bookie.Journal$ForceWriteRequest.access$1(Journal.java:399) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]  at org.apache.bookkeeper.bookie.Journal$ForceWriteThread.run(Journal.java:506) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT] ```  This is due to calling `recycle()` twice on the same `EMPTY_ARRAY_LIST`  instance. The solution is that `EMPTY_ARRAY_LIST` should not be a pooled instance and we should check that before recycling.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1249 from merlimat/fix-journal-list-recycle
2018-03-10T08:13:57Z,198,Disable using v2 decoder to decode v3 response if usingV2WireProtocol is enabled and handle unknown op in v2 request decoder  Descriptions of the changes in this PR:  *Problem*  - response decoder should use whatever protocol that request is using to decode the response. otherwise it is making wrong assumption on response protocol. - v2 request decoder doesn't handle unknown op correctly  which will cause netty double-release bytebuf  *Solution*  - make sure response decoder respect the protocol that client is using for sending requests - v2 request decoder should throw exceptions when fail to decode unknown request  Related issues: #198  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1240 from sijie/bookkeeper_fix_bytebuf_issues
2018-03-10T05:06:18Z,1241,Issue #1241: Fixed NPE in PerChannelBookieClient  The `CompletionValue` object from the map can be null in some cases and we need to protect for it.  Fixes #1241  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1242 from merlimat/fix-npe  closes #1241
2018-03-10T01:04:16Z,1243,Removed ServerStats since it was not used anymore  ServerStats class was previously used to expose stats through JMX but it's not being used anymore and it's just causing lock contention in Bookie IO threads when using v2 protocol.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1243 from merlimat/remove-server-stats
2018-03-10T01:03:15Z,251,Move dependency version management to root pom file  Descriptions of the changes in this PR:  *Motivation*  To have a clear dependency management at bookkeeper  avoid unnecessary version conflicts.  *Changes*  **Dependencies**  - define versions at properties section at root pom file - move dependency definitions to `dependencyManagement` at root pom file - avoid specifying dependency version at sub modules unless it is really needed. comments were already / are added for those cases.  **Plugin Dependencies**  - define versions at properties section at root pom file - use property to specify version when using a new plugin - remove duplicated configurations on plugins  *Other changes*  - cleanup root pom files for module `stream` and `stream/distributedlog` - fix some checkstyle violations since we are changing some plugin inheritances.  This fixes #251  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Jia Zhai <None>  This closes #1235 from sijie/cleanup_poms
2018-03-09T11:03:12Z,570,Issue #570: Move logic of unpersistedbytes to bufferedchannel  Descriptions of the changes in this PR:  This is < sub-task2 > of Issue #570.  https://github.com/apache/bookkeeper/commit/26b09abb4202362ca37d6944ce75eb2a3309dc3c introduced the flushEntrylogBytes factor. But it is structurally correct to have this logic in BufferedChannel  rather than in EntryLogger  since it is paramter of BufferedChannel.  Master Issue: #570  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1228 from reddycharan/fixunpersistedbytes  closes #570
2018-03-09T06:19:39Z,1233,Reduce running time for testLedgerCreateAdvWithLedgerIdInLoop  This test has flaked in CI regularly mainly because it takes a long time to run.  This changes reduces the running time by. 1. Creating the ledgers with a ensemble size of 1 2. Creating and writing to the ledgers in parallel 3. Using async methods to write entries to the ledgers  This brought the test from ~60 seconds to ~7 seconds locally.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1233 from ivankelly/ledger-create-adv-timeout
2018-03-09T06:16:46Z,570,Issue #570: getting rid of unnecessary synchronization in InterleavedLedgerStorage  Descriptions of the changes in this PR:  This is < sub-task1 > of Issue #570.  In InterleavedLedgerStorage  since the initial version of it  addEntry and processEntry methods are synchronized  but they are not required to be synchronized.  Removal of unnecessary synchronization in InterleavedLedgerStorage methods  as described in http://mail-archives.apache.org/mod_mbox/bookkeeper-dev/201707.mbox/%3CCAO2yDyZ946fp2S_qR2iL178hPiXgrnFGb%3DpvkyK4ReSYAtNLBw%40mail.gmail.com%3E  Master Issue: #570  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1225 from reddycharan/nonsynchaddinterleavedstorage  closes #570
2018-03-07T00:45:51Z,1234,Make shading rule consistent between bookkeeper-server-shaded and bookkeeper-server-tests-shaded  Descriptions of the changes in this PR:  `bookkeeper-server:test-jar` is working with `bookkeeper-server`. we should make `bookkeeper-server-tests-shaded` work with `bookkeeper-server-shaded`.  so this change is to make they have consistent shading rule.  ``` <dependency>       <groupId>org.apache.bookkeeper</groupId>       <artifactId>bookkeeper-server-shaded</artifactId>       <version>${bookkeeper.version}</version>       <scope>test</scope>     </dependency> <dependency>       <groupId>org.apache.bookkeeper</groupId>       <artifactId>bookkeeper-server-tests-shaded</artifactId>       <version>${bookkeeper.version}</version>       <scope>test</scope>     </dependency> ```  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #1234 from sijie/sijie_improve_tests_shaded
2018-03-06T09:33:26Z,1231,Dont shade netty at distributedlog-core-shaded  Descriptions of the changes in this PR:  *Problem*  JVM crashed on linux platforms  when`distributedlog-core-shaded` (where netty `4.1.12.Final` was shaded) is used in a project where a non-shaded netty `4.1.21.Final` is used and epoll is enabled.  ``` Event: 13.322 Thread 0x00007fef90013000 Exception <a 'java/lang/NoSuchMethodError': Method io.netty.channel.epoll.Native.epollWait0(IJII)I name or signature does not match>             (0x00000000e709c060) thrown at [/build/openjdk-8-8u141-b15/src/hotspot/src/share/vm/prims/jni.cpp  line 4011] ```  Because Epoll is enabled on linux platforms. However because two different netty versions bring in two different jni bindings  when the netty epoll transport tries to resolve the jni library  it hit the signature mismatch issue.  *Solution*  Dont shade netty at all. Let the application resolve which netty version to use.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1231 from sijie/dont_shade_netty
2018-03-06T03:13:14Z,1229,ISSUE #1229: PendingAddOp can get recycled before it gets executed  Descriptions of the changes in this PR: *Problem*  The PendingAddOp can be recycled when it is cancelled before it is executed. so it will hit NPE when it is actually executed. This is a bug introduced by #1091  *Solution*  Only recycle PendingAddOp after it has been run.  Master Issue: #1229  Author: Sijie Guo <sijie@apache.org>  Reviewers: Andrey Yegorov <None>  Matteo Merli <mmerli@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1230 from sijie/fix_npe  closes #1229
2018-03-05T04:50:58Z,1217,Fix AbstractLedgerManagerFactory on handling both shaded class and original class co-exists case  Descriptions of the changes in this PR:  *Problem*  #1217 addresses the issue when using a shaded class accessing a bookkeeper cluster.  However the assumption was made when the classpath only has shaded classes. However  it didn't address the case when shaded class and original class can co-exist. because IOException is thrown instead of ClassNotFoundException at following code:  ```                 Class<?> theCls = Class.forName(layout.getManagerFactoryClass());                 if (!LedgerManagerFactory.class.isAssignableFrom(theCls)) {                     throw new IOException("Wrong ledger manager factory " + layout.getManagerFactoryClass());                 } ```  *Solution*  This change fixes the issue.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1227 from sijie/debug_issue
2018-03-04T19:41:16Z,1205,Make table service client includes table service related jars  Descriptions of the changes in this PR:  This is a change for #1205  *Motivation*  in order to implify the other project to use table service  it would be good to make sure the client include table service related jars.  *Solution*  Include table service related jars in the client-all jar.  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1226 from sijie/publish_table_service_jars
2018-03-04T09:35:59Z,1205,Integrate table service in bookkeeper build  Descriptions of the changes in this PR:  - update the pom files to integrate table service with bookkeeper build - add 3 flags to control building/testing table service. by default the table service will be built and tested with existing maven commands.   It only builds and runs the tests on following conditions:     * `-Dstream`: enable building the table service     * `-DstreamTests`: run the unit tests of table service     * `-DstreamIntegrationTests`: run the integration tests of table service - update CI jobs     * Travis: compile table service for all builds  run unit tests if code modifications happen under `stream` directory     * Jenkins: compile table service on precommit jobs  compile and run unit tests for postcommit jobs  Master Issue: #1205  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <zhaijia@apache.org>  This closes #1216 from sijie/built_table_service
2018-03-03T01:58:28Z,1168,Fix TestBKSyncLogReader  Descriptions of the changes in this PR:  *Problem*  The test case `TestBKSyncLogReader` is waiting an entry beyond a control record  where the number of control records can vary depend on the timing of flush()/commit(). This introduces the flakiness of this test.  *Solution*  This change changes to wait for readahead go beyond the last user record  which is more deterministic.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Jia Zhai <None>   Philip Su <psu@twitter.com>  This closes #1168 from sijie/fix_test_sync_log_reader
2018-03-03T01:55:17Z,1223,Improve Travis Build  Descriptions of the changes in this PR:  *Problem*  There are a couple of problem with current travis build  - apache/bookkeeper#1223 introduce `set -e` on script section  which it cause some weird early-exiting problem. - we run two installs. one is the default install by travis  the other one is install with apache-rat/spotbug checks in script section  which make the build slow. - travis_retry and travis_wait spread across different commands in the script section  *Solution*  - move build logic into a bash script file and invoke the script - skip install section in travis  *Result*  This reduces travis build time by 10+ mins and make it stable  NOTES:  The changes under `site` and `stream/distributedlog` are used `empty commits` to trigger corresponding builds in travis.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1224 from sijie/travis_wait
2018-03-02T09:08:48Z,1221,Refactored ReadResponse ref count handling  This contains a number of changes.  - V2 bookie protocol   - Add retain and release methods to all responses. For read response     it handles the data buffer.   - ReadResponses always have a buffer now  even if empty.  - Server side   - In the v2 read handler  releasing of the buffer in the case of     error is left to the very end.  - Client side   - Per channel bookie clients own the buffer for read responses.     If a ReadCallback want it to live past the lifetime of the call     it must call retain.  This change was originally e8643140 in the yahoo-4.3 branch.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1221 from ivankelly/yahoo-bp-11
2018-03-01T17:52:39Z,1223,Enable buiding website on travis job if a PR is modifying `site`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1223 from sijie/run_tests_on_website_changes
2018-02-28T21:42:14Z,1218,Support LacPiggyback  LongPoll and ExplicitLac in db ledger storage  Descriptions of the changes in this PR:  *Motivation*  DbLedgerStorage was developed in yahoo and just merged recently to master. This implementation only works for v2 protocol. It doesn't work with v3 protocol. When using v3 protocol clients (e.g. dlog library) to talk to bookies use DbLedgerStorage  the clients hang on waiting responses. because a few methods in DbLedgerStorage throw UnsupportedException  *Solution*  This change focuses on adding the implementations for those methods  in order to support LacPiggyback  LongPoll and ExplicitLac for v3 protocol. The implementation follows what we had in FileInfoCache but did it in a much simpler way  since all the persistence information has been managed by db ledger storage itself. All the information required by `LacPiggyback`  `LongPoll` and `ExplicitLac` are transient.  This change doesn't introduce any new test cases. It reuses existing test cases to test those features using DbLedgerStorage. These tests are:  - ExplicitLacTest: for testing explicit lac - TestPiggybackLAC: for testing piggback lac - TestReadLastConfirmedLongPoll: for testing long polling lac - TestReadLastConfirmedAndEntry: for testing entry piggyback  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1218 from sijie/support_long_polls
2018-02-28T21:40:14Z,898,Website fails to build due to a missing field at the yaml file  Descriptions of the changes in this PR:  The problem was introduced at apache/bookkeeper#898  Author: Sijie Guo <sijie@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1222 from sijie/fix_website
2018-02-28T18:34:33Z,1220,Pull as many reviewers as possible when merging  Github uses pagination on some apis. This means that if there are a lot of comments on a issue  it may not pick up approvals by default. This patch increases the number of review comments to pull  from a default of 30 to 100. A proper fix would be to enable pagination using the Link header  but that's a much bigger change  for little return.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1220 from ivankelly/page_comments
2018-02-28T15:18:35Z,1217,Shade bookkeeper in distributedlog-core-shaded and allow using shaded bookkeeper client to resolve ledger manager factory class  Descriptions of the changes in this PR:  *Motivation*  1. when `distributedlog-core-shaded` is co-used with other bookkeeper jars  it would cause class conflicts because `distributedlog-core-shaded` shades most of its dependencies except bookkeeper. so it is better to also shade bookkeeper to avoid such conflicts.  2. if we shade bookkeeper  it would cause a problem on resolving ledger manager factory class stored on layout metadata.  ``` java.io.IOException: Failed to instantiate ledger manager factory org.apache.bookkeeper.meta.HierarchicalLedgerManagerFactory  at dlshade.org.apache.bookkeeper.meta.AbstractZkLedgerManagerFactory.attemptToResolveShadedLedgerManagerFactory(AbstractZkLedgerManagerFactory.java:256) ~[distributedlog-core-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]  at dlshade.org.apache.bookkeeper.meta.AbstractZkLedgerManagerFactory.newLedgerManagerFactory(AbstractZkLedgerManagerFactory.java:203) ~[distributedlog-core-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT] ```  *Solution*  - shade bookkeeper dependencies in `distributedlog-core-shaded` - add flags to allow using shaded bookkeeper jar to resolve ledger manager factory  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  This closes #1217 from sijie/fix_builds
2018-02-28T14:34:49Z,1123,BP-29 (task 3): use metadata service uri for constructing registration client  Descriptions of the changes in this PR:  - Deprecated `getRegistrationClientClass` and changed bookkeeper client to use metadata service uri to construct metadata driver. - Add a test case for TestZKRegistrationClient and fixes issues caught by the test case.  Master Issue: #1123  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  This closes #1192 from sijie/use_metadata_service_uri_in_registration
2018-02-28T14:22:04Z,898,Bookies should prioritize recovery reads/writes  The change adds a new flag for reads  RECOVERY_READ. This flag is set when a client is retrying to recover a ledger. Recovery reads should be higher priority than normal reads  as recovery usually happens when a writer has failed  and another node needs to take over the stream that that ledger belonged to. All writes on that stream are blocked until the ledger the ledger has been recovered  so giving these reads priority will mean the stream is out for action for the shortest amount of time possible.  Priority is given to these reads by executing the reads directly in the BookieRequestProcessor  rather than adding them to the readThreadPool where they could end up queuing.  This change was originally 372a99db in the yahoo.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #898 from ivankelly/yahoo-bp-10
2018-02-28T02:09:55Z,1024,Use the bk OrderedScheduler in dlog  Descriptions of the changes in this PR:  Dlog has an implementation of OrderedScheduler inspired of bk `OrderedScheduler`. It would be good to remove duplicated implementation here since dlog is in the same repo as bk.  - removed the dlog version of `OrderedScheduler` - make `OrderedScheduler` implement `ScheduledExecutorService` so it can be used by dlog - change dlog classes to use bk `OrderedScheduler`.  Master Issue: #1024  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1211 from sijie/merge_ordered_scheduler
2018-02-28T02:09:08Z,1090,Update download pages  Descriptions of the changes in this PR:  - remove redundant sentence in download pages (see comment at #1090) - change latest release to use mirror_url for downloading packages and dist for asc md5 files - change other releases to use achive url for all files  This change fixes #1090  related changes: #1213  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #1214 from sijie/update_download_page
2018-02-28T02:07:46Z,1213,Update release guide to remove old releases after a new release is completed  Descriptions of the changes in this PR:  Address comments at #1213  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1215 from sijie/update_release_guide
2018-02-27T23:22:48Z,,Merge remote-tracking branch 'apache/merge_table_service'
2018-02-27T21:20:19Z,1147,ISSUE #1147: Move bookkeeper-server/{bin conf} to root module  Descriptions of the changes in this PR:  *Motivation*  since 4.7  we are shipping the binary distribution using bookkeeper-dist modules. so it is making more sense to have {bin conf} directory at root module  rather than bookkeeper-server module.  *Solution*  - move bookkeeper-server/bin to bin - move bookkeeper-server/conf to conf - update the new bookkeeper cli related files as "experimental"  This change is needed for integrating with dlog scripts for BP-26 and new bookkeeper cli for BP-27.  Master Issue: #1147  Related Issues:  - BP-26 #1024 - BP-27 #1000  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #1210 from sijie/move_bin_conf  closes #1147
2018-02-27T18:59:01Z,1212,Add Jia Zhai and Enrico Olivelli to PMC list  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1212 from eolivelli/fix/update-pmc-list
2018-02-27T11:16:04Z,1024,use FutureUtils/FutureEventListener in bookkeeper-common for dlog  Descriptions of the changes in this PR:  This is a sub-task for apache/bookkeeper#1024  After dlog is merged to bookkeeper  FutureUtils/FutureEventListener is duplicated at bookkeeper-common and distributedlog-common. This change is to remove FutureUtils/FutureEventListener from distributedlog-common and let dlog use the ones in bookkeeper-common.  The changes includes:  - remove `FutureUtils/FutureEventListener` from distributedlog-common - change dlog classes to use the ones in bookkeeper-common - change the dlog `OrderScheduler` to extend bookkeeper `OrderedScheduler` (required by FutureUtils.within).  Master Issue: #1024  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1208 from sijie/use_bookkeeper_futureutils
2018-02-27T09:29:34Z,1209,Added MockBookKeeper for unit tests  This mock class is what we use in Pulsar to do unit tests for the managed-ledger library.  This approach might be useful in general  in all cases when creating unit tests of an application that uses the BookKeeper API.  The `MockBookKeeper` behaves like the regular BK client  except it needs no bookies or zookkeeper. All ledgers and data are just kept in an hashmap in memory.  It is possible to inject failure in the sync/async calls  even after N steps. This is very useful to trigger failure in complex operations and cover this paths in unit tests.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1209 from merlimat/mock-bookkeeper
2018-02-27T00:35:41Z,,Merge branch 'master' of ../stream_storage_merge into merge_table_service
2018-02-27T00:35:09Z,,Prepare merging table service
2018-02-26T22:40:54Z,1206,Allow derived implementations of RackawareEnsemblePlacementPolicy  Leave public constructor so that it's possible to create a placement policy that derives from RackawareEnsemblePlacementPolicy.  For example  in Pulsar we have an isolation policy that works in conjunction with the rack-aware: https://github.com/apache/incubator-pulsar/blob/ac94698df6c66c4b84faa9f96db71f0019bf955e/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java#L45  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1206 from merlimat/master
2018-02-26T22:11:42Z,1204,Allow rackaware policy to be notified of any rack change  This PR is a port from Yahoo branch: https://github.com/yahoo/bookkeeper/commit/dbfd2073b6e687a5b4b9c56a0f0c3436f177db58  It adds a hook so that a placement policy implementation can add a way to notify the main rackaware policy that the rack mappings were updated.  This was used to have a specialized policy that keeps the mapping (bookie -> rack) in ZooKeeper. Whenever the new bookies are added (or updated)  the administrator would update the mapping and we need to start using the new settings.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1204 from merlimat/rack-aware-notification
2018-02-26T08:56:44Z,1123,BP-30: BookKeeper Table Service  Descriptions of the changes in this PR:  This BP is proposing adding a table (aka key/value) service component as a contrib module to the bookkeeper  which can later be used for metadata storage. This BP together with other BPs forms the ideas of  improving metadata management in bookkeeper.  BP Details: https://docs.google.com/document/d/155xAwWv5IdOitHh1NVMEwCMGgB28M3FyMiQSxEpjE-Y/edit#heading=h.56rbh52koe3f  Related BPs:  - BP-29: Metadata API Module #1123 - BP-28: Etcd Metadata Store #1113  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Venkateswararao Jujjuri (JV) <None>  This closes #1185 from sijie/bp_30_table_service
2018-02-26T08:52:25Z,1202,BP-31 BookKeeper Durability Anchor  Descriptions of the changes in this PR:  This is the anchor BP for durability related work. When sub BPs are created  this will be updated to reflect the sub BP numbers.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Master Issue: #1202  Author: JV Jujjuri <vjujjuri@salesforce.com> Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1138 from jvrao/BP-31-durability-anchor
2018-02-26T08:46:00Z,1113,BP-28: Etcd as metadata store  Descriptions of the changes in this PR:  This BP is exploring using Etcd as the metadata store.  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1113 from sijie/bp_28_etcd_metadata_store
2018-02-26T08:23:10Z,1195,Issue #1195 Handle optional fields gracefully in ReadExplicitLac response  Descriptions of the changes in this PR:  ExplicitLac and header of the last entry are optional fields in the protocol. Handle them as optionals in the response processing.  TestPendingReadLacOp.java test added by: Samuel Just <sjustsalesforce.com>  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> Signed-off-by: Samuel Just <sjustsalesforce.com>  Master Issue: #1195  Author: JV Jujjuri <vjujjuri@salesforce.com> Author: JV <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1196 from jvrao/bk-issue-1195-lacfix  closes #1195
2018-02-26T08:19:22Z,1203,Add Jenkins Configuration for Code Coverage nightly test  Add a job using Jenkins DSL to run every night a JaCoCo code coverage report which runs tests and sends the report to Coveralls.io  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1203 from eolivelli/code-coverage-dsl
2018-02-23T10:55:35Z,,Fix LifecycleComponentStarter
2018-02-23T09:20:29Z,1129,Upgrade JaCoCo and fix code coverage build system  - Upgrade JaCoCo to version 0.8.0 which supports Java 9 - Exclude generated sources from the NAR-plugin files - Update surefire configuration in order to not fail the build while using -Pcode-coverage  Author: Enrico Olivelli <eolivelli@apache.org> Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1129 from eolivelli/code-coverage-2
2018-02-23T08:02:32Z,1199,Provide default values for LedgerIdFormatter and EntryFormatter  Descriptions of the changes in this PR:  Provide default values for LedgerIdFormatter and EntryFormatter.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1199 from reddycharan/defaultformatter
2018-02-22T09:21:36Z,1198,Update committers list  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1198 from sijie/add_new_committers
2018-02-21T23:26:16Z,1097,Fix GSSAPIBookKeeperTest  Descriptions of the changes in this PR:  *Problem*  in GSSAPIBookKeeperTest  `InetAddress.getLocalHost().getHostName()` was used for adding principle to kdc keytab. However in the tests  it uses advertisedAddress (introduced by #1097).  So it causes authentication failed because server can't be found.  *Solution*  Change to use `Bookie. getBookieAddress(..)` to get the real hostname used by bookie for adding keytab entries.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1191 from sijie/fix_gssapibookkeeper_test
2018-02-21T09:30:00Z,1160,Dump config  Descriptions of the changes in this PR:  Dump config - add utility method to AbstractConfiguration to return config as string and log it - dump the config during the start of the BookieServer  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1160 from reddycharan/dumpconfig
2018-02-20T19:41:07Z,1189,Always reset interrupted state after catching InterruptedException  There's many places we did not do it. I've added it.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1189 from ivankelly/interrupt-thread
2018-02-20T19:39:01Z,1190,Test that we don't break compat with Yahoo custom version  We've been merging a lot of changes from yahoo's internal bookkeeper fork in the past months. The plan is that once everything is in  yahoo will move to using stock opensource bookkeeper. We need to ensure that this move goes smoothly  otherwise they wouldn't move. So this set of tests checks whether master will work with what they are running internally.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1190 from ivankelly/yahoo-bc
2018-02-20T19:37:42Z,1164,Issue #1164: TestTruncate#testPurgeLogs is flaky  Descriptions of the changes in this PR:  *Problem*  log segments are truncated in the background after TTL. the truncation is done asynchronously. so when we finish writing all the log records  the truncation might still not complete yet.  *Solution*  Improve the test case to wait until the last truncation attempt is completed before asserting the log segments  Master Issue: #1164  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1165 from sijie/fix_test_truncate  closes #1164
2018-02-20T18:42:21Z,1186,Propogate exception when bookie shutdown fails  When a bookie fails to shutdown cleanly  we should propogate the exception that caused the problem to the main thread.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1186 from ivankelly/prop-ex
2018-02-20T17:07:54Z,1187,Allow default methods in MavenClassloader callbacks  AsyncCallback.AddCallback has recently acquired a default method  which breaks the assumption that there is only one method on these callbacks. However  if does have a default method that calls the one method. This patch takes advantage of that to allow us to use AddCallback in tests.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1187 from ivankelly/groovy-callback-default
2018-02-20T13:26:59Z,1149,Disable tests reruns on dev profile  Sometimes you don't want the rerun because you _want_ to see the flake.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1149 from ivankelly/dev-rerun
2018-02-20T12:33:04Z,1184,Prune networks from previous runs before IT  If a build fails  it can leave networks around. Run prune before the integration tests to avoid this.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1184 from ivankelly/prune-networks
2018-02-20T10:20:29Z,1166,ISSUE #1166: Create `readonly` path for LocalBookKeeper and BookKeeperClusterTestCase  Descriptions of the changes in this PR:  This fixes #1166  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #1167 from sijie/create_readonly_znode  closes #1166
2018-02-20T10:18:27Z,1181,Allow to disable LZ4 compression in KeyValueStorageRocksDB  In some environments (eg: windows)  LZ4 is not statically linked with the RocksDB JNI library bundled in the jar. In this cases we need to allow to disable LZ4 compression on the SST tables.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1181 from merlimat/allow-disabling-lz4-in-rocksdb
2018-02-20T10:09:32Z,1183,Fix flaky travis build on checking license header  Descriptions of the changes in this PR:  *Problem*  In some environments  `BK_VERSION` is computed as `Downloading`  which is not a valid bookkeeper version. It fails the `dev/check-binary-license` script.  ``` [0K$ if [ "$TRAVIS_OS_NAME" == "linux" ]; then dev/check-binary-license ./bookkeeper-dist/server/target/bookkeeper-server-${BK_VERSION}-bin.tar.gz; fi tar: ./bookkeeper-dist/server/target/bookkeeper-server-Downloading: Cannot open: No such file or directory tar: Error is not recoverable: exiting now tar: ./bookkeeper-dist/server/target/bookkeeper-server-Downloading: Cannot open: No such file or directory tar: Error is not recoverable: exiting now tar: ./bookkeeper-dist/server/target/bookkeeper-server-Downloading: Cannot open: No such file or directory tar: Error is not recoverable: exiting now ```  *Solution*  Remove this `BK_VERSION` setting and use "*" in the file path.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #1183 from sijie/address_travis_yml
2018-02-20T09:08:16Z,,Fix type in README
2018-02-20T09:07:08Z,43,Update readme (#43)  - update readme  - fix the classpath in scripts
2018-02-20T08:19:45Z,42,Bump bk/dl version to 4.7.0-SNAPSHOT (#42)
2018-02-20T06:30:21Z,1141,MockBookKeeperTestCase failed on casting ByteBufList  Descriptions of the changes in this PR:  *Problem*  Issue #1141 introduces ByteBufList. But `MockBookKeeperTestCase` still assumes `ByteBuf`. So it fails somes test cases that use `MockBookKeeperTestCase`  *Solution*  Fix `MockBookKeeperTestCase` to expect `ByteBufList` instead of `ByteBuf`.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #1182 from sijie/fix_mock_bookkeeper_test_case
2018-02-20T05:55:16Z,1176,Cleanup client correctly in TestCompatOldClients#testFencingOldClient  Previously we had been mistakenly cleaning up the classloader twice.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1176 from ivankelly/kill-client-bc-test
2018-02-20T04:32:24Z,1097,Use BookieServer#getLocalAddress as the identifier in the test  Descriptions of the changes in this PR:  *Problem*  Issue #1097 introduced using `loopback` nic as the bookie server identifier. However a few test cases construct the bookie socket address using `InetAddress.getLocalHost()` and the bookie port. This bookie socket address can be different from the actual socket address that a bookie is advertising to zookeeper. It will cause test cases fail with certain network settings.  *Solution*  This change use `BookieServer#getLocalAddress()` to retrieve the actual bookie socket address. so it would respect to the server configuration and use the right socket address in the test.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1172 from sijie/use_bookie_server_get_local_address
2018-02-20T04:30:51Z,979,Enforce zkAcls on initNewCluster  Descriptions of the changes in this PR:  initNewCluster was introduced #979. The new command doesn't honor to zookeeper acls settings. This change is to change those zookeeper calls to use `zkAcls`.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1171 from sijie/enforce_acls
2018-02-20T02:26:03Z,1180,V2 decoder marks the reads index of the payload on write  This means that any storage implementation that receives that payload  can reset the reader index  without jumping into bytes it knows nothing about.  This was the source of an issue when using V2 protocol with DbLedgerStorage where the data could not be successfully read back from the ledger.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1180 from ivankelly/broken-v2-rocks
2018-02-19T23:49:43Z,1178,Fix name on smoke test in pom  It says backwards compat  should be integration  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1178 from ivankelly/smoke-test-name
2018-02-19T23:47:56Z,1179,Handle for 4.6.0 and 4.6.1 specially in bc test shutdown  There is a race in 4.6.0 and 4.6.1 which can cause the zk session to be leaked. The bc test should take this into account  and wait for the session for expire before continuing.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1179 from ivankelly/wait-longer
2018-02-19T23:44:12Z,1175,Create a forked JVM for each bc test  Until now  BC tests have been running in the maven processes because they do funny stuff with the classloader which didn't seem to work with later versions of the surefire plugin. However  using a version of surefire less than or equal to 2.8.1  we can use useSystemClassLoader to the same effect  and therefore fork a JVM for each test. This is desirable to isolate the tests from each other.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1175 from ivankelly/branch-per-bc-test
2018-02-19T23:43:01Z,1174,Use travis_wait on running mvn test on travis  Descriptions of the changes in this PR:  *Problem*  The travis build can take more than 30 minutes  which exceeds the default limit. so the travis builds on master usually fail  *Solution*  Configure the travis build to use `travis_wait` and configure a higher timeout value.  This was set in dlog travis build : https://github.com/apache/distributedlog/blob/master/.travis.yml#L41  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1174 from sijie/use_tick_toc
2018-02-19T22:59:15Z,41,Introduce IncrementOption to support `incrementAndGet` (#41)
2018-02-19T22:59:02Z,40,Cleanup - remove unneeded test cases (#40)  This fixes #34
2018-02-19T21:59:41Z,1173,Introduce "IGNORE IT CI" to ignore integration tests ci result  Descriptions of the changes in this PR:  *Problem*  Integration tests ci is not very reliable at this moment. so most of the time we have to "IGNORE CI" to allow changes to be merged. However "IGNORE CI" is a bit too ambiguous  which can potentially ignore other CI results.  *Solution*  This change introduces "IGNORE IT CI" to ignore integration tests ci results only.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1173 from sijie/ignore_integration_tests
2018-02-19T20:18:25Z,1177,Cleanup threads from old clients in BC tests  Some old clients don't clean up their threads correctly. This patch introduces a thread reaper  which will check if a test has left any threads running  and try to clean them up if they have.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1177 from ivankelly/thread-reaper
2018-02-19T10:14:57Z,,Cleanup - remove `ByteBufUtils`  `ByteBufUtils` is a duplication of netty `ByteBufUtil`.
2018-02-19T10:07:06Z,,Cleanup - remove writer api from table
2018-02-19T08:18:28Z,1123,BP-29 (task 2) : Make LedgerManagerFactory a pure interface  Descriptions of the changes in this PR:      The logic in LedgerManagerFactory#newLedgerManagerFactory is effectively the logic works for zookeeper based implementation.     In order to produce a clean metadata api  this change is moving this logic to AbstractZkLedgerManagerFactory.  Master Issue: #1123  This change is based on #1127. Only the second commit ce35173 is to review in this PR.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1128 from sijie/make_ledger_manager_factory_interface
2018-02-19T08:10:53Z,1103,ISSUE #1103: Add channel TLS counters  (bug W-4482570)  Add counters to track - active TLS - active non-TLS channel connections - failed TLS handshakes - failed connections  Also  Added tests to verify counters Drain pendingOps on TLS handshake failure  Master Issue: #1103  Author: Kishore Udayashankar <kudayashankar@salesforce.com> Author: kishorekasi <kkasiud1@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1106 from kishorekasi/tls-stats  closes #1103
2018-02-19T07:54:18Z,1139,ISSUE #1139: Add debug to replication fencing  Descriptions of the changes in this PR:  When ledger is fenced  the client may get write error. Not having enough logging in this area making debugging harder. Optimised the code in addition to adding more logging in this area.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Master Issue: #1139  Author: JV Jujjuri <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1140 from jvrao/bk-issue-1139  closes #1139
2018-02-19T07:17:20Z,1162,ISSUE #1162: Test for unsetSuccessAndSendWriteRequest with LedgerHandleAdv  Descriptions of the changes in this PR:  Add a test case to verify unsetSuccessAndSendWriteRequest with LedgerHandleAdv out of order writers which forces ensemble change.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Master Issue: #1162  Author: JV Jujjuri <vjujjuri@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1163 from jvrao/bk-issue-1162-test1  closes #1162
2018-02-19T07:11:05Z,1169,Issue #1169 Upgrade Surefire plugin to 2.20.1  **Context**  We at Salesforce have been experiencing a series of hard to nail down test failures related to some of our changes causing Bookkeeper tests occasionally hanging up until they were terminated by Maven / Surefire. What's been making it harder to figure out was that the issue was only reproducing on Jenkins  not locally  and the lack of thread dumps along with Surefire failing to produce reports for these tests  making them next to invisible in Jenkins output.  **Related**  Issue #463 / PR #481 changes help terminate tests hanging in `Before` or `After` by changing `Test` based "local" timeouts to `Rule` based "global" ones.  **Proposed changes**  Upgrade Surefire plugin to 2.20.1 which has a few related [fixes and improvements since 2.19.1](https://issues.apache.org/jira/browse/SUREFIRE-1413?jql=project%20%3D%20SUREFIRE%20AND%20fixVersion%20in%20(2.20%2C%202.20.1)): * [SUREFIRE-1322](https://issues.apache.org/jira/browse/SUREFIRE-1322) Surefire and Failsafe should dump critical errors in dump file and console * [SUREFIRE-1435](https://issues.apache.org/jira/browse/SUREFIRE-1435) Improve Thread Dump etc  (bug W-4700391)  Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1170 from pasha-kuznetsov/issue-1169-surefire-2-20-1  closes #1169
2018-02-18T12:08:20Z,1108,Replace DoubleByteBuf with ByteBufList  This PR aims at a better approach to fix the issue reported in #1108  Instead of using `CompositeByteBuf` which has the downside of needing multiple object allocations per each usage (~7-8)  we should have a way to aggregate multiple buffers into a single "logical" frame with no additional overhead.  This PR introduces a `ByteBufList` class which is just a holder of a list of buffers  without imitating the `ByteBuf` API. You can pass a `ByteBufList` to the channel and have the encoder take care of the multiple writes.  Instances of ByteBufList are ref-counted and released to a pool after the write is completed. There are no object allocations or memory copies involved.  Author: Matteo Merli <mmerli@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #1141 from merlimat/bytebuf-list-master
2018-02-18T08:53:36Z,1152,Issue #1152: stats for durability violations in write/read path  Descriptions of the changes in this PR:  Durability contract demands that there are WQ copies spread across fault zones as per the ensemble placement policy. There are lots of areas where this contract is violated.  Add stats to track two areas that are well: a. Write Path: if the write fails after satisfying AQ b. Read Path: If the checksum error is detected on the read path  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Master Issue: #1152  Author: JV Jujjuri <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1155 from jvrao/bk-ssue-1152-stats-1  closes #1152
2018-02-18T08:44:32Z,966,ISSUE #966: Expose quorum write complete latency to the client  Add quorum write complete latency to the bookkeeper client API. This allows callers to find out exactly how long the quorum write took for diagnostic purposes.  (bug W-3616193) Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> [Fixed merge conflicts  added testing] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #970 from athanatos/forupstream/stats1/qlatency  closes #966
2018-02-17T08:12:19Z,1075,ISSUE #1075: Add a noop digest implentation  This digest will add a predefined digest key without actually computing it. This can be used for testing or in situations/use-cases where digest is considered overhead.  (bug W-3245776) Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> [Adapted to current patch] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1087 from athanatos/forupstream/misc/dummy  closes #1075
2018-02-17T07:51:13Z,1130,handle zookeeper session expire in zk ledger manager  Descriptions of the changes in this PR:  cherry-pick twitter/bookkeeperdfcda5cc2efdc03db99fe126499f8e3347f50484  This includes a test case to test `AbstractZkLedgerManager`  including      1) create/delete/read/write ledger metadata     2) register/unregister listeners     3) handling various watched events  This also fixes a couple of cases in the `AbstractZkLedgerManager` what is caught with test case.  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #1130 from sijie/fix_session_expires
2018-02-17T07:05:53Z,1156,Call static methods and build callbacks in MavenClassLoader  To properly test some functionality we need to be able to call static methods (e.g. for the creation of ByteBuf)  and also to be able to build callbacks (e.g. to call async methods).  This patch implements methods for doing this. For static methods  you need to pass the className  the method name and a list of arguments. It first tries to find the method using non-primitive types  but falls back to trying primative types if possible.  Invokation looks like: ``` cl.callStaticMethod("org.apache.bookkeeper.client.BKException"                      "create"  [-101]) ```  For callbacks you specify an interface and the a groovy closure. It is assumed the closure will take as many arguments as the callback. The invokation handler doesn't check the method name called on the callback object  so it only works with callbacks with a single method.  Invokation looks like: ``` def callback = classLoader.createCallback(     "org.apache.bookkeeper.client.AsyncCallback\$AddCallback"          { rc  _ledger  entryId  ctx ->             // do something         }) ```  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1156 from ivankelly/mvn-cl-adv
2018-02-17T06:41:06Z,1085,[MERGE YAHOO REPO] YBK-160: Doing distributed random verification of ledger fragments  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original change is: https://github.com/yahoo/bookkeeper/commit/280e39ee https://github.com/yahoo/bookkeeper/commit/21c23ff1 https://github.com/yahoo/bookkeeper/commit/b1139ac9 YBK-160: Doing distributed random verification of ledger fragments YBK-160: Addressing Review comments and fixing test YBK-160: Doing verification only for stored entries  Author: Govind Menon <govindappumenon@gmail.com> Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1085 from jiazhai/cherry_picks/i_230
2018-02-17T06:36:13Z,1123,BP-29 (task 1) : Introduce `metadataServiceUrl`  Descriptions of the changes in this PR:  - introduce a new setting `metadataServiceUrl` for replacing implementation specific settings `zkServers` and `zkLedgersRootPath`. - introduce a metadata driver interface for managing all the metadata interface - introduce a metadata driver manager for resolving `metadataServiceUrl` and load specific metadata service url based on service scheme. This   would replace configuring multiple different manager classes using one single `metadataServiceUrl`.  Please NOTE: this change only introduce the new classes  but it doesn't change the client and bookie to use the new setting. It will be done in a subsequent change.  Master Issue: #1123  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #1127 from sijie/introduce_service_uri
2018-02-17T00:11:32Z,1154,Fix the travis config on building dlog module  Descriptions of the changes in this PR:  The original intention is building dlog module on 1) branches (non pull requests) 2) pull requests that modify dlog module. However the check logic was wrong in travis.yml. This change fixes the travis yml.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #1154 from sijie/debug_travis
2018-02-16T17:22:28Z,1000,BP-27 (part 1): New BookKeeper CLI Skeleton  Descriptions of the changes in this PR:  This is first implementation of BP-27 (#1000). This change includes:  - introduce a bookkeeper-tools module for keep the commands and also for developing the new CLI - introduce 4 command groups: `cluster`  `bookie`  `client`  `metadata`. - move 3 command: `listbookies` under `cluster` group  `lastmark` under `bookie` group  `simpletest` under `client` group. - unit tests for those 3 command.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Yiming Zang <yzang2016@gmail.com>  This closes #1094 from sijie/bookie_shell_refactor
2018-02-16T17:05:52Z,1158,Install pulsar keys when installing yahoo custom image  The pulsar installation script for installing the yahoo custom version was missing a line to import the keys needed to verify the tarball.  This patch adds the line  and also deletes the original version of the script which was in the wrong location.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1158 from ivankelly/pulsar-script-again
2018-02-16T17:04:02Z,1109,ISSUE #1109: Error out pending ops on TLS key mismatch exception  Descriptions of the changes in this PR:  (W-4479117)  - Add Testcase to test certificate mismatch scenario - On tls handshake failure  replace future.get() with channel. - Print a warning message on exception caught in a netty context on connection close  drain pendingOps  rev charan  Master Issue: #1109  Author: Kishore Udayashankar <kudayashankar@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1110 from kishorekasi/tls-keymismatch  closes #1109
2018-02-16T16:58:52Z,1124,Issue #1124: Lower memory usage in GarbageCollectionThread while extracting all ledger meta data  Descriptions of the changes in this PR:  The PR contains the fix to cleanup non-existent ledger log entries from EntryLogMetadata while extracting all log entries.  Master Issue: #1124  Author: Kishor Patil <kpatil@yahoo-inc.com>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1125 from kishorvpatil/gcThreadFix  closes #1124
2018-02-16T16:39:52Z,1121,[MERGE YAHOO REPO] AsyncReadLastEntry should trigger callback with error when ledger is empty  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original change is: https://github.com/yahoo/bookkeeper/commit/9560ab0f AsyncReadLastEntry should trigger callback with error when ledger is empty  Author: Jia Zhai <zhaijia@apache.org> Author: Matteo Merli <mmerli@yahoo-inc.com> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1121 from jiazhai/cherry_picks/i_167
2018-02-16T16:29:23Z,1099,Fix auditor shutdown logic and move decommision tests out of BookKeeperAdminTest  Descriptions of the changes in this PR:  - the auditor shutdown logic is problematic. most of the tests can finish quickly however it spend more 30 seconds on shutting down.   because the shutdown logic will be blocked until `awaitTermination` timed out. - most of the tests in BookKeeperAdminTest don't need 6 bookies. so move the decommission tests to a separate class.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  Jia Zhai <None>  This closes #1099 from sijie/improve_admin_tests
2018-02-16T08:50:33Z,1148,Run integration tests on precommit  Builds integration test docker images and runs all tests under tests/.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1148 from ivankelly/jenkins-bc2
2018-02-16T08:46:59Z,1151,Add script missing from custom yahoo docker image  427eb81 references a script which I never added to the commit  which means the image doesn't build.  This commit adds the script.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1151 from ivankelly/missing-script
2018-02-15T23:27:33Z,1108,Replace DoubleByteBuf with CompositeByteBuf because of perf regression with Netty > 4.1.12  Starting from Netty-4.1.13 some internal behavior has changed and that has introduced a performance penalty when using the `DoubleByteBuf`.  The problem resides in the fact that netty falls back to calling `nioBuffers()` and that is creating an array of unpooled direct `ByteBuffers`. That is pretty heavy and the JVM is taking 1 to 3 seconds GC pause to reclaim them.  Short term fix is to go back to `CompositeByteBuf` which doesn't have the problem (the `DirectByteBuffer` instances are pooled and reused). I have verified that GC is back to normal after this patch.  More mid-term  since `CompositeByteBuf` allocates a bunch of objects (counted ~10 per entry) I have a change to replace it with a `ByteBufList` holder class. I have the change almost done but it will take a while to test it to verify corner cases.  This should be considered for a 4.6.2 fix release.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1108 from merlimat/composite-byte-buf-master
2018-02-15T22:40:36Z,1150,Upgrade arquillian-cube to latest version (0.15.1)  This gets rid of an ugly exception that the framework was throwing. https://github.com/arquillian/arquillian-cube/issues/957  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1150 from ivankelly/arq-upgrade
2018-02-15T14:43:26Z,1146,Include yahoo custom version in all versions image  To ensure compatibility between versions during the merge  we need the yahoo custom version of bookkeeper.  The most straightforward way to get this version is through pulsar. It's distributed as part of the pulsar distribution  with scripts to start it and all.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1146 from ivankelly/yahoo-in-image
2018-02-15T14:42:09Z,1133,Integration smoke test  Most basic integration test we can have. - Boots a cluster - Writes a ledger - Reads back the ledger - Shutdown the cluster  If this test fails  something is very wrong.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1133 from ivankelly/smoke-test
2018-02-14T18:09:31Z,1135,Specify repo in MavenClassLoader  This is required for testing yahoo's custom bookkeeper client  as it doesn't reside in maven central.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1135 from ivankelly/classloader-repo
2018-02-14T16:35:37Z,1142,Gather disk information before CI build  I suspect that we are getting quite a few flakes because of over-full disks in the CI workers. I'd like to confirm this hypothesis and gather some information before taking corrective action.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #1142 from ivankelly/df-on-build
2018-02-14T15:13:21Z,1131,Split all versions images into released and latest  The released tarballs rarely change  while the latest changes every build. This patch splits the all version image into a base images with the released tarballs  and a image which includes all released and the very latest tarball.  This allows the released image to be cached/pushed to dockerhub  which will in turn allow us to speed up our CI builds that use the all version image.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1131 from ivankelly/image-split
2018-02-13T16:52:54Z,1132,Fix shutdown race which left ZK session open  There was a race when shutting down a bookie  where both the main thread and the shutdown hook thread would try to close the bookie service. This would result in them racing to set the lifecycle state and neither would end up cleaning up properly. Specifically  the starter latch would be counted down  so the main thread would start to close  then the shutdown hook would run  try to close  and get an exception when it tried to change the state. Once the all shutdown hooks end  the process exits  even if main hasn't completed. This leaves the zookeeper session open.  I've removed the close from main(). The shutdown hook always runs on a graceful shutdown  so that's the place to do the cleanup.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1132 from ivankelly/shut-race
2018-02-13T16:50:36Z,1145,Require green CI before merge  CI has been broken since the 2018-02-06  due to a non-green patch being merged. With the recent flake fixes  CI should only go green if there's a good reason. More over  any remaining problems will get fixed faster  if people non-green builds start being a pain for people.  So  this patch blocks merging with the merge script  if all checks are not green. It can be overriden by adding a comment with the text "Ignore CI" (case insensitive)  on the PR.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Dave Rusek <dave.rusek@gmail.com>  Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1145 from ivankelly/require-green
2018-02-13T14:09:32Z,1137,Fix test regression due to change in default ledger manager  TestBenchmark#testReadThroughputLatency() regressed due to the change in 3ddc5db  where the default ledger manager was changed from flat to hierarchical.  The fix is to use flat for this test. I've also cleaned up the test a little  and added some code to the benchmark to make the test run faster.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1137 from ivankelly/bench-broke
2018-02-13T09:51:54Z,1143,Issue-1143 Error on Java 9 using BookKeeperAdmin API and bookkeeper-server-shaded  Update Maven Shade Plugin to 3.1.0  Relates to issue #1143  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1144 from eolivelli/fix/update-shade-plugin
2018-02-10T03:03:28Z,1120,[MERGE YAHOO REPO] Only reorder read sequence if any bookie is not available  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original change is: https://github.com/yahoo/bookkeeper/commit/1ddd14a1 Only reorder read sequence if any bookie is not available  Author: Jia Zhai <zhaijia@apache.org> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1120 from jiazhai/cherry_picks/i_161
2018-02-09T14:25:55Z,1134,Remove spammy log messages in Journal  Looks like they were put in while debugging and not cleaned up.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1134 from ivankelly/spam-log
2018-02-09T14:23:45Z,1136,Entry count parameters for BenchBookie  So that they can be added in the test  to make the test run faster and not timeout in CI and ruin an otherwise good test run.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1136 from ivankelly/bench-flake
2018-02-06T06:12:46Z,1113,BP-29: Metadata API module  Descriptions of the changes in this PR:  Related to BP-28 (#1113)  this proposal is to propose how we want to organize the metadata modules  to support different metadata storage implementation.  Master Ticket: #1123  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1117 from sijie/BP-29-metadata-store-api
2018-02-06T06:00:05Z,39,Fix compilation warnings (#39)
2018-02-06T00:15:09Z,38,Consolidate the protobuf definition used in state store and in client/service (#38)  state store and client/service were started as two different projects  and were doing in parallel. so there are some duplication and overlaps on defining the k/v operations.  now these two projects were put together  it would be good to consolidate the protobuf definition to have it only exist in one place.
2018-02-05T04:35:27Z,1119,Use BookieServer#getLocalAddress() in BookieClientTest  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #1119 from sijie/fix_bookie_client_test
2018-02-05T01:49:55Z,37,Use the kv api defined in client for statelib (#37)  * Consolidate statelib to use kv api    * Add ToString
2018-02-03T17:33:14Z,1118,Travis CI should not use a hardcoded release version for check-release script  Descriptions of the changes in this PR:  CI is going to be broken when we bumped to 4.8.0.  since travis CI is using a hardcoded version for check-release script.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  This closes #1118 from sijie/fix_check_release_script
2018-02-03T17:32:25Z,1116,Cleanup registration client interface  Descriptions of the changes in this PR:  This change is mainly to remove `zookeeper` reference from metadata interface. The existence of `Optional<ZooKeeper>` is to allow passing an external zookeeper client to bookkeeper  so bookkeeper can reuse that client instance. That is useful for services like pulsar broker  which they can only instantiate a zookeeper client and pass the zookeeper client around to construct bookkeeper client. However  this pollutes the registration client interface  change the method to `Optional<Object>` as an optional context object and let the implementation interpret it.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1116 from sijie/clean_registration_client_interface
2018-02-03T17:31:01Z,1115,Change default ledger manager factory from `Flat` to `Hierachical`  Descriptions of the changes in this PR:  the discussion can be found at : http://mail-archives.apache.org/mod_mbox/bookkeeper-dev/201802.mbox/%3CCAO2yDyYdZ8%3D4tViNX1uL0Z67KX78JPD2XBGd7ermjO%3DK%3DscvcQ%40mail.gmail.com%3E  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #1115 from sijie/flip_default_ledger_manager
2018-02-03T05:36:02Z,1111,Update PR template  Descriptions of the changes in this PR:  - JIRA is not used anymore. Remove it from PR template.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1111 from sijie/update_pr_template
2018-02-03T00:37:16Z,1112,Update release schedule  Descriptions of the changes in this PR:  - update current feature release to 4.7.0 and its release window - add a section in release guide for instructions to update release schedule  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1112 from sijie/update_release_schedule
2018-02-03T00:36:01Z,1090,Revamped downloads page  This PR addresses issue #1090 and significantly revamps the downloads page to bring it in line with Apache standards. It also makes some changes to the website's general setup and build process to make that process less brittle.  Author: Luc Perkins <lucperkins@gmail.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1104 from lucperkins/lperkins/asf-compliance
2018-02-03T00:34:12Z,1097,Use loopback network interface for testcases.  Descriptions of the changes in this PR:  - tests would be more reliable irrespective of the environment (and availability of network connection)  if the loopback address is used in testsuites. - unless loopback address is set explicitly  in my env (while on company's VPN)  UpdateCookieCmdTest is failing most of the times. - currently allowLoopback is set to true in BookKeeperClusterTestCase  but it doesn't make Bookies to use loopback interface address. - loopback network interface should be set explicitly as listening interface to use loopback address.  Note:  1) will create Issue for this depending on the PR feedback. 2) in other places (where setAllowLoopback is set) also loopback interface needs to be set  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Samuel Just <sjust@salesforce.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1097 from reddycharan/loopbackaddress
2018-02-03T00:32:16Z,1024,BP-26 (task 4): run dlog tests when pull requests modify dlog modules  Descriptions of the changes in this PR:  - enable dlog tests on all post commit CI jobs - for pull requests  only run dlog tests on travis CI and only when the pull requests modify dlog modules.  Master Issue: #1024  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Jia Zhai <None>  This closes #1096 from sijie/enable_dlog_ci
2018-02-03T00:31:07Z,1024,BP-26 (task 3) : Build dlog shaded jar in bookkeeper way  Descriptions of the changes in this PR:  - discard dlog shaded artifacts and build `distributedlog-core-shaded` jar similar as `bookkeeper-server-shaded` - discard bookkeeper-server shaded artifact - move all shaded related tests to `tests/shaded`  Master Issue: #1024  Author: Sijie Guo <sijie@apache.org>  Reviewers: Dave Rusek <dave.rusek@gmail.com>  Jia Zhai <None>  Yiming Zang <yzang2016@gmail.com>  This closes #1095 from sijie/dlog_shade_jar
2018-02-03T00:26:45Z,365,ISSUE #1067: PendingReadOp: recovery  return NoSuchEntry on wQ-aQ+1 errors  In the case of a recovery read  we rely on a NoSuchEntry response on the first missing entry to determine the final LAC.  As such  we need to consider an entry to be gone once we see wQ-aQ+1 NoSuchEntry/Ledger responses from bookies.  Otherwise  a zombie bookie can prevent ledger recovery from suceeding indefinitely (it'll hit the timeout each time).  There was some preexisting logic from https://issues.apache.org/jira/browse/BOOKKEEPER-365 b6c1a8bbd7c2d44c2edb59d9938fa073f6f478de  but it seems to have been too conservative in that it waited for all responses and required that there were no other errors present.  It seems now to be unnecessary  and so has been removed.  TestParallelRead.testFailParallelReadMissingEntryImmediately seemed to rely on the previous logic working outside of recovery  but I believe it was really meant to test the recovery case  so it has been adjusted.  (bug W-4651456) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Samuel Just <sjust@salesforce.com>  Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1077 from athanatos/forupstream/wip-4651456-recovery-read  closes #1067
2018-02-03T00:22:56Z,1063,ISSUE #1063: Write keeps refCnt longer  Descriptions of the changes in this PR:  Current code keeps the toSend buffers until client receives resonses from all wq bookies. From the senders perspective  It is not required to keep the refcount on it at the PendingAddOp level  as the ref is taken at bookie client level.  Keeping these buffers longer will increase the memory pressure on the client.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Master Issue: #1091  Author: JV Jujjuri <vjujjuri@vjujjuri-ltm2.internal.salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1091 from jvrao/bookkeeper-1063  closes #1063
2018-02-02T07:11:13Z,1000,BP-27: New BookKeeper CLI  Descriptions of the changes in this PR:  `BookieShell` is the current bookkeeper cli for interacting and operating a bookkeeper cluster. However  this class is getting bigger with more commands added to it. It is facing a few problems for maintenance and extensibility.  - All commands sit in one gaint shell class. It is hard to tell if a command is used for managing a bookie only or if a command is used for managing a cluster. - Lack of unit tests. This class has very few test coverage. Most of the commands (introduced in early days) don't have a unit test. - Lack of extensibility. If a new function component (for example  dlog) is introduced  it is a bit hard to extend this CLI to have commands for new function component.  All these problems lead to the proposal here. This proposal is to propose refactoring/redesigning the bookkeeper CLI to allow better managebility for maintenance  better test coverage and better extensibility for new function components.  Master Issue: #1000  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  This closes #1093 from sijie/BP_27_new_bookkeeper_cli
2018-02-02T04:11:30Z,1098,Run checkstyle plugin at validate phase  Descriptions of the changes in this PR:  Most of the modules run checkstyle plugin at validate phase. However a few modules are still running at `test-compile` phase. Update the checkstyle plugins in those modules to run at validate phase. So the behavior is consistent across the project.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #1098 from sijie/run_checkstyle_at_validate_phase
2018-02-02T02:37:59Z,605,Issue #605: bk_server.conf wrong default logSizeLimit  It's commented out  but the value is invalid. This patch changes it to match the default in ServerConfiguration.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1105 from ivankelly/entry-log-size  closes #605
2018-02-01T19:21:20Z,889,BP-14 Implementation of WriteFlag.DEFERRED_SYNC on Journal  Implement WriteFlags.DERERRED_SYNC on Bookie side. In case of DEFERRED_SYNC write Journal will early acknowledge the write  just after flushing the buffer to the OS cache  but before waiting for an fsync.  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #889 from eolivelli/bp14-writeflags-journal
2018-02-01T19:19:29Z,1092,Dont log ledgermetadata which contains password.  Descriptions of the changes in this PR:  Dont log ledgermetadata contains password used to create the ledger. Logs are not supposed to reveal such sensitive info.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1092 from reddycharan/fixpasswordlog
2018-01-31T21:13:33Z,1024,BP-26 (task-2): make distributedlog modules be able to be built in bookkeeper repo  Descriptions of the changes in this PR:  This is the second sub-task of #1024. This change is based on [BP-26/distributedlog_merge](https://github.com/apache/bookkeeper/tree/BP-26/distributedlog_merge) branch (created at #1068).  This change includes:  - move the findbugs.xml and checkstyle/suppression.xml from distributedlog-build-tools to bookkeeper buildtools module. - mockito: dlog is using mockito 1 while bk is using mockito 2. this change make dlog modules use the mockito dependencies defined at root pom.xml. - change the description from "Apache DistributedLog" to "Apache BookKeeper :: DistributedLog". - change the versions from `0.6.0-SNAPSHOT` to `4.7.0-SNAPSHOT`. - fix the compilation issues with current latest bk  This PR *DOESNT* change the group id of distributedlog modules. They will remain using "org.apache.distributedlog" as the group id.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Yiming Zang <yzang2016@gmail.com>  This closes #1069 from sijie/compile_distributedlog
2018-01-31T19:16:33Z,611,ISSUE #611: restrict max ensemble change numbers  Descriptions of the changes in this PR:  Add max ensemble change number check  Master Issue: #611  Author: Arvin <arvindevel@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #925 from ArvinDevel/restrict_ensemble_num  closes #611
2018-01-31T19:14:31Z,1057,[MERGE YAHOO REPO] Support DbLedgerStorage in LedgerCmd to get list of logger files for a given ledgerId  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original change is: https://github.com/yahoo/bookkeeper/commit/384414b6 Support DbLedgerStorage in LedgerCmd to get list of logger files for a given ledgerId  Author: Jia Zhai <zhaijia@apache.org> Author: Rajan <dhabalia.me@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1057 from jiazhai/cherry_picks/i_209
2018-01-31T19:13:35Z,1073,ZkUtils.asyncDeleteFullPathOptimistic: pass -1 as znodeVersion to parents  znodeVersion for the child won't necessarily match the parents.  This isn't really meaningful to test since the version of the internal nodes for all current users will be 0  but fixing it at least will reduce confusion  Signed-off-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com> [Adapted to current patch] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #1073 from athanatos/forupstream/misc/zkutilsfullpath
2018-01-31T19:02:40Z,,Merge branch 'master' into BP-26/distributedlog_merge
2018-01-31T18:59:04Z,,Merge remote-tracking branch 'apache/master' into copy_distributedlog
2018-01-31T11:31:02Z,36, Remove `type` from StorageContainerRequest (#36)
2018-01-30T21:14:44Z,1089,Increase job timeout to 200 mins  Descriptions of the changes in this PR:  the postcommit jobs have been timedout for a few days. This change is to increase the build timeout to get all jenkins job enough time to complete.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1089 from sijie/increase_job_timeout
2018-01-30T20:10:17Z,903,Lombok doesn't work with groovy  So the Cleanup annotation does nothing. I've changed it in the BC test to a traditional try {} finally {} since groovy doesn't do try-with-resources either  and its equivalent doesn't do multiple objects.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1084 from ivankelly/lombok-dont-work
2018-01-30T20:08:25Z,903,Test that old clients work with current server  Test that old clients(4.2.0 onwards) can create  open  read  write ledgers on the latest version of the server.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1083 from ivankelly/new-server-old-client
2018-01-30T20:06:42Z,1079,ISSUE #1079: use CachingStatsProvider underly FinagleStatsProvider  Descriptions of the changes in this PR: use CachingStatsProvider underly FinagleStatsProvider to avoid creating a lot of brand new object  Master Issue: #1079  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1082 from jiazhai/issue-1079  closes #1079
2018-01-30T20:04:30Z,1078,ISSUE #1078: use CachingStatsProvider underly PrometheusMetricsProvider  Descriptions of the changes in this PR: - add CachingStatsProvider to wrapper PrometheusMetricsProvider; - add test verify the cache.  Master Issue: #1078  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1081 from jiazhai/issue-1078  closes #1078
2018-01-30T20:02:49Z,1076,Fixing validation in BookieShell.scanEntryLogForSpecificEntry  Descriptions of the changes in this PR:  https://github.com/apache/bookkeeper/commit/086537beda9427c057a286ad6c4614659da6ed7f has messed up conditional checks in BookieShell.scanEntryLogForSpecificEntry. Reverting those changes.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1076 from reddycharan/fixScanEntryLogForSpecificEntry
2018-01-30T20:00:34Z,1074,URLDecode key/cert paths in TestTLS  In TestTLS we load keys/certs from the classpath  which means we get the filename as a URL. Since it is a URL it is URL encoded for special characters. Usually this is not an issue  but in the case that there are special characters in the path  these will be encoded  and then when we try to open the file we get a FileNotFoundException. This occurs on jenkins  when there are two parallel builds on the same job (it adds a N to the workspace name)  and was causing all TLS tests to fail in that case.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1074 from ivankelly/tls-fix
2018-01-30T19:48:31Z,1055,[MERGE YAHOO REPO] YBK-154: Add sleep after finding free port given OS time to release it  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original change is: https://github.com/yahoo/bookkeeper/commit/40196007 YBK-154: Addign sleep after finding free port so the OS has time to release it  Author: Robert Evans <evans@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1055 from jiazhai/cherry_picks/ii_205
2018-01-30T19:46:22Z,934,ISSUE #934: Additional stats to track netty latencies in PCBC  Descriptions of the changes in this PR:  (bug W-4058645) add metrics to measure netty stack latency - Counters to track outstanding reads/writes operations - Collect Netty IO rate and latency histograms  rev ayegorov  PerChannelBookieClient: add additional stats  Adds: - exceptionCounter - connectTimer - addEntryOutstanding - readEntryOutstanding - nettyOpLogger  Signed-off-by: Kishore Kasi Udayashankar<kudayashankarsalesforce.com>  Master Issue: #934  Author: Kishore Udayashankar <kudayashankar@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #971 from kishorekasi/pcbc-stats  closes #934
2018-01-30T08:12:47Z,1080,Add release date for 4.6.1 to the website  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1080 from eolivelli/update-website-4.6.1
2018-01-30T08:04:29Z,980,Release notes for 4.6.1  Author: eolivelli <eolivelli@apache.org> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #980 from eolivelli/releasenotes461
2018-01-30T02:09:45Z,22,Cleanup unused protobuf definitions (#22)
2018-01-30T01:38:48Z,21,Remove OrderedBy annotation (#21)
2018-01-29T22:56:14Z,1030,Cleanup classloaders in backward-compat tests  The BC tests run in the maven process (for classloader reasons)  so we need to make sure we clean stuff up to avoid running out of memory  as the classloaders will load a bunch of jars into memory.  Master Issue: #1030  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1070 from ivankelly/cleanup-cl
2018-01-29T19:09:40Z,,Format the indent to 4 spaces (to align with bookkeeper coding style)
2018-01-29T15:42:37Z,,repackage under `org.apache.bookkeeper`
2018-01-29T00:37:37Z,,remove "distributedlog_" from module names
2018-01-28T09:34:26Z,1049,ISSUE #1049: Add PERMITTED_STARTUP_USERS to limit bookie startup users  Starting the bookie as the wrong user (such as root) can cause problems as the on disk files may end up with the wrong permissions.  Add PERMITTED_STARTUP_USERS to protect against this kind of operational error.  (bug W-3599751) Signed-off-by: Dustin Castor <dcastorsalesforce.com> [Adapted to current code] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1065 from athanatos/forupstream/permitted-startup-users  closes #1049
2018-01-28T09:33:20Z,1030,Move backward compat tests into their own java package  Master Issue: #1030  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1064 from ivankelly/bc-java-package
2018-01-28T09:30:15Z,933,ISSUE #933: Add support for PEM Key file formats  (bug W-4203319) TLS authentication to support PEM format X.509 certificates along with JKS and PKCS12 formats.  Added another KeyStore Type to the list of formats (JKS  PKCS12) currently supported during SSLContext creation.  rev ayegorov  Signed-off-by: Kishore Kasi Udayashankar <kudayashankarsalesforce.com>  Descriptions of the changes in this PR:  (PR description content here)...  Master Issue: #933  Author: Kishore Udayashankar <kudayashankar@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #965 from kishorekasi/tls-pem  closes #933
2018-01-26T19:42:50Z,,Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog
2018-01-26T19:42:17Z,,Move distributedlog-io module
2018-01-26T19:39:06Z,,Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog
2018-01-26T19:38:41Z,,Move distributedlog-core module
2018-01-26T19:35:24Z,,Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog
2018-01-26T19:34:44Z,,Move distributedlog-protocol module
2018-01-26T19:28:54Z,,Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog
2018-01-26T19:24:53Z,,Move distributedlog-common module
2018-01-26T19:01:58Z,1024,BP-26: Move the development of distributedlog library to bookkeeper  Descriptions of the changes in this PR:  This is a BP proposing moving the development of distributedlog library to bookkeeper. See details in the BP file.  Master Issue: #1024  Author: Sijie Guo <sijie@apache.org>  Reviewers: Henry Saputra <hsaputra@apache.org>  Matteo Merli <mmerli@apache.org>  Dave Rusek <dave.rusek@gmail.com>  Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  Yiming Zang <yzang2016@gmail.com>  This closes #1025 from sijie/bp_move_distributedlog
2018-01-26T17:23:35Z,1056,[MERGE YAHOO REPO] Fix bookie-shell readJournal by reading from correct journal-directory  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original change is: https://github.com/yahoo/bookkeeper/commit/c426efea Fix bookie-shell readJournal by reading from correct journal-directory  Author: rdhabalia <rdhabalia@yahoo-inc.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1056 from jiazhai/cherry_picks/i_207
2018-01-26T17:20:00Z,1060,[MERGE YAHOO REPO] Flush after writing out index  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original commit is: https://github.com/yahoo/bookkeeper/commit/fecdb751 YBK-14: Flush after writing out index  Author: Jia Zhai <zhaijia@apache.org> Author: Robert (Bobby) Evans <evans@yahoo-inc.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #1060 from jiazhai/cherry_picks/i_177
2018-01-26T17:19:03Z,1059,[MERGE YAHOO REPO] Release addEntry-Bytebuf on readOnlyBookie to prevent memory-leak  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original commit is: https://github.com/yahoo/bookkeeper/commit/42bdc083 Release addEntry-Bytebuf on readOnlyBookie to prevent memory-leak  Author: rdhabalia <rdhabalia@yahoo-inc.com>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #1059 from jiazhai/cherry_picks/i_173
2018-01-26T17:16:35Z,1058,[MERGE YAHOO REPO] Fixed NPE when accessing readonly bookie list  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original commit is: https://github.com/yahoo/bookkeeper/commit/270b69e4 Fixed NPE when accessing readonly bookie list  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #1058 from jiazhai/cherry_picks/i_165
2018-01-26T17:08:11Z,1061,[MERGE YAHOO REPO] CMS-2060: Catch IndexOutOfBoundsException when reading entry log index map  Descriptions of the changes in this PR: This is cherry-pick from yahoo repo of branch yahoo-4.3.  original commit is: https://github.com/yahoo/bookkeeper/commit/2b7aacc5 CMS-2060: Catch IndexOutOfBoundsException when reading entry log index map  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1061 from jiazhai/cherry_picks/i_164
2018-01-26T09:53:14Z,1031,Enable rerunning flakes twice  Enables a configuration in maven to rerun failed tests a second time.  Master issue: #1031  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1062 from ivankelly/retry-flake
2018-01-26T06:10:34Z,1030,Move backward compat tests under a parent module  To avoid having to many modules directly in tests/  this patch moves backward compat tests under their own parent module  tests/backward-compat.  Master Issue: #1030  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1054 from ivankelly/move-dir
2018-01-26T06:04:16Z,903,Remove old compat stuff  As compat tests are now docker based  the shading stuff is no longer needed.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1052 from ivankelly/remove-old-bc
2018-01-26T00:20:53Z,20,Use github repo as a temp location for deploying artifacts (#20)
2018-01-25T14:11:55Z,903,Servers formatted without instance id can't join a cluster with insta…  Test that old client can continue to work with servers which are using their hostname as their bookie id.  This replaces TestBackwardCompat#testCompatWrites and TestBackwardCompat#testCompatReads from the old BC tests.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1034 from ivankelly/bc-cookie
2018-01-25T06:47:13Z,19,Provide a standalone cluster and a storage cli to interact with it (#19)
2018-01-25T05:58:09Z,1051,New testcases for ZKClient  Descriptions of the changes in this PR:  - new testcases for ZKClient to improve code coverage.  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1051 from reddycharan/zkclienttests
2018-01-25T05:57:19Z,1050,Enhance exception logging.  Descriptions of the changes in this PR:  - log exception in the case of exception in Bookie.shutdown and BookKeeperClusterTestCase.tearDown.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1050 from reddycharan/logexception
2018-01-25T05:56:26Z,1014,ISSUE #1014: LedgerManager.asyncProcessLedgers bug fixes  Descriptions of the changes in this PR:  - fix for Bug 2 of 1014. Fixing race condition with node removal in 'asyncProcessLedgers'  and making it robust to concurrent modifications like deletions of ledgers. - fix for Bug 1 of 1014  is already made as part of Issue #978 (decouple metaformat cmd)  feature. - testcases to validate the fixes.  Master Issue: #1014  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1048 from reddycharan/asyncprocessfix  closes #1014
2018-01-25T05:53:56Z,760,Mark BP-20/BP-25 as adopted  Descriptions of the changes in this PR:  BP-20 is adopted in #760  #761 BP-25 is adopted in #1007 #1008  This closes #760 #761 #1007 #1008  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #1047 from sijie/close_bp_25
2018-01-24T23:29:49Z,, Support Increment (part 3): fix integration test
2018-01-24T23:13:48Z,,Support Increment (part 2): provide increment op support in storage container  server and client
2018-01-24T22:08:30Z,,Support Increment (part 1): provide increment op support in local state store.
2018-01-24T20:01:54Z,,Table -> Stream (part 4): storage server supports serving readonly table  a `readonly` table is only tailing updates from log streams and applying updates to table ranges. this allows applications to mutate tables using table writer.
2018-01-24T19:05:00Z,1007,ISSUE #1007: move checksum to proto  Descriptions of the changes in this PR:  Refactor checksum to proto Master Issue: #<1007>  Author: Arvin <arvindevel@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1018 from ArvinDevel/issue1007  closes #1007
2018-01-24T19:03:34Z,1007,BP-25: MovingChecksumToProto--Refactor the checksum part of bookkeeper  Descriptions of the changes in this PR:  Current the checksum implementation is in client module while the checksum semantic is more close to protocol. Moreover  moving the checksum implementation to protocol will avoid server module's dependency to client module when doing checksum in server side.  Master Issue: #1007  Author: Arvin <arvindevel@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri <vjujjuri@salesforce.com>  This closes #1008 from ArvinDevel/BP_25_MovingChecksumToProto
2018-01-24T18:56:42Z,903,Test compat with useHostNameAsBookieID  Test that old client can continue to work with servers which are using their hostname as their bookie id.  This replaces TestBackwardCompat#testCompatWrites and TestBackwardCompat#testCompatReads from the old BC tests.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1033 from ivankelly/bc-hostname
2018-01-24T18:55:42Z,1037,BookKeeperClusterTestCase UpdateLedgerOpTest: remove call to setAllow…  (bug W-2962634) Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com> [Ported to master] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1037 from athanatos/forupstream/tests/setallowloopback
2018-01-24T18:54:55Z,1038,AuditorLedgerCheckerTest: wait for ro transition to make more reliable  (bug W-2999244) Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com> [Reworked for master] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1038 from athanatos/forupstream/tests/bookietransition
2018-01-24T18:54:08Z,1039,ISSUE #1039: BKClient tests with BookieErrors  Descriptions of the changes in this PR:  - end-to-end tests for validating BKClient readEntry calls incase of combination of bookie timeouts and data corruption  Master Issue: #1039  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com> Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1040 from reddycharan/bookkeeperclienttests  closes #1039
2018-01-24T18:51:47Z,1036,CompactionTest: call storage.shutdown() prior to recreating  (bug W-2962634) Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com> [Ported to master] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1036 from athanatos/forupstream/tests/compaction
2018-01-24T18:48:53Z,1041,ISSUE #1041: Adding new testcases  Descriptions of the changes in this PR:  - New Testclass for ZeroBuffer - New testcases for missing testcoverage in SortedLedgerStorage  EntryMemTable and LedgerHandleAdv  Master Issue: #1041  Author: cguttapalem <cguttapalem@salesforce.com> Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1042 from reddycharan/missingtestcases  closes #1041
2018-01-24T18:43:11Z,1044,AuditorPeriodicCheckTest: add test for entries with failed bookie writes  Validate that the auditor's periodic check will detect entries with failed bookie writes and repair them.  Signed-off-by: Rithin <rithin.shettysalesforce.com> (bug W-3311952)(bug W-3311965) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1044 from athanatos/forupstream/tests/failedwrites
2018-01-24T18:41:57Z,1045,More testcases for LedgerHandle  Descriptions of the changes in this PR:  - New testcases for missing testcoverage in LedgerHandle and ReadOnlyLedgerHandle  Author: Charan Reddy Guttapalem <cguttapalem@cguttapale-ltm1.internal.salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1045 from reddycharan/ledgerhandlemissingtests
2018-01-24T18:40:44Z,978,ISSUE #978: decouple metaformat cmd  Descriptions of the changes in this PR:  - introduce new commands - initnewcluster  nukeexistingcluster  whatisinstanceid - add testcases initnewcluster and nukeexistingcluster at BookKeeperAdmin level  Master Issue: #978  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #979 from reddycharan/splitmetaformat  closes #978
2018-01-24T12:06:01Z,903,Ledgers without masterkey in metadata can't be recovered  Test that ledgers  created without a master key in the metadata  cannot be recovered until the master key is known.  Replaces TestBookieRecovery from the old tests.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1035 from ivankelly/bc-recovery
2018-01-24T09:56:31Z,,Table -> Stream (part 3): Implement dlog based table writer
2018-01-24T09:00:01Z,,Table -> Stream (part 2): Introduce `defaultBackendUri` in stream configuration  `defaultBackendUri` points to the service that is used for storing the logs for ranges.
2018-01-24T08:13:45Z,,Table -> Stream (part 1): add table writer for appending events to stream
2018-01-24T05:34:33Z,18,Add Table api and its implementation (#18)
2018-01-24T02:54:40Z,17,Add some simplified kv methods in PTable (#17)
2018-01-24T02:01:13Z,16,Enable txn on both server side and client side (#16)
2018-01-23T21:26:58Z,15,Improve the client api to a type-safe api (#15)
2018-01-23T05:32:58Z,1026,ISSUE #1026: initbookie cmd  Descriptions of the changes in this PR:  - adding a new BookieShell command - "initbookie" command to decouple from bookieformat. This command initializes bookie  by making sure that the journalDirs  ledgerDirs and indexDirs are empty and there is no registered Bookie with this BookieId.  Master Issue: #1027  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1027 from reddycharan/initbookiecmd  closes #1026
2018-01-22T20:00:18Z,903,Test compatibility between old hierarchical ledger manager and current  Ensures that the current client and server can handle ledgers created by the hierarchical ledger manager from 4.2.0.  Replaces TestBackwardCompat#testCompatHierarchicalLedgerManager from old tests  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #1029 from ivankelly/bc-heir
2018-01-22T19:38:45Z,903,Test upgrade from old server version to new version  This patch contains two tests. - Upgrade between all released version  up to latest version - Upgrade direct from 4.1.0 to latest version  In all cases the old client should continue to work with the new version. In one case(4.2->4.3)  we broken client compatibility so the the new client stops working with the old server.  These tests replace and expand on the testing done by TestBackwardCompat#testCompat410 with the old BC tests.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1028 from ivankelly/compat401
2018-01-22T17:17:59Z,903,Allow groovy tests to compile on java 9  Older versions of the compiler cannot handle java9 modules.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1032 from ivankelly/groovy-j9
2018-01-22T09:23:29Z,903,Only run integration tests with -DintegrationTests  Integration tests have a higher system requirement than normal unit tests  and take longer to run  so they should be explicitly enabled.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1022 from ivankelly/integ-flag
2018-01-22T00:59:06Z,903,Arquillian topologies module  Will allow topologies to be shared among modules  which is important as arquillian builds and pulls down the containers on a per module/suite basis.  Currently contains a single topology  which is 3 BK nodes and 1 ZK nodes. The BK nodes contain all released versions  with no version started by default.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1023 from ivankelly/topologies
2018-01-19T19:14:10Z,903,Fixups for broken versions in all versions images  Various versions of bookkeeper have shipped broken by default. This patch fixes them up in the all versions image  so that they can be tested.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1021 from ivankelly/broken-versions
2018-01-19T19:11:08Z,903,Utilities for bookies running in test containers  The changes include: - Updating configuration in bk_server.conf for one or all bookies - Run commands on all or one bookie - Wait for all bookies in the test are up  There are also improvements to DockerUtils#runCommand: - Better logging - Catches RunTime exceptions  as Docker-java throws them and it could   fail the test - Throw an exception is the command exits with anything but 0  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1020 from ivankelly/bookie-util
2018-01-19T19:08:58Z,903,Base modules for integration testing  Integration tests should all specify either of this modules as their parent.  integration-tests-base is for pure java integration tests. integration-tests-base-groovy is for groovy integration tests  suchs as BC testing.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #976 from ivankelly/integ-base-mod
2018-01-19T09:19:34Z,1010,[MERGE YAHOO REPO] CMS-1599: make sure we always release the underreplicated lock  Descriptions of the changes in this PR:  CMS-1599: make sure we always release the underreplicated lock  Here is original commit: https://github.com/yahoo/bookkeeper/commit/850122ed  Author: Siddharth Boobna <sboobna@yahoo-inc.com> Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #1010 from jiazhai/cherry_picks/i_120
2018-01-19T09:16:22Z,1016,proto/*Processor: clean up logging  include exception stack  For WriteEntryProcessorV3  log fence exception at error in order to help with debugging the cause of a fenced ledger.  (bug W-3299246) (bug W-3158835) Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com> Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> [Minor formatting fixes] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1016 from athanatos/forupstream/logs1/processors
2018-01-19T09:15:13Z,1015,ZkRegistrationManager: add log line with root path for prepareFormat  Useful for auditability.  (bug W-4026563) Signed-off-by: Zhimeng Shi <zshisalesforce.com> [Updated for current patch] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #1015 from athanatos/forupstream/logs1/format
2018-01-19T09:10:16Z,1009,[MERGE YAHOO REPO] CMS-1487: Provide tool to read entries from a particular bookie  Descriptions of the changes in this PR:  CMS-1487: Provide tool to read entries from a particular bookie. Here is original commit: https://github.com/yahoo/bookkeeper/commit/1a884b02  Author: Jia Zhai <zhaijia@apache.org> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #1009 from jiazhai/cherry_picks/i_115
2018-01-19T09:08:55Z,985,ISSUE #985: Add log messages to indicate bucket levels of entryLog.  (bug W-3333413) Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> [Fixed merge issues] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #997 from athanatos/forupstream/logs1/compaction  closes #985
2018-01-19T01:00:48Z,14,Add an integrate test case on testing end-to-end kv store (#14)
2018-01-18T19:11:58Z,1013,Increase page size for fetching github labels  Descriptions of the changes in this PR:  *Problem*  The default page size for github api is 30 items. The number of labels at bookkeeper are more than 30 items  so `type/task` is not showing up at merge script.  *Solution*  This change is to bump the page size to 100 items.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #1013 from sijie/increase_page_size
2018-01-18T19:09:05Z,993,PendingReadOp: improve logging for speculative read targets  And add more log messages around speculative read to understand what bookies were tried  before attempting speculative read.  (bug W-3315760) Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> [Fixed merge conflicts and checkstyle issues] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #993 from athanatos/forupstream/stats1/specreadlogs
2018-01-18T19:01:09Z,888,Rework of binary distribution licenses  All redistributed jars are mentioned in the LICENSE file. If the jar is ASLv2  it is simply listed under the ASLv2 text. If these ASLv2 jars have their own NOTICE files  then the relevant portions are added to our NOTICE file.  All jar under license other than ASLv2 get their own section in LICENSE  which links to the full text of their license. Non-ASLv2 generally do not require an update to NOTICE.  This change also includes a script  check-binary-license  which checks that the contents on the LICENSE and NOTICE actually matches what bundled in the distribution tarball.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #888 from ivankelly/license-rework
2018-01-18T15:25:52Z,1011,Remove unused import from DoubleByteBuf  9fca59 left behind an import  which triggers a failure in checkstyle. Fix is to remove the import.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #1011 from ivankelly/fix-checkstyle
2018-01-18T10:13:44Z,903,Maven classloader  This will allow us to test different versions of the client.  Also includes some extra methods to make it easier to work with the bookkeeper client.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #975 from ivankelly/maven-classloader
2018-01-18T09:32:40Z,13,Fix compilation issue: remove duplicated method (#13)
2018-01-18T09:26:29Z,12, Implement table storage using the local mvcc store (#12)
2018-01-18T01:48:58Z,998,revert DoubleByteBuf niobuffers() changes  Revert some of the changes in https://github.com/apache/bookkeeper/pull/996 since they cause issues  Author: Sebastian Schepens <sebastian.schepens@mercadolibre.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #998 from sschepens/double-bytebuf-fix-2
2018-01-18T00:44:37Z,903,Utilities for working with Arquillian and Docker  This patch contains the following utilities. - An arquillian StopAction which copy logs from /var/log/bookkeeper to   the target/ directory. - An arquillian StopAction which dumps the docker log to the target/   directory. - An arquillian AwaitStrategy which checks whether a zookeeper cluster   is running. - An arquillian AwaitStrategy which returns immediately (surprising   arquillian didn't already have this). - Utilities for working with a cluster of zookeeper/bookkeeper running   on docker.  Master Issue: #903  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #974 from ivankelly/arquillian-util
2018-01-17T18:34:53Z,996,DoubleByteBuf fix for Netty > 4.1.12  This is a port from Pulsar  DoubleByteBuf has problems with Netty Native Transport. Original author is  sschepens  see https://github.com/apache/incubator-pulsar/pull/1056  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #996 from eolivelli/fix/doublebytebuf
2018-01-17T15:09:27Z,991,PendingReadOp: add counter for speculative reads  (bug W-3324107) Signed-off-by: Dustin Castor <dcastorsalesforce.com> [Ported to current master  added test] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #991 from athanatos/forupstream/stats1/specreadstats
2018-01-17T15:08:02Z,981,Issue #981: Revert "ISSUE #561: Remove exec commands to start in the shell pid"  This reverts commit 7d7497b70507ea3d31b184ebe04d98c733e2cf5b.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #994 from ivankelly/revert-exec  closes #981  closes #561
2018-01-17T15:07:10Z,988,ISSUE #988: more log lines for replication status changes  Descriptions of the changes in this PR:  more log lines for replication status changes  Master Issue: #988  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #989 from reddycharan/replicatorlogs  closes #988
2018-01-17T15:06:22Z,990,Fix tight loop in getFileInfo  The argument to assertions is not evaluated if assertions is disabled  which was messing up the refcounting for the fileinfo backing cache. We ended up with dead fileinfo objects in the guava caches  which triggered an infinite loop.  This patch fixes that by moving the tryRetain() out of the assert. It also adds defensive code to getFileInfo to ensure that if a fileinfo object is dead  that it doesn't exist any longer in the caches.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Yiming Zang <yzang2016@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #990 from ivankelly/inf-loop
2018-01-17T15:03:52Z,977,LedgerHandle: add counters to track ledger->bookie counts  We can use this to detect distribution issues.  (bug W-4188471) Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> [Ported to master  cleaned up a bit  added test] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #977 from athanatos/forupstream/stats1/edist
2018-01-17T12:13:22Z,11, Implement table storage using the local mvcc store  (#11)
2018-01-16T08:33:50Z,986,ISSUE #986: in LocalBK.main do Sys.exit in the case of an Exc  Descriptions of the changes in this PR:  in LocalBookKeeper.main method if there is any exception then it should do System.exit. This is needed   because  some non-daemon thread (probably in ZK or some other dependent service) is preventing the JVM from exiting  though there is exception in main thread.  Master Issue: #986  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #987 from reddycharan/minorlocalbookkeeperfix  closes #986
2018-01-16T08:18:09Z,968,Journal: add stat for cb queue size  Also adds a bit of functionality to TestStatsProvider to facilitate testing.  (bug W-3019451) Signed-off-by: Dustin Castor <dcastorsalesforce.com> [Adapted to current branch  added simple test] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #968 from athanatos/forupstream/stats1/journal
2018-01-16T06:23:32Z,10, Expose table service to grpc endpoint  (#10)
2018-01-16T05:34:25Z,9,store stream/range metadata in a mvcc local store (#9)
2018-01-15T22:12:16Z,8,Cherry-pick integration tests from stream storage (#8)
2018-01-15T19:20:28Z,7,Cherry-pick the stream storage server module (#7)
2018-01-15T11:42:37Z,6,Use local state store to store root range (#6)  * Use statelib to store metadata    * Remove namespace    * Use local state store to store root range
2018-01-15T10:05:42Z,5,Introduce a store factory to manage and create mvcc stores (#5)
2018-01-15T01:17:39Z,4,Fix the namespace processor filenames (#4)
2018-01-15T01:12:46Z,3, Fix status codes which still reference collection (#3)  #2 renamed collection to namespace but it doesn't finish cleaning up the status code references. This pull request fixes it.
2018-01-15T00:53:05Z,2,Rename "Collection" to "Namespace" (#2)  to simplify/unify the concepts with pulsar  rename the collection to namespace
2018-01-15T00:07:51Z,,Fix NPE on LocalClientImpl
2018-01-15T00:00:05Z,,Storage module should depends on the new client module
2018-01-14T23:48:32Z,,Rename RangeServer as StorageServer  `RangeServer` was used for servers that host individual `ranges`. since now the server becomes more generic for serving containers and ranges for both streams and tables.
2018-01-14T23:30:10Z,,refactor `rangeservice` to `storage`
2018-01-14T23:17:22Z,,Add clients-parent module
2018-01-14T23:12:46Z,,Refactor client package from `stream.client` to `clients`
2018-01-13T22:20:55Z,,Move client implementation from `streamstore/client` to clients/java
2018-01-13T21:41:00Z,,Refactor  cleanup and enable bookkeeper checkstyle  - rename impl as statelib - move coder from api to common  so it can be shared between statelib and clients - move statestore api to statelib
2018-01-13T20:23:25Z,,Relocate storage package
2018-01-13T20:14:48Z,,Relocate the protocol package
2018-01-13T20:09:09Z,,Move kv api from `stream.api.view.kv` to `api.kv`
2018-01-13T20:09:09Z,,Finished the import of streamstore module and make it compilable.
2018-01-13T20:09:09Z,,Remove the simple name resolver factory.  This simple name resolver factory is introduced from thin client implementation. It is not needed by stream store.
2018-01-13T20:09:09Z,,Move `bookkeeper-common` as `common` module  This `common` module should be split and merged back to `bookkeeper-common` when stream store is open sourced
2018-01-13T20:09:09Z,40,[md_proxy2 6/14] Pluggable interface to resolve bookie address from name (#40)  * Pluggable interface to resolve bookie address from name
2018-01-13T20:08:54Z,,Stream Store : storage api & impl  (cherry-picked from stream storage work  co-authored by Jia Zhai and Sijie Guo)
2018-01-13T20:08:33Z,,Stream Store: Client  - add client module - implement the location  root range and metadata range apis - implement the table api  (cherry-picked from stream storage work  co-authored by Jia Zhai and Sijie Guo)
2018-01-13T20:07:15Z,,Stream Store: Define the table API in stream store.  (cherry-picked from stream storage work  co-authored by Jia Zhai and Sijie Guo)
2018-01-13T20:06:57Z,,Stream Store: Protocol module  - add the protocol module for protocol related classes - basic concepts (collection  stream)  rpc service  clients  (cherry-picked from stream storage work  co-authored by Jia Zhai and Sijie Guo)
2018-01-12T16:28:22Z,972,Upgrade nokogiri to 1.8.1  Upgrade nokogiri as 1.8.0 has a security vulnerability.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #972 from ivankelly/nokogiri-upgrade
2018-01-12T16:25:43Z,973,Move dev and dev-debug profiles to top level POM  So that they can be used from other modules.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #973 from ivankelly/move-dev-profile
2018-01-12T08:24:31Z,969,BookieWatcher: add stats for ensemble changes  (bug W-3019451) Signed-off-by: Dustin Castor <dcastorsalesforce.com> [Fixed up merge/checkstyle issues  added tests] Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #969 from athanatos/forupstream/stats1/ensemblechange
2018-01-12T07:29:57Z,956,ISSUE #956: gc: add more stats  Add new gc stats:  * RECLAIMED_COMPACTION_SPACE_BYTES  * ACTIVE_ENTRY_LOG_COUNT  * ACTIVE_ENTRY_LOG_SPACE_BYTES  * RECLAIMED_ENTRY_LOG_SPACE_BYTES  * THREAD_RUNTIME  * MAJOR_COMPACTION_COUNT  * MINOR_COMPACTION_COUNT  * ACTIVE_LEDGER_COUNT  * DELETED_LEDGER_COUNT  Removes apparently unused (better named replacements above):  * NUM_MINOR_COMP  * NUM_MAJOR_COMP  (bug W-3038773) Signed-off-by: Samuel Just <sjustsalesforce.com> Signed-off-by: Dustin Castor <dcastorsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #967 from athanatos/forupstream/stats1/gc  closes #956
2018-01-12T07:21:55Z,,Enable checkpointing in AsyncStateStoreWithJournal
2018-01-12T03:32:17Z,,Add test cases for rocksdb incremental checkpointing
2018-01-11T20:03:12Z,,Redirect tests output from console to files
2018-01-11T19:38:13Z,,Use default column family for storing data and introduce a `.meta` column family
2018-01-11T17:58:40Z,1,Rename `CheckpointManager` to `CheckpointStore` (#1)
2018-01-11T15:09:13Z,945,ISSUE #945: Enabling BookieShell for LocalBookKeeper  Descriptions of the changes in this PR:  We should be able to execute BookieShell commands against bookies of LocalBookkeeper  eg. for Zookeeper/Metadata Operation ./bookkeeper shell -localbookie listbookies -rw  eg. for Bookie operation ./bookkeeper shell -localbookie 10.3.27.190:5000 lastmark ./bookkeeper shell -localbookie 10.3.27.190:5000 listfilesondisc  Master Issue: #945  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #946 from reddycharan/localbookkeeper  closes #945
2018-01-11T02:49:22Z,,implement the rocksdb based async kv store
2018-01-10T22:31:52Z,,- Move the journaling logic to an abstract implementation of AsyncStateStore - Provide async interfaces on simple kv store
2018-01-10T20:20:25Z,,Move the simple kv statestore api/impl to `kv` package
2018-01-10T18:26:25Z,963,Add the testing page to navbar  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #963 from sijie/add_missing_guide
2018-01-10T18:25:21Z,964,Tag all-versions-image with latest  So that scripts using it don't have to bump version each time.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #964 from ivankelly/latest-tag
2018-01-10T01:03:20Z,962,Prepare website for 4.6.1 release  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #962 from eolivelli/new461website
2018-01-09T12:49:40Z,959,Docker image for testing  Contains all released versioned and the current version (from the current source tree). The image only gets built if the docker maven profile is enabled:  ``` mvn package -Pdocker ```  Supervisord is used to start and stop bookkeeper. Each version has its own supervisord config. The same journal and ledger directories are used for all versions. Logs are written to per version log files in /var/log/bookkeeper.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #959 from ivankelly/all-version-docker
2018-01-09T12:46:51Z,897,ISSUE #897: un-bind zookeeper from bookkeeper admin  Descriptions of the changes in this PR: - remove zookeeper from LedgerLayout to make LedgerLayout as a pure layout object  - add LayoutManager  move zookeeper related utils into ZKLayoutManager for storing/reading/delete layout from zookeeper  - unbind zookeeper from LedgerManagerFactory  use LayoutManager instead  - unbind zookeeper from bookkeeperadmin.format  - fix compile and test errors.  Master Issue: #897  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #936 from zhaijack/issue_897  closes #897
2018-01-09T09:58:35Z,921,Add descriptive message for TooManyRequestsException  After upgrading from 4.5 to 4.6 I found a lot of "Unexpected condition" in some benchmarks.  TooManyRequestsException is a new error introduced in 4.6  there is not description  so the default description is "Unexpected condition"  without a debugger it is not possible to understand the cause of the error.  Author: Enrico Olivelli <eolivelli@apache.org> Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #921 from eolivelli/toomanyrequests-message
2018-01-09T00:10:45Z,940,BookieProtoEncoding: use retainedSlice() to reduce garbage  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #940 from athanatos/forupstream/requestprocessorfixes/3
2018-01-09T00:09:42Z,947,ISSUE #947: ZK configs for LocalBookkeeper  Descriptions of the changes in this PR:  Master Issue: #947  - make ZK's data directory configurable for local bookie - Localbookie to use ledgersrootpath from conf file  e032218a910113b0e4de561a76da8bdf61ba3db7 (bug W-2887104) make ZK's data directory configurable for local bookie  Author: Andrey Yegorov <ayegorovsalesforce.com> Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #948 from reddycharan/localbookkeeperzkfixes  closes #947
2018-01-08T23:56:40Z,280,ISSUE280: Add StateManager to manage Bookie's state  and use it to turn bookie into readonly when sortedLedgerStorage failed to flush data  Descriptions of the changes in this PR:  Add SortedLedgerStorageListener to implement  and add a test case to verify it.  Master Issue: #280  Author: Arvin <arvindevel@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Ivan Kelly <ivank@apache.org>  This closes #873 from ArvinDevel/issue280
2018-01-08T21:18:39Z,913,Refactor FileInfo locking and refcounting out IndexPersistenceMgr  There is a number of bugs in index persistence mgr related to how refcounts are handled and how FileInfos are freed  due to the locking mechanism. These can result in the fencing bit being lost in ledgers  which is a serious issue. They also cause flakes in IndexPersistenceMgrTest#testEvictFileInfoWhenUnderlyingFileExists.  For details see the discussion at: https://github.com/apache/bookkeeper/pull/513/files/8075b0#r156676238  There are two key problems.  1. FileInfos are flushed asynchronously on eviction. If another thread tries to read the FileInfo after the flush has been scheduled  but before it runs  it will read stale date (and we'll possibly lose the fence bit). 2. FileInfos can be closed while it is still references in the IndexPersistenceMgr. This means that it can be fenced  but this will very be flushed to disk because the FileInfo is already closed.  The patch solves this by moving FileInfo locking and refcount into a separate class  FileInfoBackingCache. When either the write cache or read cache load a file info  it tries to load it from this backing cache. All writes to the the backing cache are done under a write lock. This class also takes care of reference counting. It hands out CachedFileInfo objects  which will be flushed to disk when all references are released.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #913 from ivankelly/index-persist-lock
2018-01-08T11:44:18Z,,Exclude travis log for apache-rat:check
2018-01-08T11:39:47Z,,Enable apache-rat:check
2018-01-08T11:34:50Z,,Remove duplicated matrix section
2018-01-08T11:33:32Z,,Enable travis ci
2018-01-08T10:43:20Z,,Add LICENSE file
2018-01-08T10:31:56Z,,Move api classes to api module
2018-01-08T09:47:42Z,,Split the statestore module into api and impl
2018-01-08T09:24:14Z,,Incremental checkpoint on rocksdb  - introduce checkpoint manager - implement rocksdb checkpoint and restore tasks - provide a filesystem based checkpoint manager
2018-01-08T09:23:34Z,,Fix compilation issue after moved statestore out of distributedlog repo
2018-01-08T04:09:28Z,,Move the module from `distributedlog-io/statestore` to root module
2018-01-08T03:59:27Z,,Introduce StateStores and MVCCStores as factory for supplying stores
2018-01-08T03:59:21Z,,Implement cas shortcuts in mvcc store  - put  putIfAbsent - delete  delete(k  v)  deleteRange() - cas put and delete based on version: vPut  vDelete - cas put and delete based on revision: rPut  rDelete - get and range
2018-01-08T03:59:10Z,,Return the right revision for results
2018-01-08T03:59:03Z,,Make keys optional for range operations and make range operations correctly handle head and tail ranges
2018-01-08T03:58:57Z,,Implement txn operation in local mvcc store
2018-01-08T03:58:50Z,,Implement delete op in local mvcc store
2018-01-08T03:58:46Z,,Implement MVCC Async Store using local rocksdb and distributedlog stream
2018-01-08T03:58:17Z,,Add protobuf definition for put/delete/txn request
2018-01-08T03:58:09Z,,Make localStateStoreDir  stream and ioExecutor optional
2018-01-08T03:57:45Z,,Implement put and range operation in mvcc store
2018-01-08T03:57:35Z,,Implement Range and Put Operation
2018-01-08T03:57:24Z,,address compilation issue with @FreeBuilder
2018-01-08T03:57:05Z,,Implement Record Factory
2018-01-08T03:56:50Z,,Add internal structure for mvcc record
2018-01-08T03:56:25Z,,Implement op and result
2018-01-08T03:56:19Z,,Reorganize builder and op
2018-01-08T03:56:12Z,,Add javadoc and annotation  fix checkstyle
2018-01-08T03:56:00Z,,Make all interfaces
2018-01-08T03:55:53Z,,Async and Sync MVCC Store
2018-01-08T03:55:46Z,,State Store: Add MVCC Store Interface
2018-01-08T03:55:38Z,,Fix checkstyle and findbugs errors
2018-01-08T03:55:21Z,,State Store: Define the k/v interface
2018-01-07T06:21:52Z,943,Introduce MockClock and MockExecutorController to improve timer-based testing  Descriptions of the changes in this PR:  - introduce MockClock and MockExecutorController to control time advancing to trigger execution on tasks - convert LedgerDirsMonitor from using Thread to use ScheduledExecutorService (moved the logic in `run` method to `check` without code changes) - change TestLedgerDirsManager to use MockClock and MockExecutorController to remove the usage of `Thread.sleep`  Master Issue:  #943  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #944 from sijie/mock_scheduler
2018-01-07T06:15:29Z,935,ISSUE #935 ISSUE #915: Part 3 - Make circe-checksum module work for both java 8 and java 9  Descriptions of the changes in this PR:      - switch from jmockit to mockito  and from testng to junit. make testing and mocking framework consistent across modules.     - skip `-Werror` check in circe-checksum since `finalize` is deprecated at java 9     - change CRC32CDigestManager to use `circe-checksum` module     - fix shading to include `circe-checksum`  This change is based #917 . Gitsha 73049f8 contains the changes to make circe-checksum module work for both java8 and java9.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #937 from sijie/fix_pulsar_checksum  closes #935  closes #915
2018-01-07T05:58:30Z,917,Issue 915: Part 2 - Add crc32c integer/long checksum utils under `com.scurrilous.circe.checksum` (#917)  This is the part 2 change of #915. It is based on #916  adding crc32c int/long checksum util classes under com.scurrilous.circe.checksum. It also fixes a incremental checksum issue on long crc32c. I added bunch of test cases to ensure the both long/int crc32 checksum is correct on incremental cases.
2018-01-07T05:45:53Z,915,ISSUE #915: Part 1 - Copy pulsar-checksum module as circe-checksum  Descriptions of the changes in this PR:  - this change copies the files under `com.scurrilous.circe` in pulsar-checksum module into bookkeeper as `circe-checksum`. - this change doesn't copy files under `org.apache.pulsar` except NativeUtils. will have a subsequent change to add it. - Move NativeUtils to `com.scurrilous.circe.utils`. - Update notice files to respect to Trevor Robinson's change  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #916 from sijie/copy_pulsar_checksum  closes #915
2018-01-07T05:37:08Z,952,ISSUE #952: Split the multiple-jdk-versions ci jobs into two  Descriptions of the changes in this PR:  *Problem*  When using a matrix job to define a CI job running on both java 9 and java 8  the workspace file path will be added with "jdk name" (e.g. "JDK 1.8 latest" and "JDK 9 latest"). This will cause file paths contain spaces  and fail the builds.  for example  #879 #880 is one of the examples. #937 can't pass ci because g++ fails when the file path contains spaces.  *Solution*  Splitting the matrix job into two separate jobs suffixed with "java8" and "java9"  so it won't contains any space in workspace.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #953 from sijie/separate_jdk_cis  closes #952
2018-01-07T05:34:46Z,954,ISSUE #954: dir_*_usage stats are always 0  due to mismatch between the way they are initialized in `LedgerDirsManager` and the way the `diskUsages` is populated subsequently in `LedgerDirsMonitor`  Decisions potentially worth some attention: - stat names are kept `dir_{dir}_usage` while the actual dirs being checked have been changed to `{dir}/current`; - the stats aren't being updated if the bookie is in a readonly mode -- uncovered while testing  not sure if it's worth addressing at all  kept the fix minimalistic for now.  (bug W-4594204)  Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #957 from pasha-kuznetsov/dir-usage-stats  closes #954
2018-01-05T23:22:15Z,950,ISSUE #950: EntryLogger.extractEntryLogMetadataByScanning: fix check  0 is a valid ledger id. Seems to be causing test2RWsShouldCompeteForReplicationOf2FragmentsAndCompleteReplication to fail in cases where the gc runs before the recovery reads happen. The gc winds up believing the entry log to be empty and deletes it erroneously.  Introduced in 143bd1952851ac70ace9d16c3708ae30dad2a0aa.  (bug W-4596080) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #951 from athanatos/forupstream/issue-950  closes #950
2018-01-05T19:27:53Z,877,ISSUE #877: add verifier.BookkeeperVerifier  Plays and verifies a non-determinstic read/write stream against a bookkeeper cluster.  Master Issue: #877  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #890 from athanatos/forupstream/issue-877  closes #877
2018-01-05T19:23:24Z,941,BookieNettyServer: add contextHandler to the local transport pipeline  Left off of 8e0bd2c3d81b522e97434d8646915f36422a104b.  In fact  authentication is already enabled on LocalTransport.  This extra line is needed for the machinery which allows auth plugins to access ssl state. Currently  the only plugin which uses that machinery is in TestTLS. Adds test cases to validate that functionality with Local Transport enabled.  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #941 from athanatos/forupstream/requestprocessorfixes/4
2018-01-05T09:13:17Z,931,ISSUE #931 #907: Add option to track task execution time  Fixes a bug in OrderedScheduler introduced in e33ec10aa400f32c2e0278c15ea80a0f624e5919 which failed to track execution time with some calls and adds an option to enable it in the bookie.  Also fixes a bug with task_queued duration.  Add a simple mock for remembering stats long enough to verify that counters are actually used and sensible in unit tests and bake it into BookKeeperClusterTestCase so that we can write tests to ensure that the stats are actually counted and make sense.  Use said mock to add simple tests for top level read and write stats validating this fix.  (bug W-4276826) (bug W-4268290) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #932 from athanatos/forupstream/issue-931  closes #931  closes #907
2018-01-05T09:10:44Z,938,BookieRequestProcessor: shutdown the longPollThreadPool as well  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #938 from athanatos/forupstream/requestprocessorfixes/1
2018-01-02T08:26:31Z,590,ISSUE #590 (@bug W-4556980@) Reduce excessive CPU usage on client side: add crc32c  …2c with SSE processor instruction support  benchmark to make sure it is better than crc32  Descriptions of the changes in this PR:  CRC32C for bookkeeper  Master Issue: #590  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #856 from dlg99/feature/crc32c  closes #590
2017-12-30T02:52:35Z,922,ISSUE #922: changes to shading bookkeeper-server jar  Descriptions of the changes in this PR:  **Problem:**  `shadedArtifactAttached` was introduced in 4.6.0 to generate plain and shaded artifact for `bookkeeper-server`. Because for projects (e.g. distributedlog) that would use same protobuf and guava version as bookkeeper  they will use the plain artifact (to avoid shading protobuf/guava multiple times). However there are a few problems with that:  1) bookkeeper-common is not included in the shading include set. 2) `shadedArtifactAttached` only generate a shaded artifact (with relocated classes)  but doesn't generate a dependency-reduced pom file. so you have to manually exclude relocated dependencies.  **Solutions:**  - for shaded artifact of `bookkeeper-server`  include all the bookkeeper submodules that bookkeeper-server depends on. so the shaded artifact includes all the classes that need to be relocated. - introduce a `shaded` module for keeping new shaded libraries. Currently `bookkeeper-server-shaded` is a shaded module of `bookkeeper-server`  while `bookkeeper-server-tests-shaded` is a shaded moulde of the tests jar of `bookkeeper-server`. - update the client api documentation about the instructions on how to use shaded artifact of `bookkeeper-server` and the new shaded module `bookkeeper-server-shaded`. - add test cases to verify the shaded artifact and the new shaded modules generate the right artifacts.  **This change doesn't address:**  Currently both client and server are bundled in one `bookkeeper-server`. this change will not introduce any shaded client-only jar. that would be deferred until we split `bookkeeper-server` module.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #928 from sijie/fix_shading  closes #922
2017-12-27T06:48:00Z,870,ISSUE #870: ScanAndCompareGarbageCollector: harden against LM bugs  The idea behind this patch is to make it more likely that more than one LedgerManager bug would be required to erroneously believe a ledger to be deleted. 1) Remove the special handling for the completely empty LM.  It's not really a common case nor is it much of an optimization even when it happens. 2) Add a config variable to cause the bookie to also check the LedgerManager.readLedgerMetadata path before actually removing a ledger. The implementations of readLedgerMetadata and the iterator are sufficiently different that it seems worth it to have the option of checking both to guard somewhat against a bug in either.  (bug W-4292747) (bug W-3027938) Signed-off-by: Samuel Just <sjustsalesforce.com> Signed-off-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com>  Master Issue: #870  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Arvin <None>  Sijie Guo <sijie@apache.org>  This closes #876 from athanatos/forupstream/issue-870  closes #870
2017-12-27T02:25:43Z,920,Add a section for 4.6.0 in releases.md  Descriptions of the changes in this PR: - add a section for 4.6.0 in releases.md  - add a check item for this in release_guide.md  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #920 from jiazhai/update_release_page
2017-12-27T00:50:02Z,919,Fix user email typo in release_guide  Descriptions of the changes in this PR:  Fix user email typo in release_guide  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #919 from jiazhai/fix_typo_in_releaseguide
2017-12-26T01:04:43Z,697,ISSUE #697: bump version to 4.6.0 in Dockerfile  Descriptions of the changes in this PR:  Since 4.6.0 released  bump version to 4.6.0 in Dockerfile to use the latest release  Master Issue: #697  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #918 from jiazhai/issue-697  closes #697
2017-12-25T13:16:13Z,895,ISSUE #895: print entrylog metadata  Descriptions of the changes in this PR:  - bookieshell command to print entrylog metadata  Master Issue: #895  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #896 from reddycharan/printentrylogmetadata  closes #895
2017-12-25T13:08:17Z,893,ISSUE #893: more options for UpdateCookieCmd  Descriptions of the changes in this PR:  - add ListCookie Options to UpdateCookie command - add DeleteCookie Option to UpdateCookie command - move expandstorage command to UpdateCookie command as option  since expandstorage is just a cookie update operation - in listfilesondisc command use canonical path (full path)  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com> Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #894 from reddycharan/updatecookiecmd  closes #893
2017-12-25T12:43:23Z,904,ISSUE #904: short hostname for bookieid  Descriptions of the changes in this PR:  - provide useShortHostName config to use short hostName for bookieId - corresponding testcases - For BKShell commands print appropriate string representation (hostname and ipaddress) and port number of bookies  Master Issue: #904  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com> Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #905 from reddycharan/shorthostname  closes #904
2017-12-22T05:54:25Z,908,AbstractZkLedgerManager: wrap Log.debug in an isDebugEnabled check  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #908 from athanatos/forupstream/small-fixes-1/zklm-debug
2017-12-22T05:53:02Z,912,Journal: Fix journal write queue so it decrements properly.  (bug W-3169683) Signed-off-by: Dustin <dcastorsalesforce.com>  Author: Dustin <dcastor@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #912 from athanatos/forupstream/small-fixes-1/journal
2017-12-22T05:46:33Z,911,DefaultSpeculativeRequestExecutionPolicy: fix logger instantiation  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #911 from athanatos/forupstream/small-fixes-1/logger
2017-12-22T05:45:41Z,910,EntryLogTest LedgerCacheTest: use correct tmp dir  These tests weren't overriding the journal dir and so weren't using an IOUtils tmp dir for the journal.  (bug W-4267131) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #910 from athanatos/forupstream/small-fixes-1/tmpdir
2017-12-22T05:44:51Z,909,BookieProtoEncoding: log messages at TRACE rather than DEBUG  Logging them at debug tends to make logging at DEBUG level pretty intractable  log them at TRACE instead.  (bug W-4166441) Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #909 from athanatos/forupstream/small-fixes-1/trace
2017-12-21T18:43:47Z,900,Fix: fail create-ledger callback on ledgerId generation failure  ### Motivation  Recently  we have seen that when bk-client tries to create-ledger and if bk-client lost the zk-connection then bk-client doesn't complete the createLedger-callback. We can see following exception when bk-client fails to generate ledgerId from zookeeper. ``` 05:43:35.364 [main-EventThread] ERROR o.a.b.meta.ZkLedgerIdGenerator       - Could not generate new ledger id org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers/idgen-long/HOB-0000000001/ID-         at org.apache.zookeeper.KeeperException.create(KeeperException.java:99) ~[zookeeper-3.4.6.jar:3.4.6-1569965]         at org.apache.zookeeper.KeeperException.create(KeeperException.java:51) ~[zookeeper-3.4.6.jar:3.4.6-1569965]         at org.apache.bookkeeper.meta.ZkLedgerIdGenerator$1.processResult(ZkLedgerIdGenerator.java:78) ~[bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]         at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]         at org.apache.bookkeeper.zookeeper.ZooKeeperClient$9$1.processResult(ZooKeeperClient.java:527) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]         at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:605) [zookeeper-3.4.6.jar:3.4.6-1569965]         at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498) [zookeeper-3.4.6.jar:3.4.6-1569965] ```  ### Modifications  - Bk-client handles and completes ledger-request callback on ledgerId-generation failure.  Author: rdhabalia <rdhabalia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #900 from rdhabalia/create_ledger_ap
2017-12-21T02:10:28Z,899,BookKeeperBuilderTest has recovery backwards  NoRecovery test was specifying withRecovery(true). Recovery test was specifying withRecovery(false).  This patch swaps them to how they should be.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #899 from ivankelly/recovery-test-fix
2017-12-20T02:42:53Z,865,ISSUE #865: LongHierarchicalLedgerManager: refactor to fix races  LongHierarchicalLedgerRangeIterator.initialize() could erroneously exit with iteratorDone if the lexicographically first path in zk had fewer than 4 levels.  This can happen for a few reasons including a case where a client creating a ledger on that path crashed during the zk updates or the iterator.hasNext() call simply raced with an in-progress node creation or removal.  ScanAndCompareGarbageCollector is hasNext() returns false will delete all ledgers on the bookie  so this is a fairly serious bug.  Ruling out other such bugs was fairly dificult with the structure of the code as written  so instead use a simpler recursive iterator design with simpler pre/post conditions.  Also  surface KeeperException.NoNodeException from ZkUtils.getChildrenInSingleNode so that we can actually handle it in LHLM.  Master Issue: #865  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #875 from athanatos/forupstream/issue-865  closes #865
2017-12-20T02:40:37Z,886,Add command line tool to manually recover ledgers  Descriptions of the changes in this PR:  This is a change ported from yahoo/bookkeeperf4957610.  Author: Sijie Guo <sijie@apache.org> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #886 from sijie/manually_recover_ledgers
2017-12-20T02:39:39Z,892,Misc LedgerHandle changes  Adds logging for new ensembles  a getCtime call  and a check for ReadOnlyLedgerHandle in initializeExplicitLacInterval.  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #892 from athanatos/forupstream/misc-ledgerhandle-changes
2017-12-19T20:55:26Z,887,make replaceBookie() exclude ensemble bookie racks  Descriptions of the changes in this PR:  This is a change ported back from yahoo/bookkeeper0589d0d58d61364be1a897a5c1478d3109f4fc17. It excludes the ensemble bookie racks when replacing bookies. since there is already a new weight-based placement strategy introduced  so this change only applies when `weight-based` placement policy is not enabled.  This is a change contributed from Siddharth Boobna.  Author: Sijie Guo <sijie@apache.org> Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #887 from sijie/use_bookie_address
2017-12-19T18:44:41Z,709,ISSUE #709: Add Slow Bookkeeper Servers to Placement Policy for read ordering  Descriptions of the changes in this PR:  Maintain a list of slow bookkeeper hosts  which are tried only after readonly bookkeeper hosts are tried. Bookkeeper hosts can be categorized as "slow" when a speculative timeout occurs on that bookkeeper host.  Master Issue:: 709  Author: Philip Su <psu@twitter.com> Author: Sijie Guo <sijie@apache.org> Author: philipsu522 <philip.su.522@gmail.com> Author: Ivan Kelly <ivank@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Yiming Zang <yzang2016@gmail.com>  Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #883 from philipsu522/psu/ISSUE-709-2  closes #709
2017-12-19T08:25:39Z,878,ISSUE #878: add .checkstyle file to apache-rat-plugin exclusion list  Descriptions of the changes in this PR:  - eclipse/checkstyle plugin autogenerates .checkstyle file in all the projects/modules. So it has to be added to the exclusion list  otherwise apache-rat:check (mvn clean apache-rat:check install spotbugs:check) would fail because of these files with unknown Apache License header.  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #882 from reddycharan/excludecheckstyle  closes #878
2017-12-19T08:24:00Z,879,ISSUE #879: TestTLS fails when project path contains spaces  Descriptions of the changes in this PR:  Use `URI` rather than `URL`  so it won't use url-encoded path as the file path.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #880 from sijie/relative_path  closes #879
2017-12-19T07:03:00Z,884,ISSUE #884: Upgrade powermock and mockito to support java 9  Descriptions of the changes in this PR:  powermock supports java9 at the new version (see powermock/powermock#783). this pull request upgrades the powermock and mockito versions  so we are able to run tests on java 9.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #885 from sijie/use_powermock2  closes #884
2017-12-18T21:44:19Z,849,ISSUE #849: LedgerIdFormatter and EntryFormatter Config options  Descriptions of the changes in this PR:  - LedgerIdFormatter  so it can be used for configuring format of LedgerId (Long/hex/UUID) in input/output of BKShell command - provide config options for both ledgeridformattet and entryformatter and java options for the same for BKShell commands - enhance ReadLedgerEntriesCmd command to have options rather than as arguments - fix checkstyle errors - "Redundant 'final' modifier." and for invalid variable name format  Author: cguttapalem <cguttapalem@salesforce.com> Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #864 from reddycharan/ledgerformat  closes #849
2017-12-18T21:41:33Z,874,Add a testing guide  Descriptions of the changes in this PR:  Putting up a page for `testing` related information. This is the first attempt to document all CI related information.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #874 from sijie/testing_guide_doc
2017-12-18T21:26:22Z,863,ISSUE #863: BK client error messages need to be more descriptive  This improves logging of error codes as described in the issue #863. I only addressed the most glaring cases where bare `rc` was logged  by introducing a new logging utility which can be used as follows: ``` LOG.error("Closing ledger {} due to {}"  ledgerId  BKException.codeLogger(rc)); ``` producing messages similar to the following:  We can also discuss if the cases similar to the following should be brought in line with the above changes  which produces more information compared to the new approach  including stack trace  although not the original one: ``` if (rc != BKException.Code.OK) {     LOG.error("BK error opening ledger: " + lId  BKException.create(rc)); // <------------------     finalLedgerIterCb.processResult(rc  null  null);     return; } ```  P.S. Please also note that we (Salesforce) are starting to add commit tags simplifying our merge process  e.g. `(bug W-3843968)` -- please let us know if that is significant enough to be discussed separately.  Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #868 from pasha-kuznetsov/error-code-logger  closes #863
2017-12-18T21:17:37Z,328,Issue #328 - Add docker compose example file  This patch adds a docker-compose example file for helping new users to use bookkeeper.  It runs by default an ensemble with 3 bookies and a client application based in the following tutorial  but you can leverage docker compose features to scale up the number of instances.  https://bookkeeper.apache.org/archives/docs/master/bookkeeperTutorial.html  Ref: Issue #328  Signed-off-by: Antonio Ojea <antonio.ojea.garciagmail.com>  Author: Antonio Ojea <antonio.ojea.garcia@gmail.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #871 from aojea/docker  closes #328
2017-12-18T21:16:50Z,845,add try-with-resources in coding_guide  Descriptions of the changes in this PR:  This is related to PR #845  and want to  add try-with-resources in coding_guide.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #872 from jiazhai/fix_doc
2017-12-18T01:53:43Z,860,DbLedgerStorage -- Added config options in bk_server.conf  Added commented config options with default values.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #860 from merlimat/db-storage-conf
2017-12-18T01:45:33Z,866,Manage all the jenkins jobs using jenkins-dsl  Descriptions of the changes in this PR:  - use jenkins-dsl to manage all the bookkeeper jobs - the seed job will poll the files checked in under `.test-infra/jenkins` at master and automatically update other jenkins jobs - this enforces all the jenkins jobs' changes should go through github reviews and allows everyone can make changes to jenkins jobs.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #866 from sijie/test_infra_jenkins_dsl
2017-12-16T17:05:01Z,867,During journal replay  force to re-insert the master key in ledger storage  When the bookie crashes and restart  it will replay the entries from the journal. In the case of ledgers that were created  but their metadata was not flushed on disk  the ledger metadata might be lost.  This is more evident in `DbLedgerStorage`  since the ledger metadata is cached in memory and it's only inserted in the db at the checkpoint time  though it applies as well for `InterleavedLedgerStorage` where the ledger metadata was inserted in the cache but not fsynced on disk.  If the page cache content is gone  when replaying the journal content  the ledger will be tracked in memory but the bookie won't have the metadata on disk anymore.  Merging from yahoo branch: https://github.com/yahoo/bookkeeper/commit/d3626396ecf1a2b98c782bb30a7b9c00c75c6cdf  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #867 from merlimat/master
2017-12-15T20:18:57Z,778,ISSUE #778: Make build pass using JDK9  Descriptions of the changes in this PR:  - make bookkeeper can be compiled with java 9 - add java9 to travis ci to make sure it can be built for both java8 and java9  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #857 from sijie/compile_with_java9  closes #778
2017-12-15T20:13:36Z,854,Add attribution for binary jars covered by New BSD License  This means a separate LICENSE file for server and all  as all pulls in more stuff.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #854 from ivankelly/license-fix
2017-12-15T19:54:06Z,859,DbLedgerStorage -- Added bookie shell tools  Added BookieShell tools for DbLedgerStorage conversion operations:   * `convert-to-db-storage` --> Convert interleaved indexes to db storage indexes  * `convert-to-interleaved-storage` --> Convert back from db storage to interleaved storage indexes  * `rebuild-db-ledger-locations-index` --> Rebuild the DbLedgerStorage index by scanning the entry log files.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #859 from merlimat/db-ledger-storage-itemized
2017-12-15T17:29:10Z,855,DbLedgerStorage -- Main implementation  `LedgerStorage` implementation that uses the EntryLogger mechanism but stores the indexes in a RocksDB database.  In addition  there are also a WriteCache and a ReadCache that are used to completely decouple the read & write paths.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #855 from merlimat/db-ledger-storage-impl
2017-12-15T08:43:44Z,326,ISSUE #326: Replace observer/observable with a simplified watcher/watchable implementation  Descriptions of the changes in this PR:  - long poll only need one-time notification on lac updates - replace observer/observable with a simplified watcher/watchable implementation. watchers are removed after they are fired. - add `RecycableHashSet` for `Watchable` keeping the list of watchers - object pooling on `Watchable` and `LastAddConfirmedUpdateNotification`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  This closes #838 from sijie/rxjava  closes #326
2017-12-15T07:51:00Z,668,ISSUE #668: Use try-with-resources blocks whenever is possible  Use java7 try-with-resources blocks in order to have error prone code and more elegant  Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #845 from pasha-kuznetsov/try-with-resources  closes #668
2017-12-14T20:35:02Z,844,DbLedgerStorage -- Make some entrylogger methods accessibles  This changes are needed for `DbLedgerStorage` implementation to access some of the protected methods of the EntryLogger.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #844 from merlimat/db-ledger-storage-itemized and squashes the following commits:  b4d886ea [Matteo Merli] Removed timeout and fixed test 46652dd4 [Matteo Merli] DbLedgerStorage -- Make entrylogger read methods accessibles
2017-12-14T00:40:21Z,841,ISSUE #841: Unnecessary new Object[] {}  new String[] {} etc calls  This takes care of a few new Object[] {}  new String[] {} etc calls  mostly leftovers from the older slf4j's LOG API which used to lack the Object... "vararg" method overloads  making it easier to read and maintain.  Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #842 from pasha-kuznetsov/redundant-arrays  closes #841
2017-12-13T23:59:30Z,843,DbLedgerStorage -- ReadCache  Adds a `ReadCache` class to be used from LedgerStorage.  The read cache is used when doing read-ahead caching after reading one entry.  The idea is that entries for the same ledger as stored in order (for each flush cycle  eg: 1min). When reading 1 entry  we expect the client to read all subsequent entries. We can then skip the RocksDb `get()` to fetch the index of the entries  by just keep reading from the entryLog  and exploiting page cache and seqeuential reads. The entries are then added to this ReadCache  where they will looked when the request for next entry comes in.  This implementation is based on dividing the memory into multiple segments. Whenever the read cache is full  the oldest segment gets recycled and overwritten with new entries.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #843 from merlimat/read-cache
2017-12-13T23:43:50Z,744,ISSUE #744: BP-18 introduce write flags  Introduce writeflags on the API and on protobuf files. Client and server do not use these flags yet.  Author: eolivelli <eolivelli@apache.org> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #742 from eolivelli/bp14-writeflags  closes #744
2017-12-13T21:54:19Z,741,ISSUE #741: Switch to Spotbugs  Moved from findbugs plugin to spotbugs.  Author: Matteo Minardi <matteo.minardi@diennea.com>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #834 from mino181295/ISSUE#741  closes #741
2017-12-13T21:46:15Z,835,Allow subclasses of AbstractConfiguration to use fluent style  And in doing so  get rid of ugly casts.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #835 from ivankelly/abstract-conf-generic
2017-12-13T21:45:04Z,568,Fix Flaky CreateNewLogTest  Descriptions of the changes in this PR:  CreateNewLogTest becomes flaky after fixing #568 because preallocation can happen in the background. Changing the sequence of creating entry logger and entry log file injection to make the test sequence deterministic.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #836 from sijie/fix_createnewlog_test
2017-12-13T21:40:48Z,837,Fix FlakyTest TestRegionAwareEnsemblePlacementPolicy  Descriptions of the changes in this PR:  include all possible resolved hostnames into the static dns resolver for region aware testing.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #837 from sijie/fix_regionaware
2017-12-13T20:18:44Z,840,Fixed RocksDb storage options instantiation after library is loaded  In previous commit 8e6c1a2e76a  the initialization of some RocksDb option objects was done before the RocksDB JNI library was loaded  leading to exceptions.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #840 from merlimat/key-value-storage
2017-12-13T08:56:34Z,829,DbLedgerStorage -- KeyValue storage interface with RocksDB implementation  Add an interface for a generic key-value storage local library  with the default implementation based on RocksDB.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #829 from merlimat/key-value-storage
2017-12-13T08:51:42Z,831,ISSUE #831: move zkServers and zkTimeout into AbstractCofiguration  Descriptions of the changes in this PR:  both ClientConfiguration and ServerConfiguration contain ZkServers and ZKTimeout  would like to move them into AbstractConfiguration.  Changes: 1  Regarding methods setZkServers/getZkServers/setZkTimeout/getZkTimeout   remove them in ClientConfiguration and ServerConfiguration; added them in AbstractConfiguration; 2  fix usage of above methods in test cases;  Master Issue: #831  Author: Jia Zhai <zhaijia@apache.org> Author: Sijie Guo <guosijie@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #833 from zhaijack/issue-831  closes #831
2017-12-13T08:47:17Z,828,DbLedgerStorage -- Write cache  1st part of DbLedgerStorage related changes.  This PR introduces a `WriteCache` class that is used to store entries before they get flushed on the entryLogs.  The key part is that it provides a way to iterate in order over the entries and it is is garbage-free at steady state.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #828 from merlimat/db-ledger-storage-itemized
2017-12-13T08:43:25Z,817,Client times out requests in batch rather than individually  This patch is a squash of f59b597f  00fc5cd2  1658eb61 & 833dc307 from the yahoo-4.3 branch. The change removes the HashWheelTimer from PerChannelBookieClient and instead runs through all outstanding ops periodically  timing them out as necessary.  The motivation for this change is to reduce the number of objects created per add/read request. With HashWheelTimer a TimerTask needs to be added to the Timer  which allocates and returns a Timeout object. We had to be careful to cancel this timeout on success.  The new approach is simpler  doesn't require any allocation per request  and doesn't require any cancellation. Functionally the end result is the same - very slow requests are timed out.  The patch also makes some additions to the original changes (due to the codebase moving since it was originally written). - PendingAddOps are changed to use the same mechanism for quorum timeouts. - The checkTimeout method is moved to the PCBCPool so we can run the check on non-connected PCBC instances. This is necessary for TLS.  Author: Ivan Kelly <ivank@apache.org> Author: Siddharth Boobna <sboobna@yahoo-inc.com> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #817 from ivankelly/yahoo-bp-9
2017-12-12T12:21:42Z,230,ISSUE #230: Enable checkstyle on the bookie tests  Descriptions of the changes in this PR:  With this change  checkstyle verification is enabled for the entire bookkeeper-server package  and all packages use the same `suppressions.xml` file.  Master Issue: #230  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #830 from acoburn/checkstyle_test_bookie  closes #230
2017-12-11T20:57:51Z,827,Race in PCBC connection if channel inactive before callback  There's a race in PCBC where if the channel is errored before the connection callback occurs  the channel will hang around as a zombie forever.  This caused a flake in TestDisableEnsembleChange#testRetryFailureBookie  but the problem itself could affect production code. This test hit it because it tries to reconnect in a tight loop as a bookie is booting.  The error occurs because we only change state with channelInactive if the channelInactive occurred on the channel that matches the currently assigned this.channel. If the channel connects successfully  but channelInactive occurs before the connect callback runs  the channel will be closed  but the state will be transitioned to CONNECTED. No more events will occur on the channel  so it'll hang around forever  and all requests on the channel will timeout.  The fix is to check that the channel is active before assigning it to this.channel and setting state to CONNECTED. If the channel is not active at this point  then the else clause of this block will run which closes the channel  and sets state to DISCONNECTED. In this case  the next request will trigger a new connection attempt.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #827 from ivankelly/ensemble-flake
2017-12-09T08:38:57Z,818,ISSUE #818: add api changes in release notes of 4.6.0  Descriptions of the changes in this PR: add changes of BookKeeper constructor and EnsemblePlacementPolicy in release notes of 4.6.0  Master Issue: #818  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #822 from jiazhai/issue-818  closes #818
2017-12-09T08:34:32Z,820,Fix NOTICE and LICENSE  Descriptions of the changes in this PR:  - combine the NOTICE  LICENSE files into one for both src and binary distribution. - make a few dependencies as `provided`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #820 from sijie/fix_notice_license
2017-12-09T02:59:00Z,230,ISSUE #230: Enable checkstyle on client tests  Descriptions of the changes in this PR:  This enables checkstyle verification on the client test code in the bookkeeper-server module.  These changes are almost entirely related to whitespace  javadocs and import order.  Master Issue: #230  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #825 from acoburn/checkstyle_test_client  closes #230
2017-12-09T02:19:23Z,824,Refactored EntryLogger Buffered channel  Porting https://github.com/yahoo/bookkeeper/commit/ecce14449b07e0b40434835bbc01d75d0a36880b from Yahoo branch.  Refactored entry logger to always use pooled `ByteBuf` when reading entries or scanning the log.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #824 from merlimat/entry-logger-refactor and squashes the following commits:  6ddb31d6 [Matteo Merli] Fix DoubleByteBuf readableBytes() a6df2974 [Matteo Merli] Fixed padding length and journal test bbe65eb8 [Matteo Merli] Removed BufferedReadChannel close since the buffer was not pooled anyway c50f4683 [Matteo Merli] Added required changes to uses of BufferedChannel from Journal 6746d038 [Matteo Merli] Refactored EntryLogger Buffered channel
2017-12-08T00:46:02Z,823,Use netty DefaultThreadFactory everywhere to take advantage of fast thread local access  Merging https://github.com/yahoo/bookkeeper/commit/38ff21ad8bbd8ac8ec8a4898ef9ecf473fea94b7 from Yahoo branch.  Netty has a special `FastThreadLocal` class that is used in many places (eg: when borrowing a buffer from a pool). The mechanism in which it works is that the thread has to be created from a particular thread factory to take advantage of it (it adds a couple of fields subclassing the `Thread` class).  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #823 from merlimat/thread-factory
2017-12-08T00:44:18Z,230,ISSUE #230: Enable checkstyle on some test classes  Part of #230  this enables checkstyle verification on some of the test code. This does not do checkstyle validation on the client or bookie package test code.  Enabling checkstyle on the entire test codebase would result in a _very_ large PR. This is an attempt to break it up into smaller pieces. The changes here are almost exclusively related to whitespace  javadocs and import order.  One public change of note is in `replication.AuditorLedgerCheckerTest`: the `_testDelayedAuditOfLostBookies` method is changed to `testInnerDelayedAuditOfLostBookies`.  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #819 from acoburn/checkstyle_test  closes #230
2017-12-07T22:42:46Z,821,Use ConcurrentLongLongHashMap in EntryLogMetadata  Porting commits https://github.com/yahoo/bookkeeper/commit/74afc16d1c1e93739edf4a78801c5ccb6afd3883 and https://github.com/yahoo/bookkeeper/commit/eba3bbfbbaf58118c0c5736b56d3897a5928bc89 from Yahoo branch.  Currently the `EntryLogger` is keeping a `ConcurrentHashMap<Long  Long>` to keep track of amount of data stored in a single entry log file for each of the ledgers.  The amount of memory required is high because of the objects boxing. The `Long` used for key and value are 16 bytes each and the hash-map node will take another ~24 bytes.  Additionally  all these objects are created  stored for hours and then GCed  after being tenured.  By using `ConcurrentLongLongHashMap`  we eliminate the object boxing and the need for the "node" since it's a open hashmap. This helps reducing a lot the memory used by the bookie when storing a large amount of entries (54 --> 16 bytes). Also since we store the items in `long[]`  this will not need objects and it will not affect GC.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #821 from merlimat/entrylog-metadata
2017-12-06T08:30:44Z,568,ISSUE #568: Refactor EntryLoggerAllocator to enable preallocation  Descriptions of the changes in this PR:  Enable 'entryLogFilePreallocationEnabled' which is  never be used.  Author: Arvin <arvindevel@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #814 from ArvinDevel/issue568  closes #568
2017-12-06T08:28:48Z,809,Recycle responses callbacks  A response callback is created each time we receive a response from a server  which can result in a lot of garbage in the fast path.  This change pools the callbacks.  This change was originally 729bd2d0 in the yahoo-4.3 branch.  Author: Ivan Kelly <ivank@apache.org> Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #809 from ivankelly/yahoo-bp-7
2017-12-06T01:18:37Z,795,BP-22: Separate closing ledgers from opening ledgers (#795)  State: Rejected  Reason: Rejected due to lack of agreement that the issues raised in the motivation are valid.
2017-12-06T01:13:48Z,790,BP-21:  New API close inconsistencies (#790)  State: Rejected  Reason: Rejected due to lack of agreement that the issues raised in the motivation are valid.
2017-12-06T01:06:07Z,813,Handle unexpected throwable in Bookie V2 request processors  Merging from https://github.com/yahoo/bookkeeper/commit/c54eafbe  When getting any exception  the request processor for V2 protocol must make sure to get some response back to client. In the specific case  it was some NPE that was thrown and not handled properly.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #813 from merlimat/handle-throwable
2017-12-06T00:53:13Z,761,Update the BP workflow  Descriptions of the changes in this PR:  - incorporate the feedback from JV last week: allow people to use google doc for writing a BP. Google doc is great for collaboration in general. - incorporate Ivan's comment on workflow #761  : how to handle failed BPs. The principle here is BPs are in general good ideas  we should keep those records for future references. so add an instruction on merging the failed BPs.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #810 from sijie/fix_bp_workflow
2017-12-06T00:52:12Z,805,ISSUE #805: some fix in release_guide.md  Descriptions of the changes in this PR:  during preparing release 4.6.0  there was some errors meet  1  `git tag -d ${VERSION} && git push apache :refs/tags/${VERSION}` should be `git tag -d release-${VERSION} && git push apache :refs/tags/release-${VERSION}`  2  .m2/settings.xml may not take effect for "Apache Nexus repository" setting  it may be not your "global settings file"  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Sijie Guo <sijie@apache.org>  This closes #811 from jiazhai/issue-805  closes #805
2017-12-06T00:49:57Z,230,ISSUE #230: Enable checkstyle on util package  Part of #230  this adds checkstyle verification to the util package in bookkeeper-server.  A few notable changes:   - in `util.HardLink`  the field `osType` becomes `OS_TYPE`.   - in `util.LocalBookkeeper`  a few package-protected fields are marked private and changed to camelCase.  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #815 from acoburn/checkstyle_util  closes #230
2017-12-06T00:46:30Z,816,Fix flake in TestPerChannelBookieClient  Flake is in testRequestCompletesAfterDisconnectRace. It tests a race between disconnection and making a request. The flake occurred because when the disconnection happened  the request would be errorred out  and this would add a callback to the ordered executor. The test was shutting down the executor before the callback was actually run (it may not even have been added in some cases)  and this was causing the request to never complete  failing the test.  The fix is to move the shutdown of the executor to after the assertion that the request has completed.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #816 from ivankelly/pcbc-flake
2017-12-04T23:56:37Z,808,Use concurrent open hash map to track pending requests in PerChannelBookieClient  ConcurrentOpenHashMap doesn't allocate a Map.Entry for each insertion/lookup  so this reduces garbage in the fast path.  Original change 64ab580a in yahoo-4.3 branch.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #808 from ivankelly/yahoo-bp-6
2017-12-04T23:41:53Z,807,Fix checkstyle in PCBC  Two inflight PRs clashes to create a broken build due to checkstyle being enabled. This patch fixes the checkstyle issue  which was import order.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #807 from ivankelly/fix-style
2017-12-04T22:10:04Z,720,Fixed simultaneus reads on same ledger/entry with v2 protocol  This change is coming from yahoo branch at yahoo/bookkeeperce7b0f7  With v2 protocol there's no way to disambiguate the read request since the completion key is made from (ledgerId  entryId). This PR introduced an additional multimap to handle the conflicts (multiple simultaneus read requests for the same entry).  Author: Ivan Kelly <ivank@apache.org> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #720 from merlimat/concurrent-read-v2
2017-12-04T22:08:02Z,230,ISSUE #230: Enable checkstyle on bookie and client  Part of #230  this adds checkstyle verification to the bookie and client packages in `bookkeeper-server`.  Descriptions of the changes in this PR:  The changes here are primarily cosmetic  but there are also two notable changes to point out:  1. In both `TopologyAwareEnsemblePlacementPolicy.TruePredicate` and `TopologyAwareEnsemblePlacementPolicy.EnsembleForReplacementWithNoConstraints` a `public static final` field was renamed from `instance` to `INSTANCE`. This is consistent with the use of an `INSTANCE` field in the `bookkeeper-stats` package. An alternative would be to introduce a public method `getInstance()`  but either way the checkstyle rules don't like a public constant field in lower case.  2. In `UpdateLedgerOp#updateBookieIdInLedgers()`  the `throws BKException` part of the signature is problematic and prevents the checkstyle validation from completing successfully. From what I can tell  that checked exception is never thrown; as such  I have removed that from the signature. I have also removed the corresponding guard from `bookie.BookieShell`.  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #806 from acoburn/checkstyle_client_bookie  closes #230
2017-12-04T18:28:43Z,689,ISSUE #689: improve release guide for minor versions  Author: eolivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #777 from eolivelli/improve-guide-minor  closes #689
2017-12-04T13:26:18Z,803,Fix bin/bookkeeper to work with release  Part of the assembly process prepends the package name to the bookkeeper-server  which wasn't taken into account by bin/bookkeeper. This change takes it into account.  It also stops the script from printing a warning if a directory doesn't exist.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Jia Zhai <None>  This closes #803 from ivankelly/bad-script
2017-12-04T08:40:05Z,801,ISSUE #801: remove assembly plugin in root pom  Descriptions of the changes in this PR: mvn release:prepare cmd will fail  for the wrong assembly plugin in root pom. This change remove it  for it has already in bookkeeper-dist/pom.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #802 from jiazhai/issue-801  closes #801
2017-12-04T07:26:03Z,798,Removed all per-entry allocations in Journal operations  This change was originally b2cc158a from the yahoo-4.3 branch.  Author: Ivan Kelly <ivank@apache.org> Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #798 from ivankelly/yahoo-bp-5
2017-12-02T11:47:01Z,230,ISSUE #230: Enable checkstyle for more packages  Part of #230  this enables the checkstyle plugin for the `replication` and `server.http.service` packages.  Descriptions of the changes in this PR:  Most of the changes here are merely cosmetic. The only change of any significance is in the `RecoveryBookieService.RecoveryRequestJsonBody` class in which the JSON object fields had to be changed in order to conform to the Checkstyle rules: `bookie_src` to `bookieSrc` and `delete_cookie` to `deleteCookie`. Using a Jackson annotation (`JsonProperty`)  however  means that these field names continue to be parsed and serialized as `bookie_src` and `delete_cookie`  respectively.  Author: Jia Zhai <jiazhai@users.noreply.github.com> Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #800 from acoburn/checkstyle_replication  closes #230
2017-12-02T11:26:03Z,230,ISSUE #230: Add Checkstyle to some packages  This is part of #230 and adds checkstyle verification to the following packages in bookkeeper-server:    - metastore   - net   - sasl  Descriptions of the changes in this PR:  Most of the changes are entirely stylistic  but there were a few minor functional changes:    - In `metastore.MetastoreUtils`  the protected `logger` field was changed to `private` (it is not accessed from outside the class).   - In `metastore.Value`  the package-protected `comparator` field was changed to `private` (it  too  is not accessed outside the class).  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #799 from acoburn/more_checkstyle  closes #230
2017-12-02T05:05:53Z,659,ISSUE #659: Fix Checkpoint logic in SortedLedgerStorage  Descriptions of the changes in this PR:  - add a test case to reproduce the behavior  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Charan Reddy Guttapalem <reddycharan18@gmail.com>  This closes #677 from sijie/fix_checkpoint  closes #659
2017-12-01T16:05:20Z,230,ISSUE #230: Enable Checkstyle on the proto package  This is part of #230 and adds Checkstyle verification to the proto package in bookeeper-server.  The changes here should generally be non-controversial  but I would like to highlight one change for particular review. In the `PerChannelBookieClient` class  there is a `public static final` field called `txnIdGenerator`. The checkstyle rules require that such public fields are ALL_CAPS. So one option would be to change that field to `TX_ID_GENERATOR` (this would be a change to the public API).  The relevant diff is here: https://github.com/apache/bookkeeper/compare/master...acoburn:checkstyle_proto?expand=1#diff-e50ee2c1aec1539ea185a94605b0e550R143  However  that field is never used outside this class  so the other option is to make the field private and keep the name as-is. (Making the field private is also a change to the public API)  I chose the second option because the field seemed more like an internal field. If  however  the field should be left public  I can add a commit that changes the name to `TX_ID_GENERATOR` so that it passes the checkstyle rules.  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #792 from acoburn/checkstyle_proto  closes #230
2017-12-01T16:03:53Z,230,ISSUE #230: Enable Checkstyle on the meta package  This is part of #230 and adds Checkstyle verification to the meta package in bookkeeper-server.  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #797 from acoburn/checkstyle_meta  closes #230
2017-12-01T16:02:18Z,230,ISSUE 230: Enable Checkstyle on the conf package  This is part of #230 and adds Checkstyle verification to the conf package in bookkeeper-server.  As with #792  most of the changes here should be non-controversial. However  as with #792  there is a constant field whose name needed to be renamed. `AbstractConfiguration` has a `protected static final` field called `defaultLoader`. This field is used in the two implementing classes  so keeping `protected` visibility seems right. So in this case  the field has been renamed to `DEFAULT_LOADER` while keeping the `protected static final` modifiers.  The changed line is: https://github.com/apache/bookkeeper/compare/master...acoburn:checkstyle_conf?expand=1#diff-b4f821552b13a688d62015e96092e08eR45  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #796 from acoburn/checkstyle_conf
2017-12-01T14:13:49Z,787,ISSUE #787: Client should be able to get ledger metadata from Handles.  Descriptions of the changes in this PR:  - create a `LedgerMetadata` interface for exposing public information - add `getLedgerMetadata` to Handle  so both WriteHandle and ReadHandle are able to access the metadata.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #788 from sijie/ledger_metadata_interface  closes #787
2017-11-30T10:11:58Z,784,ISSUE #784: LedgerEntries#close should not throw checked exception  Descriptions of the changes in this PR:  override `close()` in LedgerEntries to make it not throw checked exception.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <zhaijia@apache.org>  This closes #785 from sijie/dont_throw_exception_on_close  closes #784
2017-11-30T07:30:32Z,240,Make distributedlog compiled with latest bookkeeper version  Descriptions of the changes in this PR:  There are code changes on PendingReadOp for new bookkeeper api in current master. DistributedLog uses PendingReadOp for some administration tools. So the current master doesn't compile with the latest bookkeeper version. This code change is to fix that.  The change here includes:  - bump bk to 4.7.0-SNAPSHOT (will switch to 4.6.0 after it is released) - change to use the latest CompletableFuture in latest PendingReadOp. (this change doesn't target at making distributedlog work with new API)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #240 from sijie/sijie/use_new_ledger_api
2017-11-30T05:52:58Z,765,ISSUE #765: Add `isClosed()` to ReadHandle  Descriptions of the changes in this PR:  add `isClosed` to ReadHandle  so distributedlog can use this for implementing readers.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #786 from sijie/is_sealed  closes #765
2017-11-30T05:35:29Z,695,ISSUE #695: add release notes for 4.6.0  Descriptions of the changes in this PR: add release notes for 4.6.0.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #759 from zhaijack/issue-695  closes #695
2017-11-30T02:58:03Z,775,Tests wait for client to see started bookie  Up until now we were only waiting for the bookie to exist in the bookie list  after which we triggered a read. However  when the registration changes went in  the read wasn't actually populating the mechanism used to select bookies  so we ended up momentarily having unusable bookkeeper clients until the correct read triggered. This resulted in flakiness in random tests.  This change makes it so we wait until the client has seen a bookie before startBookie will return. It also makes sure that reading the bookie list actually populates the bookie selection mechanism.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #775 from ivankelly/no-enough-bookie-flake
2017-11-30T02:53:39Z,544,ISSUE #544: Bootup cookie validation considers an empty journal to signify a new bookie  Descriptions of the changes in this PR:  - read cookie from registration manager as the source-of-truth (for all potential options) - remove duplicated code between checkEnvironment and checkEnvironmentWithStorageExpansion  Author: Sijie Guo <sijie@apache.org> Author: Ivan Kelly <ivank@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  This closes #712 from sijie/fix_cookie_issue  closes #544
2017-11-29T12:04:08Z,760,BP-20: Github workflow for bookkeeper proposals  Descriptions of the changes in this PR:  Implementing a github workflow for bookkeeper proposals  so all the bookkeeper proposals can be reviewed as code changes  and they can be maintained in the same way as how we maintain documentation.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia03@gmail.com>  This closes #760 from sijie/BP_20
2017-11-28T16:05:24Z,782,Don't print out redundant JMX notice  Users don't really care that JMX is enabled by default  so don't print it out.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #782 from ivankelly/no-jmx
2017-11-28T08:45:21Z,772,Explicitly search for bookkeeper-server jar  Rather than listing all jars  and excluding some exceptions  search for jars which match a specific pattern  namely:    bookkeeper-server-[version].jar  Where [version] may include numbers  dots and optionally -SNAPSHOT.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #772 from ivankelly/fix-local-bookie
2017-11-28T02:08:31Z,230,ISSUE #230: Enable Checkstyle on the tls package  This is part of #230 and adds Checkstyle verification to the TLS package in `bookkeeper-server`.  Author: Aaron Coburn <acoburn@amherst.edu>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #779 from acoburn/checkstyle_tls  closes #230
2017-11-26T15:56:57Z,770,Make LedgerEntries an Iterable<LedgerEntry>  This seems to have been overlooked in the previous changes. As the title says  this change just adds the Iterable<LedgerEntry> to the interfaces from which LedgerEntries extends.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #770 from ivankelly/ledger-entries-iterable
2017-11-24T20:28:55Z,553,ISSUE #553: Documentation for new fluent API  Descriptions of the changes in this PR:  - Add documentation for the new fluent API: create/open/delete  append/write/read  createadv  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #764 from sijie/api_documentation  closes #553
2017-11-23T11:56:21Z,693,ISSUE #693: add interface and implementation of LedgerEntries  In the new API proposed in #506   we return Iterable<LedgerEntry> for read entries. It is a bit problematic when returning multiple iterators and have no ability to release the entry buffers hold by ledger entries. In this change  the implementation of retainIterator() increased the reference of the buffers when creating an iterator  it will be easy for byteBuf's management; it also make LedgerEntries a recycle object  and it is returned to the pool when #close() is called. on #close()  it also releases all the references to release resources.  Descriptions of the changes in this PR: 1. add interface LedgerEntries; 2. add implemtation of LedgerEntries; 3. fix related build and test errors.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: ivankelly  sijie  eolivelli  This closes #727 from zhaijack/issue-693  closes #693
2017-11-23T09:08:24Z,763,ISSUE #763: Javadoc layout should reflect new modules  Descriptions of the changes in this PR:  - add `org.apache.bookkeeper.client.api` in `BookKeeper Client (New Fluent API - Experimental)` - move prometheus package to `BookKeeper Stats Providers`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Jia Zhai <zhaijia@apache.org>  This closes #768 from sijie/fix_javadoc_layout  closes #763
2017-11-23T08:26:18Z,753,Issue #753: Allow option to disable data sync on journal  Context in #753  For deployments where a RAID battery-backed cache is not available and where durability is not a requirements  we should allow bookies to rely on page cache and relax durability.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #754 from merlimat/option-to-disable-sync-master  closes #753
2017-11-23T08:07:31Z,750,ISSUE #750: support ByteBuf  ByteBuffer  byte[] in both WriteHandle  WriteAdvHandle  ReadHandle  Descriptions of the changes in this PR:  - WriteHandle supports append byte[]  ByteBuf and ByteBuffer - WriteAdvHandle supports write byte[]  ByteBuf and ByteBuffer - LedgerEntry returns byte[]  ByteBuffer and ByteBuf  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #755 from sijie/issue_750  closes #750
2017-11-23T06:19:56Z,766,ISSUE #766: Bump master to 4.7.0-SNAPSHOT  Descriptions of the changes in this PR:  The master version was not updated when creating `branch-4.6`.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #767 from sijie/bump_master_version  closes #766
2017-11-22T17:49:26Z,758,fix releases.md  add release date for 4.5.1 and clean up file  Author: eolivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #758 from eolivelli/updaterelmd451-460
2017-11-22T08:22:48Z,696,Add release 4.6.0 to releases menu  Descriptions of the changes in this PR:  The documentation for release `4.6.0` was copied by #696. But this release is not updated in the releases menu.  This change is generated by running `site/scripts/release.sh` for preparing 4.6.0 release.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #752 from sijie/update_4.5.1_release_date
2017-11-22T02:02:19Z,688,ISSUE #688: add bookkeeper-all package and update notice files  Descriptions of the changes in this PR:      - move src/ to bookkeeper-dist/src/     - built two packages in bookkeeper-dist: one is `bookkeeper-server` - server only package with prometheus stats provider and vertx http server        the other one is `bookkeeper-all` - includes all packages.     - remove assembly plugin from bookkeeper-server module     - update release guide  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #737 from sijie/add_slim_module  closes #688
2017-11-22T01:11:08Z,731,ISSUE #731: refine LedgerEntry interface and implementation  In LedgerEntry interface  getEntry() and getEntryBuffer() have completely different behaviours. getEntry() releases bytebuf automatically  while getEntryBuffer() returns the bytebuf (if you don't call getEntry  you are responsible for releasing the entry buffer.  In this change: make getEntry() reenter-able; make LedgerEntry implement AutoCloseable; LedgerEntry is responsible for releasing the bytebuf it is holding.  Descriptions of the changes in this PR: 1.  add `close` and `duplicate` in `api.LedgerEntry`  1.  LedgerEntryImpl implements `api.LedgerEntry`  1.  client.LedgerEntry doesn't implement the new api. it wraps an `api.LedgerEntry`  1.  add `close` in api.LastConfirmedAndEntry." 1.  fix build and test errors.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #738 from zhaijack/issue-731  closes #731
2017-11-21T04:22:35Z,236,issue #236: shaded jar lose necessary bk jar to execute  Descriptions of the changes in this PR:   after bump to bk4.6  add bk-proto bk-http dependency to shaded jar  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #237 from ArvinDevel/addBkDependencyInShade  closes #236
2017-11-20T23:02:37Z,747,ISSUE #747: Reorder releases menu - 4.5.1 should appear before 4.5.0  Descriptions of the changes in this PR:  - 4.5.1 should appear before 4.5.0 - bump dlog version to 0.5.0  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #748 from sijie/issue_747  closes #747
2017-11-20T06:48:18Z,550,ISSUE #550: add readLastAddConfirmedAndEntry in ReadHandle for long poll read  Descriptions of the changes in this PR: 1  add a class LastAddConfirmedAndEntry and metnod readLastAddConfirmedAndEntry() in ReadHandle; 2  add implementation for readLastAddConfirmedAndEntry in LedgerHandler; 3  add testcase in BookKeeperApiTest; 4  remove un-used imports  break down long lines  fix wrong comments.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #729 from zhaijack/issue-550  closes #550
2017-11-18T02:32:10Z,674,ISSUE #674: Documentation for HTTP endpoints  Descriptions of the changes in this PR: Add a document for http endpoints.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #721 from zhaijack/http_doc  closes #674
2017-11-17T16:16:40Z,678,Release notes for 4.5.1  This patch contains new site docs for 4.5.1  Author: eolivelli <eolivelli@apache.org> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #678 from eolivelli/releasenotes451
2017-11-17T03:51:38Z,739,ISSUE #739: Move the implementation of http services to be under server package  Descriptions of the changes in this PR:  bookkeeper-http module provides the framework for http admin rest api. it is using 'org.apache.bookkeeper.http' and 'org.apache.bookkeeper.http.service. the http package inbookkeeper-server` is reusing these two packages. it is not good for two modules sharing same package name  it is going to be confusing javadoc.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #740 from sijie/http_impl  closes #739
2017-11-16T13:06:26Z,734,ISSUE #734: bookkeeper-benchmark is broken after protobuf files are moved to bookkeeper-proto  Descriptions of the changes in this PR:  Problem:  The issue was introduced after protobuf files are moved to bookkeeper-proto. so the protobuf is not shaded correctly. So in bookkeeper-benchmark  it is conflicted with the protobuf version introduced by hadoop.  Solution:  - update the bookkeeper-server pom.xml to shade protobuf correctly - remove hadoop dependency from bookkeeper-benchmark.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #735 from sijie/protobuf_issue  closes #734
2017-11-16T13:00:47Z,713,ISSUE #713: Mark new API as experimental  Descriptions of the changes in this PR:  mark new api as experimental - `InterfaceStability.Unstable`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #736 from sijie/mark_api_experimental  closes #713
2017-11-16T12:54:42Z,726,ISSUE #726: Unit Tests failure with BKMetadataVersionException  Descriptions of the changes in this PR:  Problem:  The problem is introduced after making storing ctime optional. the verification become inconsistent because the way how ctime was assigned and compared. It causes the test cases failing in #726  Solution:  This change is to change `isConflict` to ignore comparing ctime if client disables storing system time as ctime.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #730 from sijie/fix_ctime_issue  closes #726
2017-11-14T09:31:38Z,724,ISSUE #724: fix wrong link for slack signup  Descriptions of the changes in this PR: Change the link of slack signup from http://apachebookkeeper.slack.com/ to https://apachebookkeeper.herokuapp.com/ in https://bookkeeper.apache.org/community/slack/ and click the self-register link.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #725 from jiazhai/issue-724  closes #724
2017-11-13T19:01:56Z,706,Bookies should not queue read request indefinitely  Integrating some changes made to Yahoo bookkeeper by Matteo Merli.  The apache bookkeeper thread pool in use by OrderedScheduler is different  and does not have access to setting a queue size limit  so I created QueueAssessibleExecutorService  and check the queue size instead.  Other than that  this code change is pretty similar to Yahoo's.  Original bug description for this change:  Since we are using a thread pool to handle read requests in bookies  we have seen that when the Bookie read IO is maxed out  the requests are being accumulated in the bookie.  Essentially  the bookie is busy serving read requests that have already been timed out on the client side (end to end read latency can reach hours..). The queue keeps growing indefinitely  leading to OOM errors and bookie restart.  All unit tests pass for me locally with this change.  Author: Aaron Gresch <agresch@yahoo-inc.com>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #706 from agresch/agresch_cms1254
2017-11-12T08:18:04Z,694,ISSUE #694: ReadHandle doesn't have getLength() method  Descriptions of the changes in this PR:  - add `getLength()` to ReadHandle interface - add `getLastAddPushed` to WriteHandle interface - add unit tests and fix issue in MockBookKeeperTestCase  Author: Jia Zhai <jiazhai@users.noreply.github.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #715 from sijie/api/support_get_length  closes #694
2017-11-12T07:13:56Z,612,ISSUE #612: Make bookie recovery work with recovering multiple bookies  Descriptions of the changes in this PR:  This is a change ported from twitter branch.  - Enable recovering multiple bookies in bookie shell - Add a unit test for BookieShell.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #714 from sijie/recover_command_fix  closes #612
2017-11-12T07:02:25Z,490,ISSUE #490: Add a flag to not serialize `ctime` field  Descriptions of the changes in this PR:  This request is for DL bookkeeper version upgrade. Because twitter's bk version doesn't include this change  so any ledgers written by new bk version will fail to be read by old version. To simplify the upgrade story  it is good to allow not serialize ctime field.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #718 from sijie/flag_to_not_serialize_ctime  closes #490
2017-11-11T21:55:57Z,716,ISSUE #716: PendingAddOp accesses a released ByteBuf  Descriptions of the changes in this PR:  - release `toSend` bytebuf only when a PendingAddOp is recycled. - fix MockBookKeeperTestCase to run callbacks in the same executor thread.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #717 from sijie/issue_176  closes #716
2017-11-11T00:51:29Z,691,ISSUE #691: Move generated files into their own module  Upcoming changes are using GRpc in conjunction with protobuf. GRpc generates code that created deprecation warnings when compiled with java 8  so this change moves all generated code out to another module  so that we don't have to turn off -Werror for all code.  In any case  at some point we should split the bookkeeper client out from the server module  at which point we would need the definitions on a common place.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #711 from ivankelly/proto-module  closes #691
2017-11-09T00:55:39Z,707,ISSUE #707: NOTICE file should not contain references to JLine  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #708 from eolivelli/notice-jline  closes #707
2017-11-08T11:27:20Z,1040,BOOKKEEPER-1040: Use separate log for compaction and add transaction support  Problem: Compaction might keep generating duplicated data which would cause disk full. This is because we don't have transactional operation for compaction. So if compaction keeps failing in the middle  bookie would end up with a lot of garbage data.  Change: 1. Introduce abstract class AbstractLogCompactor with an interface compact(). 2. Move the existing compaction logic to a separate class called EntryLogCompactor. 3. Introduce transactional compaction  we can recover an incomplete compaction or rollback a compaction failure. 4. Add an configuration to enable transactional compaction  Potential Risk: 1. No risk if we keep using the default compactor. 2. If we choose to enable transactional compaction with separate log file  we need to be careful about it  since we use a separate log for compaction  if we have a lot of old small ledgers in the bookie  we will end up with a lot of small entry log files. And this will potentially cause bookkeeper "Too many open files" because GC will scan all the entry log files and keep them open.  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #704 from yzang/yzang/BOOKKEEPER-1040
2017-11-07T19:25:59Z,702,Landing pages documentation fixes  There were a few "broken windows" on the current landing pages for the different versions of BookKeeper  including mis-applied code backticks  an incorrect HTML code (`&trades;` instead of `&trade;`)  etc.  Author: Luc Perkins <lucperkins@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #702 from lucperkins/bugs/docs-main-page
2017-11-06T14:47:17Z,699,ISSUE #699: Docker healthchek is failing #699  The docker healthcheck is failing because it's trying to run the bookkeeper command without specifying a path.  Adding the full path to the command fix this issue.  Signed-off-by: Antonio Ojea <antonio.ojea.garciagmail.com>  Descriptions of the changes in this PR:  (PR description content here)...  Author: Antonio Ojea <antonio.ojea.garcia@gmail.com>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #700 from itsuugo/issue#699  closes #699  closes #699
2017-11-04T02:19:00Z,696,ISSUE #696: copy site/docs/4.5.0 to site/docs/4.6.0  Descriptions of the changes in this PR: copy site directory in order to start new release for 4.6.0  and then documentation changes of release 4.6.0 will be based on this  to make changes more clear.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #698 from jiazhai/issue-696  closes #696
2017-11-04T02:15:54Z,692,fix merge script (#692)  The merge script is broken due to a typo in 4c2e90d2536676f14df944c5d8b4288362aa48b9
2017-11-03T16:13:33Z,501,ISSUE #501: Fix race in CompactionTest  testMinorCompactionWithNoWritableLedgerDirsButIsForceGCAllowWhenNoSpaceIsSet was failing regularly on jenkins. The issue was that it was trying to kick off a forced garbage collection by setting the force flag and triggering. However  in some cases another GC would be running and would clear the flag after it had been set  but before the trigger was called.  This patch adds a new form of triggering which allows the caller to explicitly specify which flags will be active for the GC run.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #690 from ivankelly/make-compat-fail  closes #501
2017-11-03T07:40:13Z,685,ISSUE #685: Merge script: make DEV_BRANCH_NAME configurable  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #686 from eolivelli/fix/issue-683-merge-other-branch  closes #685
2017-11-02T19:11:03Z,681,ISSUE #681: Deploying bookkeeper in k8s using StatefulSets  Descriptions of the changes in this PR:  Provide a yaml file to deploy bookkeeper in k8s using [StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/)  Author: Sijie Guo <sijie@apache.org> Author: Ivan Kelly <ivank@apache.org> Author: eolivelli <eolivelli@apache.org> Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Jia Zhai <None>  This closes #682 from sijie/k8s/statefulsets  closes #681
2017-11-02T06:55:15Z,665,Recycle AddRequest/AddResponse objects  This change was originally afd0ecb6 & 75bf0fa1 on the yahoo-4.3 branch  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #665 from ivankelly/yahoo-bp-2
2017-11-01T16:06:40Z,,Update exception handling in constructing bookkeeper client
2017-11-01T16:06:40Z,,Fix DistributedSchedule.WriteSet compilation issue  DisributedSchedule writeset structure is changed in recent 4.6.0-SNAPSHOT version
2017-11-01T02:43:18Z,628,ISSUE #666: Introduce registration client for bookkeeper client to do bookie discover  Descriptions of the changes in this PR: while in BOOKKEEPER-628  It is trying to improve/generalize the bookie registration process.  This PR follows the work of #663  which provide bookie side registration  and it is for client side work  it tries to introduce RegistrationClient for bookkeeper client to do bookie discover.  This PR follows the work of #663  which provide bookie side registration   Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #667 from zhaijack/client_registration2  closes #666
2017-11-01T02:31:21Z,664,Recycle PendingAddOps  Avoid creating a new PendingAddOp object for each entry added  thus saving on garbage.  Originally commit 55ba4723 on the yahoo-4.3 branch.  Author: Ivan Kelly <ivank@apache.org> Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #664 from ivankelly/yahoo-bp-1
2017-10-31T05:26:22Z,680,Copy site from 4.5.0 to 4.5.1  Copy site directory in order to start new release notes for 4.5.1  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #680 from eolivelli/release-notes-451-copy
2017-10-30T19:49:34Z,679,Recycle instances of callback to obtain a PerChannelBookie client  This change was originally commit e2e77863 in the yahoo-4.3 branch.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #679 from ivankelly/yahoo-bp-3
2017-10-30T19:47:18Z,657,DistributionSchedule uses custom wrapped int[] rather than HashSet  This avoids the autoboxing on Integers and allocations of cells for the hashset.  This also implies using wrapped int[] object for the write set in the DistributionSchedules and PlacementPolicies.  This patch was originally submitted as dc7933b on the yahoo-4.3 branch  though this has been modified extensively to remove the dependency on carrotsearch hppc and to allow it to work with placement policies which didn't exist at the time of the original patch.  Author: Ivan Kelly <ivank@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #657 from ivankelly/yahoo-backports
2017-10-30T04:17:01Z,43,DLFS - A FileSystem API wrapper over dlog API  Descriptions of the changes in this PR:  - FileSystem API wrapper built over dlog API  (This is based on initial implementation from gerritsundaram at #43)  Features supported:  - create and append files - open files for reading - input stream and output stream for reading and writing data - list files - get file status - rename - mkdir  Features aren't supported:  - truncate - currently there is no clear distinguish between file and dir - only support delete recursive  (This change includes small changes for #224 #225 #226 ).  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #227 from sijie/fix_create_log
2017-10-29T02:28:10Z,675,ISSUE #675: Enable checkstyle in a few packages  These packages include:  - feature - processor - shims - stats - streaming - versioning - zookeeper  not fully enabled in conf package.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #676 from sijie/fix_checkstyles  closes #675
2017-10-27T23:13:10Z,754,ISSUE #265: Add persistable bookie status  Descriptions of the changes in this PR:  - Add support for persisting bookie status - Add configuration to enable/disable this feature - Add test cases - Improve bookie status stat  It also includes changes for BOOKKEEPER-754 (flush ledger storage after replaying journal)  Author: Sijie Guo <sijie@apache.org> Author: Yiming Zang <yzang@twitter.com>  Reviewers: Yiming Zang <yzang2016@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  This closes #266 from sijie/server_side_crc32  closes #265
2017-10-27T23:09:48Z,596,ISSUE #596 ISSUE #583: Auto replication should honor ensemble placement policy  Descriptions of the changes in this PR:  This pull request ports the changes from [twitter/bookkeeperfc7e171](https://github.com/twitter/bookkeeper/commit/fc7e171135a58cddb9e91f5f614b3ceb6f9f9fee)  The changes include:  1. when bookkeeper admin re-replicates a ledger  it will pick a bookie from the available bookies in the cluster to satisfy the placement constraint. (#596) 2. hence  remove `targetBookie` from ReplicationWorker  because the parameter will volatile the placement constraint. (#583) 3. at the same time  change `LedgerFragement` to represent the number of bookies that need to be check and replicate. a) the ledger checker can use the correct bookie index for verifying the existence of entries in a bookie (for stripping case) b) only read entries one time when need to replicate them to multiple bookies.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #641 from sijie/twitter_autorecovery_fixes  closes #596  closes #583
2017-10-27T18:58:19Z,628,ISSUE #662: Introduce Bookie Registration Manager for bookie server  Descriptions of the changes in this PR: While in BOOKKEEPER-628  It is trying to improve/generalize the bookie registration process. This PR is for bookie side  it tries to introduce Bookie registration manager for bookie server.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #663 from zhaijack/bookie_registration  closes #662
2017-10-27T18:51:32Z,669,Recycle instances of WriteEntryProcessor and ReadEntryProcessor  merge of some changes from Yahoo's repo  Author: Aaron Gresch <agresch@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  This closes #669 from agresch/agresch_recycle_entryprocessor
2017-10-25T13:59:40Z,658,Fail earlier when encountering DNS issues  We had some DNS issues today and various TestRegionAwareEnsemblePlacementPolicy tests were failing for me.  The LOG warning in RackawareEnsemblePlacementPolicyIml was not printing the right variable  which would have given a clue.  Additionally  the repp.myRegion was set to UNKNOWN  causing incorrect code flow.  Added an assert to kill the test as soon as this occurs.  Author: Aaron Gresch <agresch@yahoo-inc.com>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #658 from agresch/agresch_dns_failure
2017-10-25T13:45:27Z,606,ISSUE #606: Enhancements in developer environment  Improvements in maven configuration in order to speed up development  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  This closes #661 from eolivelli/plugins-upgrade  closes #606
2017-10-24T11:56:42Z,226,ISSUE #226: ByteBuf.release() was not called before it's garbage-collected  Descriptions of the changes in this PR:  the problem is a new entry buffer was allocated when closing log segment writer. the entry buffer is never used and also never recycled. It causes an annoying logging.  the fix is to assign a dummy entry writer which basically rejects writes  when closing a log segment writer. it would prevent leaking bytebuf.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #230 from sijie/fix_bytebuf_release_pr  closes #226
2017-10-24T11:49:19Z,224,ISSUE #224: listing logs should exclude <default>  Descriptions of the changes in this PR:  exclude `<default>` from listing logs  (the tests are covered by #227)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #229 from sijie/fix_listing_log_pr  closes #224
2017-10-24T11:35:36Z,227,Issue 225: Create log should create missing path components  Descriptions of the changes in this PR:  reuse the methods used by `rename` to create missing path components.  (the test is covered by #227)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #228 from sijie/fix_create_log_pr
2017-10-24T10:58:43Z,649,Pool AddCompletions  To avoid generating garbage in the fastpath.  Author: Ivan Kelly <ivan@midokura.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #649 from ivankelly/pool-completions
2017-10-23T20:19:10Z,648,Pool the V2 keys  To generate less garbage in the fast path.  Author: Ivan Kelly <ivan@midokura.com> Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #648 from ivankelly/pool-keys
2017-10-23T18:59:25Z,647,Fix a typo in PCBC logging  All ops had writeLac in their logged text  which is confusing  Author: Ivan Kelly <ivan@midokura.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #647 from ivankelly/pcbc-typo
2017-10-23T09:14:02Z,209,ISSUE #209: Support rename log  Descriptions of the changes in this PR:  - add rename operation in `Namespace` - add rename operation in `LogStreamMetadataStore` - implement the rename operation use zookeeper `multi` operation  Author: Sijie Guo <sijie@apache.org> Author: Shoukun Huai <shoukunhuai@gmail.com> Author: Arvin <arvindevel@gmail.com>  Reviewers: Jia Zhai <None>  This closes #210 from sijie/4_support_rename_pr  closes #209
2017-10-23T06:45:16Z,216,ISSUE164: Move findbug settings files to distributedlog-build-tools  Descriptions of the changes in this PR:  Move findbug settings files to distributedlog-build-tools  and a little change to bk-shade: add bk-common dependency and unshade netty.  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #216 from ArvinDevel/issue164
2017-10-23T06:45:16Z,216,ISSUE164: Move findbug settings files to distributedlog-build-tools  Descriptions of the changes in this PR:  Move findbug settings files to distributedlog-build-tools  and a little change to bk-shade: add bk-common dependency and unshade netty.  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #216 from ArvinDevel/issue164
2017-10-23T06:45:16Z,216,ISSUE164: Move findbug settings files to distributedlog-build-tools  Descriptions of the changes in this PR:  Move findbug settings files to distributedlog-build-tools  and a little change to bk-shade: add bk-common dependency and unshade netty.  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #216 from ArvinDevel/issue164
2017-10-20T22:19:08Z,646,Increase timeouts in TestDisableEnsembleChange  In some narrow cases  if we manage to connect to the bookie  but the bookie hasn't fully initialized  an add entry message will be dropped  and the client will wait for the timeout to complete. The timeout is 5 seconds by default  which was 5x the timeout in the test. This patch increases the test timeout to 10s  which should give enough time for the addEntry to fail and be retried.  Author: Ivan Kelly <ivan@midokura.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #646 from ivankelly/ensemble-change-test
2017-10-18T23:43:31Z,645,Fix concurrent v2 reads on the same ledger/entry  Original fix from by merlimat in the yahoo-4.3 branch  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #645 from ivankelly/con-read-v2-fix
2017-10-18T22:14:16Z,211,ISSUE #211: Support listing logs by prefix  Descriptions of the changes in this PR:  - extend `getLogs` to `getLogs(prefix)`  so it provides a filesystem `listFiles`-like semantic.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #212 from sijie/5_support_list_logs_by_prefix_pr  closes #211
2017-10-18T20:40:04Z,644,Fixed ref counting release on read errors  Original change by merlimat in yahoo-3.4 branch  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #644 from ivankelly/fix-ref-read
2017-10-18T20:09:34Z,207,ISSUE #207: Support getFirstLogRecord  Descriptions of the changes in this PR:  - support getFirstLogRecord  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #208 from sijie/3_get_firstrecord_pr  closes #207
2017-10-18T20:06:39Z,204,Issue 201: Fix the flaky test TestBKDistributedLogManager.deleteDuringRead  This closes #204  #201
2017-10-18T19:16:58Z,214,ISSUE173: Implement AutoCloseable in BKDistributedLogNamespace  Descriptions of the changes in this PR:  Implement AutoCloseable in BKDistributedLogNamespace  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #214 from ArvinDevel/issue173
2017-10-18T19:14:58Z,213,ISSUE #213: Correct logger name in BKLogWriteHandler  correct logger name in BKLogWriteHandler  Descriptions of the changes in this PR:  (PR description content here)...  Author: Shoukun Huai <shoukunhuai@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #215 from shoukunhuai/issue-213  closes #213
2017-10-18T07:24:17Z,640,Use ByteBuf for entrylogger reads  Original patch from merlimat in yahoo-4.3 branch  Author: Matteo Merli <mmerli@yahoo-inc.com> Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Ivan Kelly <ivank@apache.org>  This patch had conflicts when merged  resolved by Committer: Enrico Olivelli <eolivelli@apache.org>  This closes #640 from ivankelly/refcount-for-read
2017-10-18T07:17:38Z,639,Recycle buffers used in EntryLogger#addEntry  To avoid creating a buffer and letting it go out of scope and be GC'd each time.  This change was originally made by merlimat in the yahoo-4.3 branch.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Ivan Kelly <ivank@apache.org>  This closes #639 from ivankelly/recycle-buf
2017-10-18T07:15:40Z,638,Fix for BookKeeperBuildersTest  Previous findbugs fix broke it.  Author: Ivan Kelly <ivan@midokura.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #638 from ivankelly/bkbuildertest-fail
2017-10-17T16:22:08Z,559,ISSUE #559: Fix findbugs error on SyncCallbackUtils  Fix FindBugs warning BC_UNCONFIRMED_CAST in  class SyncCallbackUtils  Author: eolivelli <eolivelli@apache.org> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Jia Zhai <None>  This closes #560 from eolivelli/findbugs-synccallback  closes #559
2017-10-17T07:32:47Z,1062,BOOKKEEPER-1062: Fixed the race in AuditorLedgerCheckerTest  Descriptions of the changes in this PR:  This fixes the race condition in the auditor between read only bookies and available bookies.  But because I am not sure of the performance impacts to modifying getReadOnlyBookies  I have opted to add in a new getROBookies.  But I am happy to change it.  This pull request is mostly to show my work and see what others think.  Author: Robert Evans <evans@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #556 from revans2/BOOKKEEPER-1062
2017-10-17T07:26:37Z,561,ISSUE #561: Remove exec commands to start in the shell pid  Author: Ali Ahmed <a.ahmed@streaml.io>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Jia Zhai  Sijie Guo <sijie@apache.org>  This closes #557 from aahmed-se/master  closes #561
2017-10-13T16:14:29Z,506,ISSUE #506: BP-15 New CreateLedger API  BP-15 New CreateLedeger API Introduce new org.apache.bookkeeper.client.api package Introduce new Mockito based test suite for BookKeeper client  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie.apache.org>  Ivan Kelly <ivank@apache.org>  This closes #549 from eolivelli/bp15-createledger-api-2  closes #506
2017-10-12T21:50:35Z,,Avoid copying bytebuf for constructing log record to write
2017-10-12T21:44:03Z,,Fix the flaky test TestBKDistributedLogManager.deleteDuringRead
2017-10-11T06:02:38Z,197,ISSUE #197: Provide a guide for running on k8s  Descriptions of the changes in this PR:  add one page for how to deploy on k8s. it is based on http://bookkeeper.apache.org/docs/latest/deployment/kubernetes/ and use distributedlog image and add instructions on how to create distributedlog namespaces and run benchmark.  This change is based on #196  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #198 from sijie/add_docker  closes #197
2017-10-11T05:43:46Z,520,ISSUE #520: Add more http endpoint  Descriptions of the changes in this PR:  #278 introduces BookKeeper Http Endpoint module. However there are only two endpoints  which is “/heartbeat” and “/api/config/serverConfig”. In order to fully leverage the http modules  The goal is to add more endpoints to this modules. Please reference BP-17 for more details.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #521 from zhaijack/http_endpoint  closes #520
2017-10-11T01:44:34Z,547,ISSUE #547: Allow load extra lifecycle components when running a bookie server.  Descriptions of the changes in this PR:  - make a common `ServerLifecycleComponet` for the components loaded by a bookie server - add a flag to allow start extra components. - add test cases  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #548 from sijie/loadable_components  closes #547
2017-10-10T09:28:39Z,525,ISSUE #525: Refactor PerChannelBookieClient  There's a lot of duplicate code in PerChannelBookieClient  particularly in the completions. It makes it more difficult to add anything to the class.  Concretely the patch: - Factors out common code from PCBC completions - Makes erroring out a member of completion classes - Refactors out writing and flushing messages  so all RPCs use same code path - Moves timeout handling into CompletionValue - Moves response handling into completions - Moves logging and status conversion into a common method  Author: Ivan Kelly <ivan@ivankelly.net>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #526 from ivankelly/refactor-pcbc  closes #525
2017-10-05T07:24:48Z,534,ISSUE #534: Download docs reference old release  Descriptions of the changes in this PR:  use the latest release in the download page  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #539 from sijie/fix_documentation  closes #534
2017-10-05T07:22:40Z,540,ISSUE #540: BookieServer failed to start because lifecycle component name is not provided  Descriptions of the changes in this PR:  - add component name `bookie-server` - remove the catch block - fix the prometheus stats provider package name in configuration files.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #541 from sijie/fix_lifecycle_stack  closes #540
2017-10-04T09:04:57Z,193,ISSUE #193: Shade Bookkeeper and unshade ZooKeeper in core module  Descriptions of the changes in this PR:  Shade Bookkeeper and unshade ZooKeeper in core module  Author: Arvin <arvindevel@gmail.com>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #194 from ArvinDevel/shade_bk  closes #193
2017-10-04T08:59:45Z,165,ISSUE #165: Enable checkstyle in core module  Descriptions of the changes in this PR:  Fix checkstyle error in core module  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #192 from ArvinDevel/enable_check  closes #165
2017-10-04T08:48:15Z,181,ISSUE #181: Enable LogRecord ByteBuf based constructor public  Descriptions of the changes in this PR: change LogRecord ByteBuf based constructor to public  Author: Arvin <arvindevel@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #182 from ArvinDevel/issue_181  closes #181
2017-10-04T07:30:49Z,537,ISSUE #537: Compilation warning on unchecked cast  Descriptions of the changes in this PR:  add `SuppressWarnings("unchecked")` in TestPrometheusMetricsProvider.java  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #538 from sijie/fix_compilation_error  closes #537
2017-10-04T02:51:08Z,535,ISSUE #535: Prometheus metrics provider fails to initialize  Descriptions of the changes in this PR:  - the parameter of `collectorNames` should be Collector rather than String - add test case for prometheus metrics provider - rename the classes to under `org.apache.bookkeeper.stats.prometheus` rather than taking the common `stats` package.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #536 from sijie/fix_promethus  closes #535
2017-10-04T02:46:18Z,532,ISSUE #532: Drop all @Test(timeout) annotations  Simply drop the 'timeout' parameter for Test annotations  we have already a global timeout set in surefire configuration  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #533 from eolivelli/task/cleaup-timeouts  closes #532
2017-10-03T10:46:14Z,527,ISSUE #527: Introduce backoff and retry utilities  Descriptions of the changes in this PR: Mainly want to  Introduce backoff and retires utilities: Backoff implements various backoff strategiesis  and id intended to determine the duration after which a task is to be retried. Retries is a util class for supporting retries with customized backoff.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #528 from zhaijack/retries_backoff  closes #527
2017-10-03T10:31:59Z,1106,BOOKKEEPER-1106: Introduce write FileInfo cache and read FileInfo cache  Problem: when read behind happens  it would quickly read bunch of ledgers  which will evict current active ledgers for writing from the ledger cache. with the ledger being evicted from cache  it would impact the write performance.  This feature is contributed by sijie   in which we introduced write file info cache and read file info cache to cache the ledger index separately for read and write  so that when catch up read happens  it will not evict the file info for writes.  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Jia Zhai  This closes #513 from yzang/yzang/BOOKKEEPER-1106
2017-09-27T09:03:33Z,517,ISSUE #517: port shared-resource-manager utils from distributredlog  Descriptions of the changes in this PR:  Try to portshared-resource-manager utils  from DistributedLog  so it can be used later on.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #518 from zhaijack/shared_resource  closes #517
2017-09-20T14:36:39Z,499,ISSUE #499: make a package contains all the jar  Descriptions of the changes in this PR: This is a sub-task for #458: Make Prometheus provider the default in bk_server.conf  Include stats providers in a -all package   Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #500 from zhaijack/all_bin  closes #499
2017-09-19T09:10:28Z,508,ISSUE #508: Introduce lifecycle components for managing components in bookie server  Descriptions of the changes in this PR:  The motivation of creating lifecycle components is described in #508.  This changes include:  - create bookkeeper-common module  move some common classes (such as interface annotations) to common module. - add the lifecycle components in bookkeeper-common module. - add a package `org.apache.bookkeeper.server` for keeping all server related classes. - rewrite BookieServer using the lifecycle components: stats provider | bookie server | auto recovery | http endpoint - BookieServer is still kept for backward compatible  all the main functions are delegated to `org.apache.bookkeeper.server.Main`.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #509 from zhaijack/metadata/lifecycle_management  closes #508
2017-09-18T23:23:24Z,515,ISSUE #515: Run bookies using hostIP instead of containerIP in k8s  Descriptions of the changes in this PR:  - use `status.hostIP` rather than `status.containerIP`. so the identifier (ip) of a bookie pod will not be changed after it is restarted. - use `adverstiseAddress` to advertise hostip as the ip of a bookie pod - change it to use `hierarchical` ledger manager  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #516 from sijie/run_bookie_using_hostport_bk  closes #515
2017-09-16T02:38:26Z,31,BOOKKEEPER-31: Project Logo  Descriptions of the changes in this PR:  - upload the bookkeeper logo to site directory (including both svg and png format) - add &trademark; to Apache BookKeeper.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #511 from sijie/BOOKKEEPER-31
2017-09-13T09:12:24Z,507,ISSUE #507: Introduce @FlakyTest annotation for marking a few tests as flaky  Descriptions of the changes in this PR:  - introduced FlakyTest annotation - mark a few tests as flaky tests (create issues for them)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #504 from sijie/mark_test_as_failures  closes #507
2017-09-07T12:16:27Z,494,ISSUE #494: Rename ZkVersion to LongVersion  Descriptions of the changes in this PR:  - rename `ZkVersion` to `LongVersion` - move it from `meta` package to `versioning` package  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #495 from zhaijack/metadata/rename_zkversion_to_longversion  closes #494
2017-09-07T07:37:47Z,,[maven-release-plugin] prepare for next development iteration
2017-09-07T07:37:47Z,,[maven-release-plugin] prepare for next development iteration
2017-09-07T07:37:47Z,,[maven-release-plugin] prepare for next development iteration
2017-09-07T07:37:17Z,,[maven-release-plugin] prepare branch release-0.5.0
2017-09-07T06:33:28Z,160,ISSUE #160: Introduce backward compatibility testing  Descriptions of the changes in this PR:  The core testing logic is in `tests/bin/docker-backward-test.sh`.  - introduce an all module for packaging - add docker images for 0.3.51  0.4.0-incubating and latest - add two backward compat testing module - using docker images for backward compatibility testing  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <None>  This closes #175 from sijie/docker_image  closes #160
2017-09-06T03:27:45Z,496,ISSUE #496: some docker images don't need port forwarding  Descriptions of the changes in this PR:  some docker images don't need port forwarding. remove port forwarding from them.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #497 from sijie/remove_docker_port  closes #496
2017-09-06T03:24:42Z,166,ISSUE #166: Code cleanup for 0.5.0 release  Descriptions of the changes in this PR:  - add InterfaceAudience and InterfaceStability for public API to inform people what changes would be expected for those interface. - avoid using guava classes in public API since we will provide a shaded jar for distributedlog-core - enable ImportOrder checkstyle rule in some modules - move `org.apache.distributedlog.io` to `distributedlog-common` module - rename `setReadyToFlush` to `flush` and rename `flushAndSync` to `commit` for the new API  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <None>  This closes #172 from sijie/finalize_api  closes #166
2017-09-06T03:24:42Z,166,ISSUE #166: Code cleanup for 0.5.0 release  Descriptions of the changes in this PR:  - add InterfaceAudience and InterfaceStability for public API to inform people what changes would be expected for those interface. - avoid using guava classes in public API since we will provide a shaded jar for distributedlog-core - enable ImportOrder checkstyle rule in some modules - move `org.apache.distributedlog.io` to `distributedlog-common` module - rename `setReadyToFlush` to `flush` and rename `flushAndSync` to `commit` for the new API  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <None>  This closes #172 from sijie/finalize_api  closes #166
2017-09-06T03:24:42Z,166,ISSUE #166: Code cleanup for 0.5.0 release  Descriptions of the changes in this PR:  - add InterfaceAudience and InterfaceStability for public API to inform people what changes would be expected for those interface. - avoid using guava classes in public API since we will provide a shaded jar for distributedlog-core - enable ImportOrder checkstyle rule in some modules - move `org.apache.distributedlog.io` to `distributedlog-common` module - rename `setReadyToFlush` to `flush` and rename `flushAndSync` to `commit` for the new API  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <None>  This closes #172 from sijie/finalize_api  closes #166
2017-09-06T01:28:40Z,492,ISSUE #492: set the protobuf syntax to 'proto2'  Descriptions of the changes in this PR:  Explicitly set protobuf syntax to `proto2`.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #493 from zhaijack/metadata/set_protobuf_syntax_version  closes #492
2017-09-01T16:20:53Z,430,Issue #430: Add an instruction in docker README to run standalone cluster  Descriptions of the changes in this PR: Add an instruction in docker README to run standalone cluster  and change the docker image description more accurately  Author: Arvin <arvindevel@gmail.com>  Reviewers: Francesco Caliumi <None>  Jia Zhai <None>  This closes #470 from ArvinDevel/issue_430  closes #430
2017-09-01T16:18:16Z,484,y  Descriptions of the changes in this PR: When added the documentation  the sidebar was not updated  need to update to include k8s deployment.  After fix: <img width="1371" alt="default" src="https://user-images.githubusercontent.com/26834121/29860959-4101c23a-8d9a-11e7-8e6b-3eeb17a3a5b4.png">  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #484 from zhaijack/fix_sidebar
2017-09-01T00:12:57Z,485,ISSUE #485: Change 'segment' to 'fragment' in docs  Descriptions of the changes in this PR:  Change  'segment' to 'fragment' in docs  and make some relative code more clearer  Author: Arvin <arvindevel@gmail.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #486 from ArvinDevel/issue_485  closes #485
2017-08-31T06:50:53Z,151,DL-45: DL should allow ByteBuf based API to avoid copying bytes array  Descriptions of the changes in this PR:  This change leverages the `ByteBuf` api introduced in bookkeeper 4.5.0. It will avoid copying bytes array between LogRecord and LogRecordSet/Entry  and avoid copying bytes from DL to BK client.  This change also bump the lz4 library to `1.3.0` to leverage the `ByteBuffer` binding.  Author: Sijie Guo <sijie@apache.org> Author: Jia Zhai <zhaijia03@gmail.com> Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Leigh Stewart <None>  This closes #151 from sijie/zero_copy
2017-08-31T06:50:53Z,151,DL-45: DL should allow ByteBuf based API to avoid copying bytes array  Descriptions of the changes in this PR:  This change leverages the `ByteBuf` api introduced in bookkeeper 4.5.0. It will avoid copying bytes array between LogRecord and LogRecordSet/Entry  and avoid copying bytes from DL to BK client.  This change also bump the lz4 library to `1.3.0` to leverage the `ByteBuffer` binding.  Author: Sijie Guo <sijie@apache.org> Author: Jia Zhai <zhaijia03@gmail.com> Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Leigh Stewart <None>  This closes #151 from sijie/zero_copy
2017-08-31T06:50:53Z,151,DL-45: DL should allow ByteBuf based API to avoid copying bytes array  Descriptions of the changes in this PR:  This change leverages the `ByteBuf` api introduced in bookkeeper 4.5.0. It will avoid copying bytes array between LogRecord and LogRecordSet/Entry  and avoid copying bytes from DL to BK client.  This change also bump the lz4 library to `1.3.0` to leverage the `ByteBuffer` binding.  Author: Sijie Guo <sijie@apache.org> Author: Jia Zhai <zhaijia03@gmail.com> Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Leigh Stewart <None>  This closes #151 from sijie/zero_copy
2017-08-31T06:47:45Z,156,ISSUE #156: Provide a shading jar for distributedlog-core  Descriptions of the changes in this PR:  - provide a shade-all jar (shading all the dependencies) for distributedlog-core. the `shade-all` jar is classified as `shaded`.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #161 from zhaijack/shade_libs  closes #156
2017-08-30T07:30:31Z,274,ISSUE #274: Ensuring the right number of bookies are passed.  Descriptions of the changes in this PR: This fixes #274. Ensures that benchmark measure right number of bookies for the warmup.  Author: arvindkandhare <arvind.kandhare@emc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #482 from arvindkandhare/issue-274-benchmarkfix  closes #274
2017-08-29T23:37:04Z,463,ISSUE #463: Improve bookkeeper unit test  Descriptions of the changes in this PR:  - remove `timeout` on individual tests  instead setting globalTimeout on base test `BookKeeperClusterTestCase` to simplify managing timeout on individual tests - use maven docker build to run unit tests - zookeeper cluster uses port 0  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #481 from sijie/merge_fix  closes #463
2017-08-29T08:05:18Z,479,ISSUE #479: CompactionTest#testCompactionWithEntryLogRollover failed  Descriptions of the changes in this PR:  - restart bookie with disabling gc for #testCompactionWithEntryLogRollover - improve other tests to remove `Thread.sleep` and use a more deterministic way for doing gc  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #480 from sijie/fix_compaction_test  closes #479
2017-08-28T09:09:45Z,468,ISSUE #468: Introduce JMH for micro benchmarking  Descriptions of the changes in this PR:  - add a `test/jmh` module for micro-benchmarking - add a protocol related test: serializing and deserializing requests  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #469 from sijie/add_jmh_benchmark  closes #468
2017-08-28T09:01:43Z,475,ISSUE #475: Move code-coverage activation to a Maven profile  Move JaCoCo and Coveralls.io configuration to a separate code-coverage profile  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #476 from eolivelli/issue-475-profile-codecoverage  closes #475
2017-08-28T09:00:53Z,462,ISSUE #462: TestTLS failures  Descriptions of the changes in this PR:  Problem:  The behavior of loading configuration in `AbstractConfiguration` was changed recently. So the TLS provider was not cleared correctly for the failed tests.  Solution:  Explicitly clear TLS provider for each configuratio to address the failed tests.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #478 from sijie/fix_tls_test  closes #462
2017-08-28T08:54:27Z,343,ISSUE #343: TestFencing.testManyOpenParallel  Descriptions of the changes in this PR:  Problem:  The `LastAddConfirmed` was advanced due to piggyback on recovery adds. It will cause recovery adds become stall because of the entry id check.  This problem only occurs when there are multiple clients concurrently recover same ledger.  Solution:  Disable lac piggyback on recovery adds.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #477 from sijie/tests  closes #343
2017-08-27T00:59:50Z,473,ISSUE #473: Bump protobuf version from 2.x to 3.x  Descriptions of the changes in this PR:  - Bump protobuf version from 2.x to 3.x - Removed the generated protobuf files from source repo. - Use maven protobuf plugin to generate the protobuf files.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #474 from sijie/protobuf3  closes #473
2017-08-27T00:54:41Z,466,ISSUE #466: Move backward compatibility tests into a separate module  Descriptions of the changes in this PR:  - move backward compatibility test related stuffs to a separate module `test/backward`. - fix checkstyle for backward compatibility related tests - other pom file changes: move common dependencies to root pom  use variables - for bookkeeper-server module  produce a non-shaded jar and a shaded jar. so applications can choose what jar to use.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #467 from sijie/integration_tests  closes #466
2017-08-24T09:59:45Z,337,ISSUE #337: Docker image: K8s for bookkeeper and instructions on usage  Descriptions of the changes in this PR:  K8s deployment for bookkeeper and instructions on usage  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  This closes #461 from zhaijack/issue_337  closes #337
2017-08-24T07:29:10Z,464,ISSUE #464: Add JaCoCo code coverage configuration to master pom.xml  Introduce JaCoCo configuration to the master pom.xml. JaCoCo handles Java8 syntax better than Cobertura  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #465 from eolivelli/issue-464-jacoco  closes #464
2017-08-24T05:25:40Z,152,DL-206: Delete the log should also delete the underline ledgers  Problem: We're not deleting the ledgers when we delete the whole log stream using dlm.delete() API. This would cause a lot of garbage/orphan ledgers in Bookkeeper.  The fix is to delete the ledger when we delete the log stream. Also added a test to validate.  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #152 from yzang/yzang/DL-206
2017-08-23T13:07:26Z,459,ISSUE #459: fix loadConf in AbstractConfiguration  Descriptions of the changes in this PR: In loadConf  call setProperty for all k-v in baseConf. Please reference #459 for more anlysis and details.  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #460 from zhaijack/issue_459  closes #459
2017-08-22T18:38:25Z,410,ISSUE #410: BookKeeper binary distribution package contains a CHANGES.txt file  Drop CHANGES.txt  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #456 from eolivelli/issue-410  closes #410
2017-08-22T18:34:43Z,453,ISSUE #453: fix image broken in website  Descriptions of the changes in this PR: Fix image broken in website  After fix  image works well. <img width="1535" alt="default" src="https://user-images.githubusercontent.com/26834121/29500286-ee3e4d88-8651-11e7-80c2-d4febffb0bfe.png">  Author: Jia Zhai <zhaijia@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #455 from zhaijack/issue_453  closes #453
2017-08-22T13:02:31Z,254,ISSUE #254: Remove BookKeeperTools  Descriptions of the changes in this PR: remove the BookKeeperTools  update the latest admin docs and BookieRecoveryTest's annotation.  Author: Arvin <arvindevel@gmail.com>  Reviewers: Jia Zhai <None>  Enrico Olivelli <eolivelli@gmail.com>  This closes #452 from ArvinDevel/master  closes #254
2017-08-21T19:38:05Z,407,ISSUE #407: Enable allowLoopback when starting localbookie  Add allowLoopback=true flag in ServerConfiguration used in main() of LocalBookie facility  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #457 from eolivelli/issue-407  closes #407
2017-08-17T23:51:53Z,297,DL-2: DistributedLog should work with the official apache bookkeeper  This change is to upgrade bookkeeper version to BK 4.5.0.  - upgrade bookkeeper version to 4.5.0-SNAPSHOT (still waiting a few pull requests to merge apache/bookkeeper#297 apache/bookkeeper#287   - change registerSuccessEvent for StatsLogger to add TimeUnit   - use netty4 eventloop   - move twitter repository dependencies to proxy related module only. core library will not depend on scala dependency anymore.  This change is a collaboration change with sijie  We will provide a performance comparison between 0.4.0 (using Twitter BK) and 0.5.0 (using BK 4.5.) in a separate pull request or email.  Author: Jia Zhai <zhaijia03@gmail.com> Author: Jia Zhai <zhaijia@apache.org> Author: Sijie Guo <sijie@apache.org>  Reviewers: Leigh Stewart <lstewart@apache.org>  This closes #135 from zhaijack/bump_dl_version
2017-08-17T23:51:53Z,297,DL-2: DistributedLog should work with the official apache bookkeeper  This change is to upgrade bookkeeper version to BK 4.5.0.  - upgrade bookkeeper version to 4.5.0-SNAPSHOT (still waiting a few pull requests to merge apache/bookkeeper#297 apache/bookkeeper#287   - change registerSuccessEvent for StatsLogger to add TimeUnit   - use netty4 eventloop   - move twitter repository dependencies to proxy related module only. core library will not depend on scala dependency anymore.  This change is a collaboration change with sijie  We will provide a performance comparison between 0.4.0 (using Twitter BK) and 0.5.0 (using BK 4.5.) in a separate pull request or email.  Author: Jia Zhai <zhaijia03@gmail.com> Author: Jia Zhai <zhaijia@apache.org> Author: Sijie Guo <sijie@apache.org>  Reviewers: Leigh Stewart <lstewart@apache.org>  This closes #135 from zhaijack/bump_dl_version
2017-08-17T23:51:53Z,297,DL-2: DistributedLog should work with the official apache bookkeeper  This change is to upgrade bookkeeper version to BK 4.5.0.  - upgrade bookkeeper version to 4.5.0-SNAPSHOT (still waiting a few pull requests to merge apache/bookkeeper#297 apache/bookkeeper#287   - change registerSuccessEvent for StatsLogger to add TimeUnit   - use netty4 eventloop   - move twitter repository dependencies to proxy related module only. core library will not depend on scala dependency anymore.  This change is a collaboration change with sijie  We will provide a performance comparison between 0.4.0 (using Twitter BK) and 0.5.0 (using BK 4.5.) in a separate pull request or email.  Author: Jia Zhai <zhaijia03@gmail.com> Author: Jia Zhai <zhaijia@apache.org> Author: Sijie Guo <sijie@apache.org>  Reviewers: Leigh Stewart <lstewart@apache.org>  This closes #135 from zhaijack/bump_dl_version
2017-08-16T01:41:49Z,1105,BOOKKEEPER-1105: RackAwarePolicy: Failure to map node into rack may result in failure to add other nodes.  - RackAwarePolicy's no longer uses /default-region if rack mapping fails unless required (by RegionAwarePolicy) - it no longer fails to add rest of nodes after one node's failed addition  - added unit tests - added counters for successful/failed bookie adds/removal (PR description content here)...  UpdateLedgerOpTest failed but it seems to be known/unrelated issue.  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #425 from dlg99/fix/rackaware
2017-08-16T01:37:04Z,1100,BOOKKEEPER-1100: Add module for Bookkeeper Http Endpoint  Add Bookkeeper Http Server as a new module [bookkeeper-http]  1. Add children module [http-server]  which provide generic api for setting up a Http Server for bookkeeper  allowing to plugin different Http frameworks and inject the implementation of different BK related services to Http Handler to handle different endpoints  2. Add children module [vertx-http-server]  which is a Vertx.io based http server implementation  3. Add children module [twitter-http-server]  which is a TwitterServer based http server implementation  4. Add a package or org.apache.bookkeeper.http in [bookkeeper-server]  which include all the implementation for the services that handle different http endpoint request.  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #278 from yzang/yzang/BOOKKEEPER-1100
2017-08-15T01:13:08Z,143,Issue 141: graduation changes  remove/change incubate related things  - remove the "-incubating" from the code base. - change website link from http://distributedlog.incubator.apache.org into https://bookkeeper.apache.org/distributedlog - change repo from https://github.com/apache/incubator-distributedlog into https://github.com/apache/distributedlog - git from https://git-wip-us.apache.org/repos/asf/incubator-distributedlog.git into https://gitbox.apache.org/repos/asf/distributedlog.git - remove website foot  whch contains incubate infos in websiteindex.md - remove Disclaimer file and its references  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #143 from zhaijack/issue_141
2017-08-15T01:13:08Z,143,Issue 141: graduation changes  remove/change incubate related things  - remove the "-incubating" from the code base. - change website link from http://distributedlog.incubator.apache.org into https://bookkeeper.apache.org/distributedlog - change repo from https://github.com/apache/incubator-distributedlog into https://github.com/apache/distributedlog - git from https://git-wip-us.apache.org/repos/asf/incubator-distributedlog.git into https://gitbox.apache.org/repos/asf/distributedlog.git - remove website foot  whch contains incubate infos in websiteindex.md - remove Disclaimer file and its references  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #143 from zhaijack/issue_141
2017-08-15T01:13:08Z,143,Issue 141: graduation changes  remove/change incubate related things  - remove the "-incubating" from the code base. - change website link from http://distributedlog.incubator.apache.org into https://bookkeeper.apache.org/distributedlog - change repo from https://github.com/apache/incubator-distributedlog into https://github.com/apache/distributedlog - git from https://git-wip-us.apache.org/repos/asf/incubator-distributedlog.git into https://gitbox.apache.org/repos/asf/distributedlog.git - remove website foot  whch contains incubate infos in websiteindex.md - remove Disclaimer file and its references  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #143 from zhaijack/issue_141
2017-08-15T00:27:22Z,304,ISSUE #304: New Release Guide  Descriptions of the changes in this PR:  This is an attempt to improve the current release guide base on a few references :  [Beam](https://beam.apache.org/contribute/release-guide/) [Pulsar](https://github.com/apache/incubator-pulsar/wiki/Release-process)  Add this in main repo for reviews. We can later on make it part of website once #293 is completed.  A few items are TBD. comments are welcome.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #305 from sijie/release_guide  closes #304
2017-08-15T00:22:07Z,434,ISSUE #434: Move the content from wikis to website  Descriptions of the changes in this PR:  copied bunch of links from wiki pages and re-organized the links under `community`.  - first section: mailing list  issue tracking  release schedule and community meetings. - second section: a few guides on how to contribute  how to report issue and how to release - last section: resources (e.g. presentations  proposals)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #448 from sijie/sijie/move_contents  closes #434
2017-08-14T18:06:31Z,443,ISSUE #443: Update the mailing list  Descriptions of the changes in this PR:  Add a section about `issues` mailing list.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #445 from sijie/issue_443  closes #443
2017-08-14T18:05:34Z,440,ISSUE #440: Update "who are we?" page  Descriptions of the changes in this PR:  - add new DL PPMC members to BK PMC - fix full name and affiliations for a few members  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #447 from sijie/issue_440-  closes #440
2017-08-14T17:37:41Z,444,ISSUE #444: remove doc directory  Descriptions of the changes in this PR:  The doc directory was used by CMS to generate the old bookkeeper website. since we already moved to a new jekyll website  the files in this directory are not used anymore. we can remove them.  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #446 from zhaijack/issue_444  closes #444
2017-08-14T04:54:08Z,441,ISSUE #441: fix typos  Descriptions of the changes in this PR: Fix typos in docker readme. "Apache ZooKeeper is a software project of the Apache Software Foundation" -> "Apache Bookkeeper is a software project of the Apache Software Foundation"  "bookkepeer servers" -> "bookkeeper servers"  "The client only need to connect to a Zookkeeper server in the ensamble" -> "The client only need to connect to a Zookeeper server in the ensemble"  typo of other place: bookeeper -> bookkeeper  wile -> while  acknoledge -> acknowledge  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #442 from zhaijack/issue_441  closes #441
2017-08-11T22:40:56Z,385,ISSUE #385: Upgrade to commons-lang 2.6  Upgrade to commons-lang 2.6 which can run on Java9 see explanation on #385  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #386 from eolivelli/commonslang26  closes #385
2017-08-11T22:38:28Z,418,ISSUE #418: bump docker to use bk - 4.5.0  Descriptions of the changes in this PR: -  bump the docker image to use 4.5.0 binary  update pgp_key and bk version. -  delete yum install for md5sum and sha1sum  since they are already in coreutils  which is default installed; and left them here will report error: 'No Match for argument: md5sum/sha1sum'  while 'yum remove' in docker build.  have tested by running make run-dice.  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Francesco Caliumi <None>  This closes #436 from zhaijack/issue_418  closes #418
2017-08-11T22:27:27Z,435,ISSUE #435: Build javadoc for releases  Descriptions of the changes in this PR:  - add javadoc links on sidebar and overview pages (try to promote this link for users to find the link easier) - update javadoc-gen.sh to be able to generate latest javadoc and all javadocs for versions under `docs`  minor fixes: - pass "JEKYLL_ENV=production" to docker because ci uses docker to build the documentation -  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #438 from sijie/publish_javadocs  closes #435
2017-08-11T22:19:32Z,431,ISSUE #431 ISSUE #221: merge scripts should mark milestone when merging pull requests  Descriptions of the changes in this PR:  improve merge script to do:  - assign a milestone - add `area/` label - add `type/` label - add `release/` label - when a change needs to merge to a different branch  add the bug fix `release/` label  This also addresses #221 to trim the template from pull request body.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <zhaijia03@gmail.com>  This closes #437 from sijie/merge_script_for_bug_releases  closes #431  closes #221
2017-08-11T10:23:08Z,414,ISSUE #414: use a clone of baseconf in new ServerConfiguration(baseConf)  Descriptions of the changes in this PR: This PR fix Issue #414   and in the comments of that issue contains the anysis of the bug.  Main changes: - Privde a clone of baseConf while do loadconf(baseConf)  so make baseConf and newConf work independently. - Remove 'loadConf(Configuration otherConf) '  since Configuration is an interface in common-configs and not have a clone method.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #424 from zhaijack/issue_414  closes #414
2017-08-10T21:22:05Z,432,ISSUE #432: Add "Google Analytics" to the website  Descriptions of the changes in this PR:  Add "google analytics" script to the website for tracking the documentation traffic. We can learn the pattern and improve documentation.  The google account for analytics is managed by bookkeeper pmc.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #433 from sijie/google_analytics  closes #432
2017-08-10T20:28:33Z,356,ISSUE #356: Release notes 4.5.0  Descriptions of the changes in this PR:  - summary for release 4.5.0 - highlights for 4.5.0 - full list of JIRA and Github issues.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  Venkateswararao Jujjuri (JV) <None>  This closes #402 from sijie/release_notes_4.5.0  closes #356
2017-08-10T19:56:48Z,429,release 4.5.0: update website  Descriptions of the changes in this PR:  under `site`  run `./scripts/release.sh`  what the script does:  - copy the `latest` to `4.5.0`. - finalize the version - update config yml  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #429 from sijie/update_website_for_4.5_release
2017-08-10T01:41:20Z,427,ISSUE #427: [WEBSITE] sidebar doesn't work on documentation index page  Descriptions of the changes in this PR:  sidebar uses `../../` for relative paths. in order to make this work  we need to move any pages under `docs` on level down and not use `index.md`.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Luc Perkins <None>  Matteo Merli <None>  This closes #428 from sijie/issue_427  closes #427
2017-08-09T20:59:26Z,416,Issue #416: Some small post-release documentation fixes  There were a few issues pointed out with the new BookKeeper website/documentation. This fixes issue #416 and makes a handful of spelling and wording fixes.  Author: Luc Perkins <lucperkins@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #426 from lucperkins/docs/small-post-release-fixes  closes #416
2017-08-09T18:29:02Z,422,ISSUE #422: Don't use community layout for documentation pages  Descriptions of the changes in this PR:  The layout of documentation page is marked as community. when users navigate to this page  it is a bit difficult for the users to figure out where they are. We should stick documentation pages to doc layout.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #423 from sijie/documentation_index  closes #422 and squashes the following commits:  4ec16d6 [Sijie Guo] remove community layout for docs page 21320b4 [Sijie Guo] The index page for documentation should use documentation layout rather than community layout
2017-08-09T03:42:09Z,421,Fix typo: TSL should be TLS in server_conf  TSL should be TLS in server_conf  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Sijie Guo <None>  This closes #421 from zhaijack/fix_conf_typo
2017-08-07T23:56:06Z,406,406  Descriptions of the changes in this PR: - Fix non-privileged user execution - Change the Makefile in order to always use current user when run the bk image - Fix Makefile in order to run "make run-demo" - Adjust unneeded packages remove in Dockerfile  Author: Francesco Caliumi - Diennea <francesco.caliumi@diennea.com>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  Sijie Guo <None>  This closes #406 from caiok/master
2017-08-07T20:52:24Z,411,Flip apache baseurl from `/test/content` to `/`  Descriptions of the changes in this PR:  INFRA is cutting the bookkeeper website from CMS to git. we need to flip '/test/content' to '/'.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <None>  This closes #411 from sijie/sijie/move_baseurl_to_root
2017-08-07T20:12:28Z,349,ISSUE #349: Move `security` docs under `latest` (hotfix)  Descriptions of the changes in this PR:  #325 moved the docs to under `docs/latest`. so we need to move `security` docs to under `docs/latest/security`.  At the same time  fix two broken links.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #408 from sijie/fix_bad_merges  closes #349
2017-08-07T18:46:19Z,349,ISSUE #349: Documentation for security feature in 4.5.0  Descriptions of the changes in this PR:  - add a section for `security` - overview to introduce security feature - encryption and authentication using tls - sasl authentication - zookeeper authentication  Author: Sijie Guo <sijie@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #350 from sijie/security_docs  closes #349
2017-08-07T18:41:46Z,355,ISSUE #355: upgrade guide  Descriptions of the changes in this PR:  - provide a general upgrade guide - document notes for upgrading from 4.4 to 4.5.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  Jia Zhai <None>  This closes #403 from sijie/upgrade_guide  closes #355
2017-08-07T18:32:22Z,366,ISSUE #366: [DOCUMENTATION] LedgerHandleAdv  Descriptions of the changes in this PR:  - add documentation about LedgerHandleAdv - update overview  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #401 from sijie/issue_366  closes #366
2017-08-07T18:25:02Z,325,ISSUE #325: [WEBSITE] how to manage documentation between releases  Descriptions of the changes in this PR:  - move `docs` to `docs/latest` - add a script to proceed release steps    - copy `docs/latest` to `docs/{version}`    - in docs/{version}  replace versions    - bump versions in `_config.yml`    - generate placeholders for releaseNotes  Author: Sijie Guo <sijie@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  Jia Zhai <None>  This closes #400 from sijie/release_versions  closes #325
2017-08-07T10:43:55Z,404,Fix zkCli issue  Descriptions of the changes in this PR: /opt/zk/bin/zkCli.sh was leaked to replace by /opt/bookkeeper/bin/bookkeeper org.apache.zookeeper.ZooKeeperMain and cause:  /opt/bookkeeper/entrypoint.sh: line 61: /opt/zk/bin/zkCli.sh: No such file or directory  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Sijie Guo <None>  This closes #404 from zhaijack/docker_fix
2017-08-06T13:08:11Z,338,ISSUE #338: add first draft Docker image including community suggestions  This is the first part of #335. And it is based on #197 Main changes:  327: Docker image: Drop versions and Alpine support.  260: Docker image: provide a way to pass any desired configuration property via ENV vars.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Matteo Merli <None>  Sijie Guo <None>  This closes #342 from zhaijack/issue_338  closes #338
2017-08-05T22:13:02Z,397,ISSUE #397: [CI] publish-website job failed when mvn:release bump version to 4.6.0-SNAPSHOT  Descriptions of the changes in this PR:  Use `mvn install` rather than `mvn compile`  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <None>  This closes #398 from sijie/issue_397  closes #397
2017-08-05T18:05:55Z,,[maven-release-plugin] prepare for next development iteration
2017-08-05T18:05:50Z,,[maven-release-plugin] prepare branch branch-4.5
2017-08-05T08:33:00Z,390,ISSUE #390: [CI] Test errors in TestRackawareEnsemblePlacementPolicyUsingScript  Descriptions of the changes in this PR:  `Shell` class was ported from hadoop  but it contains a lot of unused code. Especially there is not `HADOOP_HOME` will set  so an exception will be thrown. (although the issue seems to be hidden in mac)  This change is to clean up the `Shell` class. The `Shell` class is only used for executing shell script configured in rackaware placement policy.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Enrico Olivelli <None>  This closes #396 from sijie/sijie/cleanup_shell  closes #390
2017-08-05T06:37:43Z,393,ISSUE #393: [CI] publish-website job will be marked as failure if it is an empty commit  Descriptions of the changes in this PR:  - use `git diff-index` to checkout if there is any changes to commit or not - port some changes from CI back to script.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #394 from sijie/issue_393  closes #393
2017-08-05T06:13:48Z,367,ISSUE #367: [DOCUMENTATION] add api readUnconfirmedEntries in website doc  Descriptions of the changes in this PR:  add api readUnconfirmedEntries in website doc  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #371 from zhaijack/issue367  closes #367
2017-08-04T23:46:34Z,391,ISSUE #391: CI failed with java.lang.ClassNotFoundException: org.hamcrest.SelfDescribing  Descriptions of the changes in this PR:  - include hamcrest dependency for tests (according to [junit](https://github.com/junit-team/junit4/wiki/Download-and-Install) instruction) - exclude `.repository` to turn ci builds to run with its own local repository - dump the rat check output to console (easier for debugging on jenkins)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  This closes #392 from sijie/bookkeeper-test  closes #391
2017-08-04T20:53:41Z,383,ISSUE #383: mvn release:branch fails  Descriptions of the changes in this PR:  - change `compilerArguments` to `compilerArgs` - use `compilerArg` for configuring the arguments for compilation.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #384 from sijie/sijie/fix_release  closes #383
2017-08-04T07:50:50Z,262,ISSUE #262: Useless option explicitLacInterval is set to 1 in default bk_server.conf  Remove an useless line from default bk_server.conf file  Author: eolivelli <eolivelli@apache.org> Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  This closes #375 from eolivelli/issue-262  closes #262
2017-08-04T05:22:47Z,381,ISSUE #381: update old releases url to achives  Descriptions of the changes in this PR:  - the cms content has been copied from cms to asf-site branch under /content/archives. it is available under http://bookkeeper.apache.org/test/content/archives/ - update the release url from 'bookkeeper.apache.org/docs/rx.y.z' to '{{ site.baseurl }}achives/rx.y.z'  scripts:  - update the scripts to use clone and copy to avoid trash everything in remote. this would prevent overwrite `archives` directory.  content:  - fix syntax error in `shell.yaml` to be able to build website  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #382 from sijie/fix_links  closes #381
2017-08-04T04:19:46Z,376,ISSUE #376: Skip getSysFileDescriptor if JournalRemovePagesFromCache=false  Skip illegal reflective calls if not needed  this way the Bookie will run on Java9 cleanly  We need to access internals of FileDescriptor class only if JournalRemovePagesFromCache=true. This change will allow to run the bookie on Java9 just by using JournalRemovePagesFromCache=false.  see #376  Author: eolivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  This closes #380 from eolivelli/issue-376-minimal-java9  closes #376
2017-08-04T04:16:25Z,269,ISSUE #269: upgrade findbugs to 3.0.4  Just update findbugs plugin to latest version. No new warnings to address  Author: eolivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  This closes #379 from eolivelli/findbugs-304  closes #269
2017-08-03T21:20:47Z,372,Issue #372: Allow to configure advertised address in bookies  Add option to configure advertised address for bookies.  Reasons for this are outlined in #372  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <None>  Sijie Guo <None>  This closes #373 from merlimat/advertised-address  closes #372
2017-08-03T21:00:09Z,377,Issue #377: Make Prometheus stats logger registration idempotent  Make sure the metric are only registered once on Prometheus client lib.  Discusses in #377.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <None>  Sijie Guo <None>  This closes #378 from merlimat/fix-metrics-double-registration  closes #377
2017-08-03T08:18:01Z,362,ISSUE #362: [DOCUMENTATION] update command line tools  Descriptions of the changes in this PR:  enrich doc for bookie shell  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Luc Perkins <None>  Sijie Guo <None>  This closes #369 from zhaijack/issue_362  closes #362
2017-08-03T08:14:31Z,360,ISSUE #360: [DOCUMENTATION] configuration settings  Descriptions of the changes in this PR: -  make sure bk_server.conf contains all the settings in ServerConfiguration.java -  update site/docs/reference/config.md (http://bookkeeper.apache.org/test/content/docs/reference/config/)  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Luc Perkins <None>  Sijie Guo <None>  This closes #368 from zhaijack/issue_360  closes #360
2017-08-02T20:52:17Z,370,Fix navbar hover issue on the main page  This PR fixes the navbar dropdown UX issue shown in the attached image.  <img width="681" alt="screen shot 2017-08-02 at 10 04 20 am" src="https://user-images.githubusercontent.com/1523104/28886622-05333fcc-776f-11e7-8bea-163f60acaaa1.png">  Author: Luc Perkins <lucperkins@gmail.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #370 from lucperkins/docs/fix-dropdown
2017-08-02T20:51:44Z,351,ISSUE #351: Apache rat check failed on master  Descriptions of the changes in this PR:  This fix on #352 was adding the exclusion rule in wrong location. this fix is to address that.  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #353 from zhaijack/fix_rat_issue  closes #351
2017-08-02T06:18:08Z,351,ISSUE #351: Apache rat check failed on master  Descriptions of the changes in this PR:  Excludes cacerts from apache-rat check  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #352 from zhaijack/fix_rat_issue  closes #351
2017-08-02T01:16:31Z,183,Address the problem on merging #183  Descriptions of the changes in this PR:  listenOn should be running in constructing netty server. because we use binding to prevent two bookies start at the same time. #183  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  This closes #348 from sijie/ssl_merge  closes #183
2017-08-01T22:49:46Z,588,BOOKKEEPER-588: SSL Support for Bookkeeper  + Merged changes from eoliville + Mutual Authentication  Author: kishorekasi <kkasiud1@gmail.com> Author: Kishore Kasi Udayashankar <kudayashankar@salesforce.com> Author: Kishore Udayashankar <kudayashankar@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #183 from kishorekasi/BOOKKEEPER-588-kishore
2017-08-01T21:18:24Z,333,ISSUE #333: [WEBSITE] add bookkeeper slack channel to README.md and website  Descriptions of the changes in this PR:  - add slack channel to README - add slack channel to website  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Luc Perkins <lucperkins@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #341 from zhaijack/issue_333  closes #333
2017-08-01T21:17:19Z,344,ISSUE #344: add a releases page  Descriptions of the changes in this PR:  Add a releases page for keeping the history of apache releases.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  This closes #345 from sijie/redirection_on_old_releases  closes #344
2017-08-01T19:58:19Z,339,ISSUE #339: Use ephemeral port for bookkeeper tests and variable unit test improvements  Descriptions of the changes in this PR:  - Enable ephemeral port by default for all BookKeeperClusterTestCase based test cases - Removed Multi* based classes. A lot of unit tests unnecessarily extended from those base classes. Converted them to extend BookKeeperClusterTestCase directly. Confirmed this with sijie - Reduce sleep period for some test cases  LedgerEntry fixes for #317 - use checkState rather than checkNull to keep the behavior consistent as before - fix BookKeeperTest#testReadEntryReleaseByteBufs  TestBackwardCompat: - removed testCompact400 (400 has been very long time ago  no one is running 400) - BookKeeperNettyServer should shut down netty server when failed to construct a bookie  TestDiskChecker: - increased the threshold to 0.99f. be consistent with TestBKConfiguration  BookieInitializationTest - make each test method using different ledgers path  so registration won't be conflicting between tests  BookieJournalRollingTest - make sure bookie port is used correctly on restarting bookies.  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #340 from zhaijack/use_ephemral_ports  closes #339
2017-08-01T19:54:18Z,321,ISSUE #321: Update "who are we?"  Descriptions of the changes in this PR:  - add JV to the PMC list - add siddharth and charan to the committers list - sort the people by apache ids  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #334 from sijie/sijie/update_who_are_we  closes #321
2017-08-01T06:34:07Z,1102,BOOKKEEPER-1102: Clarify BookieInfoReader and fix associated test flappers  BookieInfoReader:  The previous syncronization logic wasn't really correct  and the logic at the top of the method was far more complicated than it needed to be. Restrict bookies to be non-null.  Restructure the code to simply use the BookieInfoReader instance as a single lock.  One significant behavioral change is that we scan every bookie not in the map  and we clear from the map bookies which returned an error.  Also  explicitely cache the most recent bookie set reported by the BookieWatcher.  This eliminates the need to call into BookieWatcher from getReadWriteBookieInfo and the corresponding error path.  The periodic scan continues to explicitely check.  Another departure is the addition of an explicit retry-on-error param to trigger retry if any of the requests failed (getBookieInfoRetryIntervalSeconds).  We'll only retry the ones that actually failed (along with any new additions since the last run).  This is useful because bookie startup triggers the addition of the bookie node to zk before the bookie actually becomes available for the bookie info request  so there can be rare races in the unit tests between BookieInfoReader requesting the info and the bookie actually being up.  Also  add a method to allow tests to wait for updates to be reflected.  PerChannelBookieClient: fix error handling for BookieInfo keys  Passing a key corresponding to a GET_BOOKIE_INFO operation to errorOutReadKey results in a casting exception  clean up the invalid calls.  BookKeeperClusterTestCase: add killBookieAndWaitForZK  Should reduce the need for tests to wait for an arbitrary period to let the cluster "settle".  BookKeeperDiskSpaceWeightedLedgerPlacementTest:  This test was heavily time dependent  and the Thread.sleep values did not work universally.  Instead  eliminate the arbitrary Thread.sleep values and instead verify the free space changes on each change.  Also  switch the delay on testDiskSpaceWeightedBookieSelectionWithPeriodicBookieInfoUpdate to simply use an atomic boolean to signal the value switch.  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #275 from athanatos/forupstream/BOOKKEEPER-1102
2017-08-01T06:14:30Z,314,ISSUE #314: Enable checkstyle on bookkeeper-server  Descriptions of the changes in this PR:  - enable checkstyle plugin in bookkeeper-server with a suppression configuration file - enable sort order rule (it was disabled when the rule was imported)  Author: Jia Zhai <zhaijia03@gmail.com> Author: zhaijack <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #315 from zhaijack/enable_checkstyle  closes #314
2017-07-31T21:45:57Z,323,ISSUE #323: [WEBSITE] ci job to automatically publish website to apache once the pull request is merged  Descriptions of the changes in this PR:  - add a Dockerfile to use ruby:2.4.1 to build website - add scripts to run docker file interactively (run.sh) and in ci (ci.sh) - also remove a few scripts that were not used by jenkins anymore.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  This closes #332 from sijie/sijie/jenkin_jobs  closes #323
2017-07-29T00:59:48Z,320,ISSUE #320: add scripts for publishing new website to staging and apache  Descriptions of the changes in this PR:  - script for staging changes to a staging-site repo - steps for how to staging changes for reviews - script for pushing changes to apache  Author: Sijie Guo <sijie@apache.org>  Reviewers: Luc Perkins <lucperkins@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #322 from sijie/publish_scripts  closes #320
2017-07-28T20:34:58Z,1103,BOOKKEEPER-1103: Fix LedgerMetadataCreateTest random id loop  The previous version would loop indefinitely upon collision.  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #303 from athanatos/forupstream/BOOKKEEPER-1103
2017-07-28T19:54:34Z,294,ISSUE #294: Beta version of the new website  A generated version of the new site can be seen here:  https://lucperkins.github.io/bookkeeper/  Author: Luc Perkins <lucperkins@gmail.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #293 from lucperkins/documentation-changes  closes #294
2017-07-28T18:12:37Z,935,BOOKKEEPER-935: Javadoc improvements and publish sources and javadocs to Maven Central  Descriptions of the changes in this PR:  - sources: attached source jar for each module - javadocs: attached javdocs jar for bookkeeper-server  bookkeeper-stats (they are client-facing modules)  for javadocs: - improve javadoc:aggregate to generate new client-facing api doc. it is comprised with 3 sections now : bookkeeper client  bookkeeper stats api  bookkeeper stats providers - auditing the client package to make changes to avoid expose internal classes to public. - introduce interface audience and stability for documenting public interfaces - improve javadoc for publish api  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This patch had conflicts when merged  resolved by Committer: Sijie Guo <sijie@apache.org>  This closes #311 from sijie/attach_sources_jar
2017-07-28T09:31:43Z,300,ISSUE #300: EnsemblePlacementPolicy must not use com.google.common.base.Optional but java.util.Optional  Use standard java8 java.util.Optional instead of Optional from Guava. In BookKeeper 4.5 we are shading Guava so this class is not available to downstream projects  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  Sijie Guo <None>  This closes #302 from eolivelli/issue-300-no-guava  closes #300
2017-07-28T04:39:03Z,1104,BOOKKEEPER-1104: Fix testWithDiskFullAndAbilityToCreateNewIndexFile  The usage threshhold was chosen to be very close to the actual disk usage at test time.  This made the test unnecessarily fragile in the case that there other things concurrently using the disk.  Since we aren't really testing that here  simply set the threshhold to be really low.  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  This closes #310 from athanatos/forupstream/BOOKKEEPER-1104
2017-07-28T03:11:17Z,296,ISSUE #296: Bookie supports ephemeral port  Descriptions of the changes in this PR:  - add a flag to allow/disable using ephemeral ports - change the initialization sequence to support ephmeral port - added two tests on verifying this behavior  Author: zhaijack <zhaijia03@gmail.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  This closes #297 from zhaijack/issue_296  closes #296
2017-07-28T01:08:52Z,306,ISSUE #306: Update SCM info for using mvn:release  Descriptions of the changes in this PR:  - update the SCM info in the pom files  so that mvn:release is able to create release branch.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Matteo Merli <None>  This closes #307 from sijie/use_maven_release  closes #306
2017-07-27T15:07:13Z,308,ISSUE #308: LocalBookKeeper.java rethrow Exception in case of failed boot  Do not swallow generic Exceptions during the boot of LocalBookKeeper and let the caller handle errors  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <None>  This closes #309 from eolivelli/issue-308-localboo-exce  closes #308
2017-07-27T03:04:03Z,271,ISSUE #271: LedgerHandle#readEntries leaks ByteBufs  Add a setNettyUsePooledBuffers() client configuration option to let the user decide to use Pooled vs Unpooled ByteBufs. Using v2 wire protocol Application receives the original ByteBuf return from Channel and it is responsible for 'releasing' it.  Add assertions on LedgerEntry to prevent the user from accessing data more then once  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Matteo Merli  Sijie Guo  This closes #276 from eolivelli/issue-271-leaks  closes #271
2017-07-26T14:28:37Z,295,ISSUE #295: LocalBookKeeper fails to start up  Descriptions of the changes in this PR:  remote the zk port and zk servers from the classes and use the values passed in from the method.  Author: Jia Zhai <zhaijia03@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #298 from zhaijack/issue_295  closes #295
2017-07-26T11:00:06Z,196,ISSUE #196: Create Jenkins configuration using OpenStack Jenkins Job Builder  Descriptions of the changes in this PR:  Introduction of Jenkins Job Builder script  in order to have the configuration of Jenkins jobs directly stored in GIT repo. This will enable reviews of Jenkins configuration  Author: Nicolò Boschi <nicolo.boschi@diennea.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Sijie Guo <sijie@apache.org>  This closes #206 from nicoloboschi/JenkinsJobBuilder  closes #196
2017-07-26T09:06:52Z,1017,BOOKKEEPER-1017: Create documentation for ZooKeeper ACLs  This is the documentation for ZooKeeper security and there is an intro about security in general. It is work-in-progress  I created this PR in order to make it visible and gather suggestions while writing  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <None>  This closes #185 from eolivelli/BOOKKEEPER-1017-zookeeper-docs
2017-07-25T09:08:03Z,247,ISSUE #247: Missing JavaDoc for classes  Descriptions of the changes in this PR:  - Addressed the `TODO` comments by adding JavaDoc - Make sure there is a Github issue for each unaddressed `TODO` comment  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #285 from sijie/issue_247  closes #247
2017-07-25T09:04:36Z,1044,BOOKKEEPER-1044: Entrylogger is not readding rolled logs back to the logChannelsToFlush list when exception happens while trying to flush rolled logs  Descriptions of the changes in this PR:  This is a straightforward fix to add unflushed list of entry log files back to flushed list.  Test is missing at this point because it is a bit complicated to test this without proper mocking. I would defer adding the test later and creating a github issue later on if it makes sense.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #286 from sijie/BOOKKEEPER-1044
2017-07-24T14:03:02Z,243,Issue#243 - asyncAddEntry fails with NPE with LedgerHandlerAdv  Fix asyncAddEntry on LedgerHandleAdv and clean up the asyncAddEntry API  drops BKException which is never thrown in asynch functions  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo  This closes #244 from eolivelli/asyncadd-adv  closes #243
2017-07-24T11:08:02Z,273,Provide a minimal test case using v2wireprotocol option  Add testcases on addEntry/readEntries and basic fencing  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo  This closes #273 from eolivelli/issue-272-testv2
2017-07-21T02:31:25Z,263,ISSUE #263: Enable request rate limiter in zookeeper client  Descriptions of the changes in this PR:  Eanble request rate limiter in zookeeper client. The rate limiter logic is in place  but is never enabled. This change is to expose the settings in configurations and enable them in zookeeper client at both client and server.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  This closes #264 from sijie/interface_syncs  closes #263
2017-07-21T00:35:25Z,267,ISSUE #267: Bookie should serve in read only mode during shutting down.  Descriptions of the changes in this PR:  Set the bookie in readonly mode during shutting down. (contributed by yzang)  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  This closes #268 from sijie/readonly_on_shutdown  closes #267
2017-07-20T13:24:34Z,1027,BOOKKEEPER-1027: Cleanup README  Descriptions of the changes in this PR:  - Move README to README.md (written it in markdown syntax) - Organized the README as below:   - what is bookkeeper and what it can be used for   - getting started   - documentation   - contribution  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli  Jia Zhai  This closes #248 from sijie/update_readme
2017-07-19T07:31:04Z,258,ISSUE #258: BookieInitializationTest.testRegNodeExistsAfterSessionTimeOut failed  Descriptions of the changes in this PR:  Construct new zookeeper client to ensure the tests get new zookeeper session.  (this change is based on 77c7721 )  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #259 from sijie/issue_258  closes #258
2017-07-19T06:43:14Z,256,ISSUE #256: BookieInitializationTest.testWithDiskFullAndAbilityToCreateNewIndexFile failed  Descriptions of the changes in this PR:  in c49621b  we allow creating FileInfo even when disk is full to allow fence requests succeed at this case.  it is conflicted with Charan's change. Since there is already a setting to configure the min usable size to allow index file creation. if we configure that to be zero  it is same as allowing index file creation even disks are full. so removing the fallback logic introduced in c49621b.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Charan Reddy Guttapalem  Enrico Olivelli  This closes #257 from sijie/issue_256  closes #256
2017-07-18T08:50:57Z,249,ISSUE #249: Organize findbugs and checkstyle files in buildtools module  Descriptions of the changes in this PR:  Organize findbugs and checkstyle files in buildtools module  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Matteo Merli <None>  This closes #250 from sijie/buildtools  closes #249
2017-07-18T08:47:43Z,980,BOOKKEEPER-980: BookKeeper Tools doesn't process the argument correctly  Descriptions of the changes in this PR:  Fix the issue described in [BOOKKEEPER-980](https://issues.apache.org/jira/browse/BOOKKEEPER-980).  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <None>  Venkateswararao Jujjuri (JV) <None>  This closes #255 from sijie/BOOKKEEPER-980
2017-07-18T08:34:47Z,252,ISSUE #252: Enable four-letter-words zookeeper commands in localbookie  Descriptions of the changes in this PR:  Enable four-letter-words zookeeper commands in localbookie  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  Matteo Merli <None>  This closes #253 from sijie/fix_4letters_issue  closes #252
2017-07-18T03:02:03Z,230,ISSUE #230: Add Checkstyle to the build process (Part 2)  Fix issues checkstyle reported in   - org.apache.bookkeeper.auth   - org.apache.bookkeeper.bookie  Checkstyle is not added to the bookkeeper-server yet.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: sigee <sigee15@gmail.com>  Reviewers: Jia Zhai <None>  Sijie Guo <None>  This closes #234 from sigee/checkstyle2  closes #230
2017-07-17T21:27:13Z,1095,BOOKKEEPER-1095: Long Poll - Server and Client Side Changes  Descriptions of the changes in this PR:  - changes on FileInfo to support notifications on LAC changes - a new ReadEntryLongPollV3 processor to process readEntry requests with long poll flags - a new public API for long poll: readLastConfirmedAndEntry. if it is reading beyond the LAC  it will become a long poll request and wait for advancing LAC on bookie side; if it isn't reading beyond the LAC it will be normal reads. - also have a speculative mechanism for long poll reads.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #220 from sijie/BOOKKEEPER-1094
2017-07-17T21:08:42Z,237,ISSUE #237: Upgrade to ZooKeeper 3.5.3-BETA  Descriptions of the changes in this PR:  Update ZooKeeper dependency from 3.5.1-alpha to 3.5.3-beta. This will enable ZooKeeper over SSL  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [x ] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [ x] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #238 from eolivelli/zookeeper-3.5.3  closes #237
2017-07-17T21:00:39Z,231,Add Checkstyle to the build process (Part 1)  Add checkstyle to - bookkeeper-benchmark - Stats API for bookkeeper - Stats provider for codahale metrics - Stats provider for Prometheus - Stats provider for Finagle stats - Stats provider for twitter-ostrich package - Stats provider for twitter-stats package  and fix issues checkstyle reported.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: sigee <sigee15@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #231 from sigee/checkstyle
2017-07-17T20:53:38Z,228,ISSUE #228: BookKeeper Server: Index Page Management Memory Growth  Descriptions of the changes in this PR:  ** Improvements **  - Never delete a LedgerEntryPage that has been allocated. - Track free LedgerEntryPage in a separate list - Use pages from the free pages list as though they were being freshly allocated - This guarantees that the direct buffer allocation never exceeds the allocated space for index pages  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  This closes #229 from sijie/lru_related_changes  closes #228
2017-07-17T20:47:37Z,208,ISSUE #208: Improve ledger fence logic  Descriptions of the changes in this PR:  Problem:     When bookie receive a fence request and couldn't find any writable dirs for the new index file  it will throw exception. This behavior can be improved  because as long as ledger fence request be persisted in Journal  we can say the fence request succeed. It should not depends on the success of flushing new index file.  Solution:  - Add option to fall back to pick from all directories regardless of writable or not when we getFileInfo for a new ledger - Return success only when ledger fence request has been persisted in Journal  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [x] Make sure the PR title is formatted like:     `<Issue #>: Description of pull request`     `e.g. Issue 123: Description ...` - [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [x] Replace `<Issue #>` in the title with the actual Issue number  if there is one.  ---  Author: Sijie Guo <sijie@apache.org> Author: Yiming Zang <yzang@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #205 from sijie/improve_fencing_behavior  closes #208
2017-07-16T12:01:43Z,232,ISSUE #232: Add code-coverage report  Introduce Cobertura And Coveralls.io plugins in order to run code coverage reports  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  This closes #233 from eolivelli/code-coverage  closes #232
2017-07-14T10:36:07Z,242,y  Descriptions of the changes in this PR: Handle handle non-ascii chars in username in merge script.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [X] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [X] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: jiazhai <zhaijia@live.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #242 from jiazhai/issue_241
2017-07-13T09:37:13Z,239,ISSUE #239: typo in class name SpeculativeRequestExecutor (#240)
2017-07-09T07:36:11Z,235,ISSUE #235: Setter for JournalMaxGroupWaitMSec/JOURNAL_MAX_GROUP_WAIT_M…  Add a setter for JournalMaxGroupWaitMSec configuration property  - [x] Make sure the PR title is formatted like:     `<Issue # or BOOKKEEPER-#>: Description of pull request`     `e.g. Issue 123: Description ...`     `e.g. BOOKKEEPER-1234: Description ...` - [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [x] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.  ---  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  This closes #236 from eolivelli/JOURNAL_MAX_GROUP_WAIT_MSEC  closes #235
2017-07-07T06:19:57Z,1033,BOOKKEEPER-1033: Handle DirsPartitionDuplication  - Provide configuration for allowDirsPartitionDuplication - while calculating total disk metrics account Partition Duplication  Author: cguttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <guosijie@gmail.com>  This closes #189 from reddycharan/dirspartitionduplication and squashes the following commits:  99fc6fc1 [cguttapalem] BOOKKEEPER-1033: Handle DirsPartitionDuplication 1d453975 [cguttapalem] BOOKKEEPER-1033: Handle DirsPartitionDuplication
2017-07-07T03:11:25Z,1028,BOOKKEEPER-1028 and BOOKKEEPER-1029      BOOKKEEPER-1028: inc/excl opts listunderreplicated      - Introduce including and excluding BookieId options     for listunderreplicatedLedgers      - But there is limitation that  since replicaslist wont be     updated in underreplicatedledger zNode there is possibility     of stale information        ---------------------------------------------------------      BOOKKEEPER-1029: BookieDecommision Workflow      - LostBookieRecoveryDelay config param is stored in ZK     - if LostBookieRecoveryDelay is reset to same value then it force triggers audit immediately     - Added logic to trigger immediately or schedule pending audittask depending on the changed value in ZK     - good number of testcases validating focetrigger/reschedluing audittask     - added bookieshell command to get/set LostBookieRecoveryDelay from ZK     - added bookieshell command to triggeraudit by resetting LostBookieRecoveryDelay     - added decommissionbookie bkshell command  which validates the complete replication of ledgers stored in the bookie  Author: cguttapalem <cguttapalem@salesforce.com> Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <guosijie@gmail.com>  This closes #127 from reddycharan/listunderreplicatedpredicate and squashes the following commits:  34bacf3c [cguttapalem] BOOKKEEPER-1029: BookieDecommision Workflow eb43ec49 [Charan Reddy Guttapalem] BOOKKEEPER-1029: BookieDecommision Workflow fcb399df [cguttapalem] BOOKKEEPER-1028: inc/excl opts listunderreplicated
2017-07-04T06:24:28Z,227,Add missed tests for SortedLedgerStorage  Added two missed tests for SortedLedgerStorage. It was missed when we (twitter) merged the SortedLedgerStorage back.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli  Jia Zhai  This closes #227 from sijie/more_memory_table_related_tests
2017-07-04T04:27:21Z,772,BOOKKEEPER-772: Reorder Read Sequence  Descriptions of the changes in this PR:      - for rackware placement policy  the bookie in the same rack will be preferred.     - for region-aware placement policy  the bookie in the same region will be preferred.     - for any readonly or unavailable (high score in bookie failure history) bookies  they will be at the last position in the sequence.  This change is based on #220 . Please review gitsha 1f7dccd for the reorder change.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Matteo Merli <None>  This closes #224 from sijie/reorder_reads
2017-07-04T04:14:11Z,217,Issue 223: Code cleanups  Descriptions of the changes in this PR:  There are some different kind of cleanups by commits. To make the code more readeable and improve code quality and improve performance in some cases. E.g.:  - Remove unnecessary semicolons  - Remove unused/unneeded/duplicated imports - Replace l to L in long literals - Remove boxing on an already boxed value - Replace iterations to bulk operations  Author: sigee <sigee15@gmail.com>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  Sijie Guo <None>  This closes #217 from sigee/cleanups
2017-07-04T03:59:41Z,226,Issue 225: Remove Parameterized from CompactionTest  Descriptions of the changes in this PR:  - Split the CompactionTest into two  one is by bytes  while the other one is by entries.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  This closes #226 from sijie/compaction_tests
2017-07-01T07:05:43Z,221,ISSUE #221: Make netty server shutdown idempotent  Descriptions of the changes in this PR:  (see the detailed discussion in #221 )  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  This closes #222 from sijie/make_shutdown_idempotent  closes #221
2017-06-30T05:10:42Z,198,ISSUE #198: TestBackwardCompat.testCompat410 often fails due to io.netty.util.IllegalReferenceCountException  Descriptions of the changes in this PR:  Problem:  in TestBackwardCompat#testCompact400  the test is to verify the current client can't talk to a 4.0.0 server.  The 4.5.0 client is sending a protobuf encoded request to 4.0.0 server. The 4.0.0 server will interpret the 4.5.0 protobuf encoded request  but it will realize this is bad request and sending v2 protocol encoded response. because the request is a bad request  4.0.0 server sent a response back with unknown op code.  In current v2 ResponseEnDecoder (listed as below)  when it doesn't know the op code  it will return the buffer to the channel. this might cause the misbehavior in the channel pipeline to decrement reference count.  Solution:  throw exception in the EnDeCoder when receiving unknown op code. so the netty can close the connection  error out the pending requests and cleaning up the resources.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <None>  This closes #219 from sijie/issue_198  closes #198
2017-06-29T22:12:40Z,759,BOOKKEEPER-759: Delay Ensemble Change & Disable Ensemble Change  Descriptions of the changes in this PR:  This pull request contains the changes around ensemble change.  - Delay Ensemble Change: Provide a flag to allow delay ensemble change. if that is set to change  will not do ensemble change until it breaks ack quorum requirements. - Disable Ensemble Change: Provide a runtime feature flag to allow disabling ensemble change. The ensemble change behavior can be disabled on-the-fly via the FeatureProvider.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [x] Make sure the PR title is formatted like:     `<Issue #>: Description of pull request`     `e.g. Issue 123: Description ...` - [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [x] Replace `<Issue #>` in the title with the actual Issue number  if there is one.  ---  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  This closes #202 from sijie/client_changes/delay_ensemble_changes
2017-06-29T22:08:17Z,209,ISSUE #209: Introduce Speculative Read/Read LAC policy  Descriptions of the changes in this PR:      - Separate out the logic that determines when speculative reads are scheduled from the individual requests into a separate SpeculativeRequestExecutionPolicy     - Implement the default speculative read execution policy based on the current mechanism of using first and max timeout     - Initialize the policy once in the BookKeeper object and use it for individual requests by keeping information about the requests in the call chain.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [x] Make sure the PR title is formatted like:     `<Issue #>: Description of pull request`     `e.g. Issue 123: Description ...` - [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [x] Replace `<Issue #>` in the title with the actual Issue number  if there is one.  ---  Author: Sijie Guo <sijieg@twitter.com> Author: Robin Dhamankar <rdhamankar@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  This closes #200 from sijie/client_changes/speculative_policy  closes #209
2017-06-29T21:57:16Z,207,ISSUE #207: change the HashSet to BitSet to handle duplicated bookies on reading entries  Descriptions of the changes in this PR:  Problem:  If there happens to have duplicated bookies in same ledger (it happened before when ensemble change still has problem)  the read doesn't work as expected. It hang forever.  Solution:  Change the HashSet to BitSet to use bookieIndex rather than InetSocketAddress to track the heardfrom bookies set.  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [x] Make sure the PR title is formatted like:     `<Issue #>: Description of pull request`     `e.g. Issue 123: Description ...` - [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [x] Replace `<Issue #>` in the title with the actual Issue number  if there is one.  ---  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #199 from sijie/client_changes/bitset  closes #207
2017-06-29T08:17:58Z,213,Issue 212: change github PR template to adjust both issue# and jira# (#213)  change PR template to adjust both issue# and jira#    closes #212
2017-06-28T21:28:38Z,1086,BOOKKEEPER-1086: ZkUnderreplicationManager cache watcher  Previously  getLedgerToReplicate left watches each time it traversed the tree until it found a suitable replication target.  Since we don't have a way of canceling watches  these watches tended to get abandoned  particularly on interior nodes  which aren't changed much.  Thus  over time  some nodes would build up a very large number of watch.  Instead  introduce a caching mechanism to remember outstanding watches and avoid ever creating two watches on the same node.  Author: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #193 from athanatos/forupstream/BOOKKEEPER-1098
2017-06-28T21:24:05Z,1034,BOOKKEEPER-1034: Bookie start in RO when diskfull  When the disk is above threshold  Bookie goes to RO. If we have to restart the bookie  on the way back  bookie tries to create new entrylog and other files  which will fail because disk usage is above threshold  hence bookie refuses to come up. So with this fix we will try to start in RO mode if RO is enabled.  Also  if bookie has died abruptly then it may missed flushing EntryMemtable and IndexInMemoryPageManager. So next time when it starts when disc is full it is failing to create index file and it is shutting down  though we expect it to start in readonlymode. So Bookie should be able to create index file though it has reached the diskusagethreshold  while starting the Bookie in Readonly Mode. But ofcourse there should be some config to safeguard when disk usable space is so low.  Minor fixes in shutdown logic of Bookie and Bookieserver.  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #190 from reddycharan/bookiestartinreadonlywhendiskfull
2017-06-28T21:09:37Z,216,ISSUE #216: Remove useless and misleading '&= true'  This is just a super minor issue  I stumbled upon it looking into https://github.com/apache/bookkeeper/pull/58...  Assignments like 'shutDownTask =& true' aren't useful at all. I presume that compiler could strip them out but the code is less readable. (Just note that 'x & true == x').  Removed useless assignments.  Author: Diego Salvi <lothruin.mirwen@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #215 from diegosalvi/master  closes #216
2017-06-22T14:21:00Z,203,ISSUE #203: TestFencing is failing due to LAC piggyback changes  Descriptions of the changes in this PR:  Problem:  TestFencing is failing after merging LAC piggyback changes. Because LAC piggyback will advance last add confirmed when reading entries.  Solution:  Move the addEntry verification to after reading entries.  At the same time  add more logging to #testManyOpen  --- Be sure to do all of the following to help us incorporate your contribution quickly and easily:  - [x] Make sure the PR title is formatted like:     `<Issue #>: Description of pull request`     `e.g. Issue 123: Description ...` - [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`. - [x] Replace `<Issue #>` in the title with the actual Issue number  if there is one.  ---  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #204 from sijie/fix_test_fencing  closes #203
2017-06-21T19:07:39Z,1097,BOOKKEEPER-1097: GC test when no WritableDirs  - Functional test validating that Compaction takes place even if there are no writableledgerdir but there are ledgerdirs according to LedgerDirsManager.getWritableLedgerDirsForNewLog  - end-to-end testcase of Bookie recovery  incase of Bookie ledgerdir reaching the threshold  and recovering by forcing the gc/compaction  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Sijie Guo <sijie@apache.org>  This closes #188 from reddycharan/gctestnowritabledirs
2017-06-21T19:00:15Z,1092,BOOKKEEPER-1092: Ledger Recovery (Part 5) - Add Test Case for Parallel Ledger Recovery  This change is based on #180 (ebf7020 is the change for review)  - Add test case for parallel ledger recovery - More stats for ledger recovery  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #182 from sijie/recovery_improvements_part5
2017-06-21T17:58:00Z,1093,BOOKKEEPER-1093: Piggyback LAC on ReadResponse  This change is based #178 - (you can review git sha 40ca8c2)  bookkeeper: LAC piggyback at read response          - bookie server changes           * cache maximum lac in file info           * provide getLastAddConfirmed & setLastAddConfirmed in ledger storage           * addEntry will set its lac thru setLastAddConfirmed           * readEntry will read latest lac and piggyback         - client change           * check whether the response has lac piggybacked  if there is lac update lac in its corresponding ledger handle.  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #180 from sijie/piggyback_lac
2017-06-21T17:50:23Z,1089,BOOKKEEPER-1089: Ledger Recovery (part-4) - allow batch reads in ledger recovery  This change is based on #178 - (you can review git sha 82f73ef)  bookkeeper recovery improvement (part-4): allow batch reading in ledger recovery      - enable batch read in ledger recovery  so we could parallel reading to improve recovery time.      RB_ID=266145  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  This closes #181 from sijie/recovery_improvements_part4
2017-06-21T17:20:15Z,132,DL-124: Use Java8 Future rather than twitter Future  Switch to use Java8 CompletableFuture  to reduce dependencies introduced by twitter future and make it more friendly to users (users don't think of using which version of scala).  This change is based on #132 . Gitsha ce0686e is the change to review.  The changes:  - Change Future to CompletableFuture - Map to thenApply - flatMap to thenCompose - Added a FutureEventListener  and switch addEvenListener to whenComplete (or whenCompleteAsync) - setValue to complete - setException to completeExceptionally - add rescue  ignore  ensure to FutureUtils as util functions.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #133 from sijie/change_twitter_future_to_java_future
2017-06-21T17:20:15Z,132,DL-124: Use Java8 Future rather than twitter Future  Switch to use Java8 CompletableFuture  to reduce dependencies introduced by twitter future and make it more friendly to users (users don't think of using which version of scala).  This change is based on #132 . Gitsha ce0686e is the change to review.  The changes:  - Change Future to CompletableFuture - Map to thenApply - flatMap to thenCompose - Added a FutureEventListener  and switch addEvenListener to whenComplete (or whenCompleteAsync) - setValue to complete - setException to completeExceptionally - add rescue  ignore  ensure to FutureUtils as util functions.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #133 from sijie/change_twitter_future_to_java_future
2017-06-21T17:20:15Z,132,DL-124: Use Java8 Future rather than twitter Future  Switch to use Java8 CompletableFuture  to reduce dependencies introduced by twitter future and make it more friendly to users (users don't think of using which version of scala).  This change is based on #132 . Gitsha ce0686e is the change to review.  The changes:  - Change Future to CompletableFuture - Map to thenApply - flatMap to thenCompose - Added a FutureEventListener  and switch addEvenListener to whenComplete (or whenCompleteAsync) - setValue to complete - setException to completeExceptionally - add rescue  ignore  ensure to FutureUtils as util functions.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #133 from sijie/change_twitter_future_to_java_future
2017-06-21T17:13:17Z,191,ISSUE #191: add template for ISSUE and PR  Following BP-9  provide a template for ISSUE and PR. When create issue  will use ISSUE template; while create PR will use PR template.  Author: jiazhai <zhaijia@live.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  This closes #192 from jiazhai/issue_191  closes #191
2017-06-16T07:23:31Z,184,ISSUE #184: Support GitHub issues in bk-merge script  - Recoganize the issue title and normalize it - Close the corresponding issue when closing the pr  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  This closes #194 from sijie/support_github_issues  closes #184
2017-06-12T21:12:13Z,131,DL-204: Bump libthrift to latest version for distributedlog-core  Currently finagle heavily depends on an out-of-dated version - libthrift 5.0. Proxy modules (client  server) depend on this version  however the core library doesn't really depend on libthrift.  This change is to change libthrift to 0.9.* in distributedlog-core and shade it to avoid it conflict with the version used by finagle.  This change is based on #131 . The main change is at gitsha [6e58786](https://github.com/apache/incubator-distributedlog/commit/6e587869f87cdce50ae93ba3d52767719d1ab5a6)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #132 from sijie/change_thrift_for_core_module
2017-06-12T19:55:41Z,130,DL-199: Be able to support filesystem-path like name  In order to support hierarchical namespace  we need to be able to support filesystem path like log name.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #130 from sijie/DL_199
2017-06-12T15:45:01Z,131,DL-205: Remove StatusCode dependency on DLException  - Remove StatusCode from exceptions. Use integer as exception codes. - Also re-organize the modules:  - [ ] distributedlog-protocol (for core structures) and distributedlog-core (for core library). - [ ] proxy: distributedlog-proxy-protocol (new module for thrift generated protocol)  distributedlog-proxy-client (proxy client) and distributedlog-proxy-server (proxy server) - [ ] benchmark & tutorials.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #131 from sijie/new_layout
2017-06-12T15:45:01Z,131,DL-205: Remove StatusCode dependency on DLException  - Remove StatusCode from exceptions. Use integer as exception codes. - Also re-organize the modules:  - [ ] distributedlog-protocol (for core structures) and distributedlog-core (for core library). - [ ] proxy: distributedlog-proxy-protocol (new module for thrift generated protocol)  distributedlog-proxy-client (proxy client) and distributedlog-proxy-server (proxy server) - [ ] benchmark & tutorials.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <None>  Leigh Stewart <lstewart@apache.org>  Closes #131 from sijie/new_layout
2017-06-12T15:20:53Z,1096,BOOKKEEPER-1096: recursive znode delete  When ledger is deleted  along with leaf node all the eligible branch nodes should be deleted in ZooKeeper.  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #186 from reddycharan/recursiveznodedelete
2017-06-10T11:55:37Z,1088,BOOKKEEPER-1088: CompactionTest tests are broken because of  Problem:  5fe86525a9c823f79b3e97fd82ea4aa1c75c79eb this commit broken the master. It is because the merge/rebase introduce duplicated lines  Solution:  This change is to remove the duplicated lines introduced at 5fe86525a9c823f79b3e97fd82ea4aa1c75c79eb  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #187 from sijie/sijie/fix_merge_issue
2017-06-05T20:25:17Z,748,BOOKKEEPER-748: Move fence requests out of read threads  This change is moving the fence request out of current read threads and using callback to trigger scheduling read entry and also it refactors the ReadEntryProcessV3 to support long poll in the subsequent requests.  Major changes:  - change fence request to use SettableFuture - refactor ReadEntryProcessV3: to support run fence request in callback and support long poll (in subsequent requests) - fix stats issue: requests stats measure the latency from bookie receives the request until it sends the response. - remove "public static final" for state fields. it is not needed for variables in Interface.  Author: Sijie Guo <sijie@apache.org> Author: Robin Dhamankar <rdhamankar@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Closes #174 from sijie/longpoll/part1_server_side_change
2017-06-05T20:13:31Z,1088,BOOKKEEPER-1088: Ledger Recovery (part-3) - Add a ReadEntryListener to callback on individual request  THIS CHANGE IS BASED ON #177  (you can review 868a3c8 for the only change that belongs to BOOKKEEPER-1088).  bookkeeper recovery improvement (part-3): add a ReadEntryListener to callback on individual request.  - add read entry listener which allow doing batch read  but callback on individual entries in sequence. so in recovery op  we could issue batch reads  then on each individual callback do add entry and stop when received NoSuchEntry.  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Venkateswararao Jujjuri (JV) <None>  Closes #178 from sijie/recovery_improvements_part3 and squashes the following commits:  dd24faf [Sijie Guo] Merge branch 'master' into recovery_improvements_part3 2e1ebb9 [Sijie Guo] Merge branch 'master' into recovery_improvements_part3 8b8a3c8 [Sijie Guo] bookkeeper recovery improvement (part-3): add a ReadEntryListener to callback on individual request. db3e98b [Sijie Guo] Address conflicts f0fb89c [Sijie Guo] bookkeeper recovery improvement (part-2): add a parallel reading request in PendingReadOp 80ffc6c [Sijie Guo] Address conflicts 3db0b84 [Sijie Guo] bookkeeper recovery improvement (part-1): refactor PendingReadOp
2017-06-05T19:48:33Z,1087,BOOKKEEPER-1087: Ledger Recovery (part 2) - Add a parallel reading request in PendingReadOp  THIS CHANGE IS BASED ON #176 (you can review f0fb89c)  bookkeeper recovery improvement (part-2): add a parallel reading request in PendingReadOp  - add a parallel reading request in PendingReadOp - allow PendingReadOp to configure whether to do parallel reading or not - add flag in ClientConfiguration to allow configuring whether to do parallel reading in LedgerRecoveryOp or not.  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #177 from sijie/recovery_improvements_part2
2017-06-05T18:30:52Z,944,BOOKKEEPER-944: LowWaterMark Storage Threshold  BOOKKEEPER-944: LowWaterMark Storage Threshold  LowWaterMark Storage Threshold and code refactoring      - Current implementation toggles READONLY status of the bookie as soon as a directory usage falls below the disk storage threshold.       Added LowWaterMark parameter that limits such switches.      1. Bookie transition from RW to RONLY only when all the ledger dirs usage > HWM (storage threshold)      2. Bookie transition from RONLY to  RW only when total system disk usage (ledger/index disks) capacity is < LWM      3. When bookie is in RW mode all disks which are < HWM (storage threshold) are RW     - refactored code and separated LedgerDirsMonitor from LedgerDirsManager  to remove circular dependency       between LedgerDirsManager and LedgerDirsMonitor and also it improves testability by making them separate classes.       It becomes easier to do functional/unit level testing and fault-injection testing at LedgerDirsMonitor class level.     - relevant testcases  Author: Andrey Yegorov <ayegorovsalesforce.com> Co-Author: Charan Reddy Guttapalem <cguttapalemsalesforce.com>  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #108 from reddycharan/lwmhwm
2017-06-01T21:58:21Z,1090,BOOKKEEPER-1090: Use LOG.isDebugEnabled() to avoid unexpected allocations  Using `LOG.debug(...)` can lead to multiple unexpected memory allocation  even when the logger it's turned off. For example  int and long parameter are boxed into Integer and Long objects and the var-arg parameters are using an `Object[]` to hold them. We should guard all usages of `LOG.debug()` with the `if (LOG.isDebugEnabled()` guard.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli  Sijie Guo  Closes #179 from merlimat/if-debug
2017-06-01T20:59:44Z,989,BOOKKEEPER-989: Enable Travis CI for Apache BookKeeper  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <None>  Matteo Merli <mmerli@apache.org>  Closes #168 from sijie/enable_travis_ci
2017-06-01T20:39:28Z,1086,BOOKKEEPER-1086: Ledger Recovery - Refactor PendingReadOp  this change is the first part of improving ledger recovery. it is basically a refactor change  which:  - abstract an interface for LedgerEntryRequest in PendingReadOp - rename current implementation to SequenceReadRequest  which read the entry in the sequence of quorum.  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #176 from sijie/recovery_improvements
2017-06-01T19:20:59Z,1056,BOOKKEEPER-1056: Removed PacketHeader serialization/deserialization allocation  When parsing the request packet header  use static methods to avoid creating a `PacketHeader` instance.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <None>  Sijie Guo <None>  Venkateswararao Jujjuri (JV) <None>  Closes #175 from merlimat/packet-header-parsing
2017-06-01T11:19:58Z,1074,BOOKKEEPER-1074: Remove JMX Bean  This change is based on #160   the change here is: gitsha [b3be81f](https://github.com/sijie/bookkeeper/commit/b3be81fadae50f2d4a2e938c2735fa35c6c31421)  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Enrico Olivelli  Matteo Merli  Closes #161 from sijie/remove_jmx_beam
2017-06-01T11:16:48Z,1085,BOOKKEEPER-1085: Introduce the AlertStatsLogger  Introduce the AlertStatsLogger used to increment a metric whenever an event that should never happen is detected. Allow specifying an optional scope to better classify the error conditions  RB_ID=598662  Author: Sijie Guo <sijie@apache.org> Author: Robin Dhamankar <rdhamankar@twitter.com>  Reviewers: Enrico Olivelli  Jia Zhai  Closes #173 from sijie/add_alert_state_logger
2017-06-01T10:30:54Z,1083,BOOKKEEPER-1083: Improvements on OrderedSafeExecutor      - use listeningscheduledexecutorservice for the threads     - as a general util class  expose chooseThread to allow applications use specific thread     - add a method to force shutdown executor  Author: Robin Dhamankar <rdhamankar@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli  Closes #171 from sijie/add_monitored_thread_pool
2017-06-01T09:42:04Z,1084,BOOKKEEPER-1084: Make variables finale if necessary  not all logger in bookkeeper & hedwig are static. some class like PendnigReadOp and LedgerEntry would have lots of objects  it might be bad. so this task is to make logger as a static variable if it didn't.  with benefit  cleaning up the imports when touching that file.  RB_ID=141138  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Jia Zhai  Enrico Olivelli  Closes #172 from sijie/make_finale
2017-06-01T09:31:14Z,1078,BOOKKEEPER-1078: Local BookKeeper enhancements for testability  BookKeeper: Local Bookkeeper enhancements for testability  1. Allow creating local bookies without always starting a zookeeper server - This is required as tests may want to create and use their own instance of a test zookeeper 2. Allow using non default zookeeper host and more importantly non default ZK port 3. Allowing the caller to specify the initial port for the bookies 4. Optionally shutdown bookies when the bookie thread exits  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com> Author: Robin Dhamankar <rdhamankar@twitter.com>  Reviewers: Enrico Olivelli  Jia Zhai  Closes #164 from sijie/local_bookkeeper_enhancements
2017-06-01T07:47:28Z,1071,BOOKKEEPER-1071: Use per connection instances of request encoder/decoder  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli  Sijie Guo  Closes #170 from merlimat/bk-1071
2017-06-01T06:55:45Z,1073,BOOKKEEPER-1073: Several stats provider related changes.  - add finagle stats provider - provide the ability to remove gauge and scopes - update jetty versions for twitter-sciences stats provider  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai  Enrico Olivelli  Closes #160 from sijie/add_channel_writer_timer
2017-05-26T19:44:27Z,1079,BOOKKEEPER-1079: shell lastMark throws NPE  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Sijie Guo  Closes #167 from eolivelli/BOOKKEEPER-1079
2017-05-26T14:52:57Z,1010,BOOKKEEPER-1010: Moving Guava to 20.0  This patch updates Guava to version 20.0 and shades it  Author: arvindkandhare <arvind.kandhare@emc.com> Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo  Enrico Olivelli  Closes #166 from eolivelli/guava_version
2017-05-26T10:38:28Z,1077,BOOKKEEPER-1077: Allow configuration journal/ledger paths for local bookkeeper.  Author: Sijie Guo <sijieg@twitter.com> Author: Robin Dhamankar <rdhamankar@twitter.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #163 from sijie/to_string_mark
2017-05-25T12:31:57Z,1075,BOOKKEEPER-1075: BK LedgerMetadata: more memory-efficient parsing of configs  It is the contribution from Alex Yarmula  commit 9d9d7dd26235a9beda4421b7bed750fea1789076 Author: Alex Yarmula <aktwitter.com> Date: Wed Sep 23 05:57:30 2015 -0700  BK LedgerMetadata: more memory-efficient parsing of configs Looking at the most prevalent client-side memory allocations  I noticed that we allocate 4KB every time we open a ledger. This is caused by allocating a 4KB buffer (in TextFormat.toStringBuilder) to account for the maximum possible Protobufs message  which is unnecessary in our case: we know the exact size of the metadata ( << 500 B) and don't need to allocate more. TextFormat.merge(Readable  Message.Builder) is the current method we use. This changes to use TextFormat.merge(CharSequence  Message.Builder)  which avoids the extra 4K allocation conversion + an extra StringBuilder.  RB_ID=745700  Author: Alex Yarmula <ak@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli  Sijie Guo  Closes #162 from sijie/bk_ledger_metadata_efficiency
2017-05-25T12:23:03Z,1068,BOOKKEEPER-1068: Expose ByteBuf in LedgerEntry to avoid data copy  To avoid copying the entries payloads when writing/reading on a ledger and having to allocate a lot of `byte[]` on the JVM heap  we need to accept Netty ByteBuf buffer.  By passing a ByteBuf  an application can use a pooled buffer  pointing to direct memory  to the `LedgerHandle.addEntry()` and have the same buffer forwarded on the connection sockets to the bookies.  The same thing on the read side  `LedgerEntry` exposes an additional `getEntryBuffer()` method that can be used to get the underlying buffer and possibly forward that to some other connection  with zero-copy behavior (excluding getting data in-out of the kernel).  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Jia Zhai  Sijie Guo  Enrico Olivelli  Closes #155 from merlimat/byte-buf-ledger-entry
2017-05-25T11:37:29Z,1072,BOOKKKEEPER-1072: CompactionTest is flaky when disks are almost full  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <None>  Jia Zhai <None>  Closes #159 from sijie/BOOKKEEPER-1072
2017-05-25T11:31:04Z,391,BOOKKEEPER-391: Support Kerberos authentication of bookkeeper  This patch contains a very basic AuthProvider which uses JAAS and so enables the usage or GSSAPI/Kerberos for BookKeeper authentication  Author: eolivelli <eolivelli@apache.org> Author: eolivelli <eolivelli@gmail.com>  Reviewers: Robert (Bobby) Evans <None>  Sijie Guo <None>  Closes #110 from eolivelli/BOOKKEEPER-391-kerberos
2017-05-24T17:08:43Z,129,Remove package-info.java under com.twitter.distributedlog.subscription  There is still one file left under com.twitter.distributedlog after repackage. This change is to delete this file.  https://github.com/apache/incubator-distributedlog/tree/master/distributedlog-core/src/main/java/com/twitter/distributedlog/subscription  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <zhaijia03@gmail.com>  Closes #129 from sijie/sijie/remove_subscription_files
2017-05-18T14:21:37Z,1070,BOOKKEEPER-1070: bk-merge-pr.py use apache-rat:check goal  Author: eolivelli <eolivelli@apache.org>  Reviewers: Jia Zhai <None>  Closes #158 from eolivelli/BOOKKEEPER-1070-rat
2017-05-17T06:57:37Z,1055,BOOKKEEPER-1055: Optimize handling of masterKey in case it is empty  On each request client and bookies are exchanging the ledger masterKey  which is a 20 bytes MAC digest of the ledger password.  For each request there is a considerable overhead in allocating byte arrays when parsing the add/read requests.  If the client is a passing an empty password  we should optimize the data path to skip all allocations (related to the masterKey) and instead rely on a static byte array.  Author: Matteo Merli <mmerli@apache.org> Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  Closes #156 from merlimat/empty-password
2017-05-16T11:20:56Z,1069,BOOKKEEPER-1069: If client uses V2 proto  set the connection to always decode V2 messages  Avoid handling parsing exception for each request and instead adapt to what the client is sending.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <None>  Sijie Guo <None>  Closes #157 from merlimat/always-v2
2017-05-15T22:31:56Z,1048,BOOKKEEPER-1048: Use ByteBuf in LedgerStorage interface  To pass ref-counted buffer from Netty directly to the storage and the Journal  we need to have LedgerStorage to accept ByteBuf instead of ByteBuffer  #### Note  This commit is on top of BOOKKEEPER-1048 / #138. Once that gets merged  I will rebase. Posting now to get Jenkins run. Please review last commit f53f772f79d0a334edc0f05e66edb7cc645b1ffa in this PR for now.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <None>  Closes #139 from merlimat/bytebuf-in-ledger-storage
2017-05-15T19:35:26Z,1061,BOOKKEEPER-1061: BookieWatcher should not do ZK blocking operations from ZK async callback thread  In some cases  the BookieWatcher can get the ZK event thread stuck. This happens when a ZK blocking request is issued from a ZK callback thread.  We should decouple the blocking requests in a separate executor to avoid deadlocking ZK client.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Sijie Guo <sijie@apache.org>  Closes #149 from merlimat/bookie-watcher-thread
2017-05-15T19:25:18Z,1067,BOOKKEEPER-1067: Add Prometheus stats provider  Prometheus (https://prometheus.io) is a metrics collection system  similar but much more flexible than graphite.  It would be good to expose the Bookie and BookKeeper client stats directly so that a Prometheus instance can collect them (and also check the process status and add alerts).  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #154 from merlimat/prometheus
2017-05-15T17:52:53Z,1008,BOOKKEEPER-1008: Netty 4.1  Added more ref-count fixes from yahoo-4.3 branch on top of #116  Author: Matteo Merli <mmerli@apache.org> Author: Matteo Merli <mmerli@yahoo-inc.com> Author: Kishore Kasi Udayashankar <kudayashankar@salesforce.com>  Reviewers: Jia Zhai <zhaijia03@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #138 from merlimat/netty-4.1
2017-05-15T17:32:26Z,1058,BOOKKEEPER-1058: Ignore already deleted ledger on replication audit  Replication auditor should skip ledgers that were deleted since the auditing was started.  Author: rdhabalia <rdhabalia@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #146 from merlimat/ignore-deleted-ledgers-in-replication
2017-05-12T14:39:04Z,1063,BOOKKEEPER-1063: Use executor.execute() instead of submit()  … creation of unused FutureTask  When submitting tasks to an executor  if the `FutureTask` object is not being used we should use `execute()` instead of `submit()` in order to avoid the task object allocation.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #150 from merlimat/executor-execute
2017-05-12T13:20:31Z,1064,BOOKKEEPER-1064: ConcurrentModificationException in AuditorLedgerCheckerTest  As seen in: https://builds.apache.org/job/bookkeeper-master-git-pullrequest/371/  The test is iterating over a hash map that gets updated by a different thread. The map needs to be concurrent.  ``` java.util.ConcurrentModificationException  at org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.stopAuditorElectors(AuditorLedgerCheckerTest.java:130)  at org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.tearDown(AuditorLedgerCheckerTest.java:114) ```  All subsequent tests in the same class are failing because of the 1st test not cleaning up properly.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #151 from merlimat/bk-1064-auditor-ledger-test
2017-05-12T13:17:36Z,1066,BOOKKEEPER-1066: Introduce GrowableArrayBlockingQueue  In multiple places  (eg: journal  ordered executor  etc..)  we are using `LinkedBlockingQueue` instances to pass objects between threads.  The `LinkedBlockingQueue` differs from the `ArrayBlockingQueue` in that it doesn't require to define a max queue size  though  being implemented with a linked list  it requires to allocates list nodes each time an item is added.  We can use a `GrowableArrayBlockingQueue` that behaves in the same way as the `LinkedBlockingQueue`  but it's implemented with an array that can be resized when the queue reaches the capacity.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #153 from merlimat/growable-blocking-queue
2017-05-10T21:17:43Z,1054,BOOKKEEPER-1054: Add gitignore file  We should have a .gitignore file to hide all build generated files.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Closes #144 from merlimat/git-ignore
2017-05-10T21:15:05Z,1059,BOOKKEEPER-1059: Upgrade to SLF4J-1.7.25  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <None>  Closes #147 from merlimat/slf4j-1.7
2017-05-10T20:47:02Z,1060,BOOKKEEPER-1060: Add utility to use SafeRunnable from Java8 Lambda  Since BK-4.5.0 is already switched to Java8  we should have a simple and concise way to pass lambdas where a `SafeRunnable` is required.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <None>  Closes #148 from merlimat/safe-runnable
2017-05-10T01:17:19Z,1053,BOOKKEEPER-1053: Upgrade RAT maven version to 0.12 and ignore Eclipse project files  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Jia Zhai <None>  Closes #143 from merlimat/rat
2017-05-09T21:07:45Z,1052,BOOKKEEPER-1052: Print autorecovery enabled or not in bookie shell  Print the current status of auto-recovery  whether it's enabled or disabled.  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Enrico Olivelli <None>  Closes #142 from merlimat/autorecovery-enabled
2017-05-09T21:06:02Z,1051,BOOKKEEPER-1051: Fast shutdown for GarbageCollectorThread  Several unit tests are taking very long time to complete (eg: `BookieLedgerIndexTest` taking ~10 minutes). The reason is that these tests are playing with the ZK quorum shutting it down and after the test succeeds  the shutdown phase is taking long time  since we try to do graceful shutdown with 1min wait time. I think is better to interrupt immediately the garbage collector thread when shutting down the bookie.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <None>  Closes #141 from merlimat/fast-gc-thread-shutdown
2017-05-09T20:24:53Z,1050,BOOKKEEPER-1050: Cache journalFormatVersionToWrite when starting Journal  Reading the journal version format from `ServiceConfiguration` each time is inefficient. `ServiceConfiguration` is based on Java properties which is based on a String to object hashtable. Each read implies acquiring a mutex and converting from object to int.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <None>  Closes #140 from merlimat/cache-journal-conf
2017-05-04T18:58:41Z,1047,BOOKKEEPER-1047: Add missing error code in ZK setData return path  The log warning is not printing the error code returned by ZooKeeper  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #137 from merlimat/missing-error-msg
2017-05-04T18:54:13Z,1046,BOOKKEEPER-1046: Avoid long to Long conversion in OrderedSafeExecutor task submit  When submitting tasks to an OrderedSafeExecutor  most of the time a ledger id is being passed. Given that the method accepts and Object  the primitive `long` is boxed into a `Long` allocated on the heap.  Added specific method overload to directly accept longs as the key in the OrderedSafeExecutor.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@apache.org>  Closes #136 from merlimat/executor-long-conversion
2017-05-04T08:27:44Z,1045,BOOKKEEPER-1045: Execute tests in different JVM processes  The current Maven Surefire configuration is using: ```xml <forkMode>always</forkMode> ```  This is a deprecated config and apparently it's not creating new processes for each test as intended.  Currently the tests are leaking a big number of files and threads due to several reasons:  * Tests that instantiate bookies and call shutdown() without calling start() before are creating and initializing the ledger storage but not closing it  leaking threads and several fds   * ZooKeeperClient sometimes doesn't shutdown the zk handle if the test completes too quickly  leaking sockets.  * Several tests are passing bad config  so the bookie/client start gets exception (on purpose) and then doesn't clean up some partial objects.  * ...  That make running the test suite to be dependent on ulimit of the machine.  Until we can fix (almost) all the test to do proper cleanup  we should make maven to run tests in separated processes.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli<eolivelli@apache.org>  Jia Zhai <zhaijia@apache.org>  Closes #135 from merlimat/bk-1045-test-forks
2017-05-02T21:04:57Z,552,BOOKKEEPER-552: 64 Bits Ledger ID Generation  This PR supersedes #112  Instead of moving LongHierarchicalLedgerManager to HierarchicalLedgerManager  LongHierarchicalLedgerManager is still a stand-alone manager. HierarchicalLedgerManager has been moved to LegacyHierarchicalLedgerManager  and a new HierarchicalLedgerManager class has been put in its place  which is backwards-compatible with the original (now legacy) HierarchicalLedgerManager.  This new HierarchicalLedgerManager leverages the new LongZkLedgerIdGenerator to generate Ids  and uses the LongHierarchicalLedgerManager to manage metadata for ledger IDs > 31 bits long. For shorter ledger ids  the LegacyHierarchicalLedgerManager is used  to keep backwards-compatibility.  Author: Kyle Nusbaum <knusbaum@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Venkateswararao Jujjuri (JV) <None>  Closes #114 from knusbaum/BOOKKEEPER-552
2017-05-02T20:07:24Z,1019,BOOKKEEPER-1019: Support for reading entries after LAC  This patch introduces a new client-side configuration option to allow reads outside the boundary of the local LastAddConfirmed value.  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  Closes #121 from eolivelli/BOOKKEEPER-1019-read-after-lac
2017-05-01T19:55:22Z,1042,BOOKKEEPER-1042: Deploy SNAPSHOTS of master to public Apache Repository  Make all pom.xml files have a -SNAPSHOT version.  Currently we have the 'compats' subprojects which have a strange versioning scheme. Actual versioning scheme for that poms will clash will other versions of the project  because they are fixed and do not depend on the common parent pom.  Changing the version will make the build more reproducible and it is a prerequisite for the deployment of -SNAPSHOT version to the official Apache Snapshots Repository  Author: Enrico Olivelli <eolivelli@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  Closes #134 from eolivelli/BOOKKEEPER-1042-pom-for-snapshots
2017-04-24T12:30:06Z,1043,BOOKKEEPER-1043: Upgrade Apache Parent Pom Reference to latest version  Author: eolivelli <eolivelli@apache.org>  Reviewers: Ivan Kelly <ivan@ivankelly.net>  Closes #133 from eolivelli/BOOKKEEPER-1043-upgrade-pom
2017-04-20T17:55:16Z,1038,BOOKKEEPER-1038: Fix findbugs warnings and upgrade to 3.0.4  - upgrade to findbugs 3.0.4 - fix DLS_DEAD_LOCAL_STORE At BookieInfoReader.java (introduce a constant) - fix EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC At PerChannelBookieClient.java (introduce a V3CompletionKey)  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #131 from eolivelli/BOOKKEEPER-1038-findbugs
2017-04-18T17:59:33Z,1039,BOOKKEEPER-1039: bk-merge-pr.py ask to run findbugs and rat before merge  Add the ability to optionally run findbugs and apache RAT before every merge using the PR merge script  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #132 from eolivelli/BOOKKEEPER-1039-merge-findbugs
2017-04-15T11:58:34Z,1018,BOOKKEEPER-1018: Allow client to select older V2 protocol (no protobuf)  Tested manually - running all tests locally. Will tag contributors. when ready for review (for now putting up to test via Screwdriver and manual review)  Author: Govind Menon <govindappumenon@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #126 from govind-menon/BOOKKEEPER-1018
2017-04-13T04:38:32Z,104,DL-174: added getParent method to Utils to replace usage of File.getParent which changes / to \ on Windows  …ich changes / to \ in Windows.  Author: adamtracymartin <atmartin@yahoo.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #104 from adamtracymartin/DL-174
2017-04-13T04:36:19Z,116,DL-173: changed FileUtils.deleteDirectory to FileUtils.forceDeleteOnExit so d…  I am doing a new pull request because I deleted the branch in the remote. Actions done to fix the conflict. 1. git checkout DL-173 2. git checkout master distributedlog-protocol/src/main/thrift/service.thrift 3. git fetch 4. git add * 5. git commit with message  The actual fix for this branch is changing FileUtils.deleteDirectory to FileUtils.forceDeleteOnExit.  Author: adamtracymartin <atmartin@yahoo.com>  Reviewers: Jia Zhai <zhaijia03@gmail.com>  Sijie Guo <sijie@apache.org>  Leigh Stewart <lstewart@apache.org>  Closes #116 from adamtracymartin/DL-173
2017-04-13T03:54:11Z,126,DL-196: Remove 'Copyright 2017 The Apache Software Foundation' from license header  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <zhaijia03@gmail.com>  Closes #126 from sijie/sijie/fix_license_headers
2017-04-11T18:20:29Z,997,BOOKKEEPER-997: Wire protocol change for supporting long poll  adding fields in ReadRequest to support piggying back lac on read responses and support long poll requests.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Matteo Merli <mmerli@apache.org>  Closes #125 from sijie/longpoll/part0_wire_protocol_changes
2017-04-11T18:19:22Z,1022,BOOKKEEPER-1022: Make BookKeeperAdmin implement AutoCloseable  Author: eolivelli <eolivelli@apache.org>  Reviewers: Robert (Bobby) Evans <None>  Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  Closes #128 from eolivelli/BOOKKEEPER-1022-bkadmin-autocloseable
2017-04-11T18:15:19Z,129,BOOKEEPER-1002: Limiting the number of open files to avoid process max  Author: Matteo Merli <matteo.merli@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #129 from kishorvpatil/bk1002
2017-04-11T18:14:19Z,1031,BOOKKEEPER-1031: close the ledger handle in ReplicationWorker.rereplicate  …cate  Otherwise  we build up an unbounded set of Listeners in the AbstractZkLedgerManager listenerSet structure which never go away.  Signed-off-by: Samuel Just <sjustsalesforce.com>  Author: Samuel Just <sjust@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #130 from athanatos/forupstream/BOOKKEEPER-1031
2017-04-11T06:28:37Z,1021,BOOKKEEPER-1021: Improve merge script to handle github reviews api  Author: Sijie Guo <sijie@apache.org>  Reviewers: Govind Menon <None>  Closes #123 from sijie/sijie/improve_merge_scripts
2017-04-04T01:22:07Z,1018,BOOKKEEPER-1018: Revert ": Allow client to select older V2 protocol (no…  … protobuf)"  This reverts commit 9001e300ce0d5d2655d437e3eaa52f91487caed6.  I broke trunk - not exactly sure how - I will fix it and put up the PR again. For now I'm reverting the commit.  Author: Govind Menon <govindappumenon@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #124 from govind-menon/BOOKKEEPER-1018-Revert
2017-04-03T19:31:47Z,1018,BOOKKEEPER-1018: Allow client to select older V2 protocol (no protobuf)  Originally done by Matteo Merli (merlimat). Tagging sijie and eolivelli  for review.  Author: Govind Menon <govindappumenon@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #120 from govind-menon/BOOKKEEPER-1018
2017-04-03T16:57:40Z,1020,BOOKKEEPER-1020: Fix Explicit LAC tests on master  Author: eolivelli <eolivelli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Robert (Bobby) Evans <evans@yahoo-inc.com>  Closes #122 from eolivelli/BOOKKEEPER-1020-fix-explicitlac-test
2017-03-28T20:40:35Z,390,BOOKKEEPER-390: Provide support for ZooKeeper authentication  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #76 from eolivelli/BOOKKEEPER-390
2017-03-28T20:39:22Z,1004,BOOKKEEPER-1004: Allow bookie garbage collection to be triggered manu…  Ran CompactionTest#testForceGarbageCollection  Author: Govind Menon <govindappumenon@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Closes #109 from govind-menon/BOOKKEEPER-1004
2017-03-28T20:37:16Z,852,BOOKKEEPER-852: Release LedgerDescriptor and master-key objects when not used anymore  Maps with ledger descriptors and master-keys are not cleaned after a ledger gets deleted.  For this PR  please only take a look at the last commit 18e3455. The other 2 commits are already in separate PRs. I'll rebase this PR once they'll get merged.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #78 from merlimat/bk-ledger-descriptor
2017-03-28T20:35:30Z,950,BOOKKEEPER-950: Ledger placement policy to accomodate different storage capacity of bookies  …ge capacity of bookies  This change introduces Disk weight based ledger placement. Currently free disk space is the only supported weight for a bookie. This change also introduces a new protocol message between bk client and server called GET_BOOKIE_INFO. This message is used by the client to retrieve the free disk space info from all the bookies. The existing placement policies: DefaultPlacementPolicy and RackAwarePlacementPolicy have been enhanced to make use of the weight while selecting bookies. New test cases have been added to test RackawarePlacement with weights. A new test class has been added to test the weight based selection algorithm in a stand alone fashion.  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #93 from rithin-shetty/weightBasedPlacementDec13
2017-03-28T07:09:47Z,115,DL-184: reduce server_graceful_shutdown_period_ms from 35s to 20s  which is smaller than the default daemon stop timeout value  Author: xieliang <xieliang007@gmail.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Sijie Guo <sijie@apache.org>  Closes #115 from xieliang/DL-184-graceful
2017-03-23T14:59:01Z,970,BOOKKEEPER-970: Bump the zookeeper version to 3.5  in DL  we need to leverage the asynchronous version of 'multi' in zookeeper. so this jira is to bump the zookeeper version to 3.5 to support async multi.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Closes #79 from sijie/sijie/bump_zookeeper_version
2017-03-23T14:58:08Z,1001,BOOKKEEPER-1001: Make LocalBookiesRegistry.isLocalBookie() public  Author: Francesco Caliumi - Diennea <francesco.caliumi@diennea.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  Sijie Guo <sijie@apache.org>  Closes #106 from caiok/BOOKKEEPER-1001
2017-03-23T14:55:12Z,1013,BOOKKEEPER-1013: Fix findbugs errors on latest master  - 100% synchronization on _explicitLac_ on FileInfo - 100% synchronization on _length_ on LedgerHandle - fixed the print format issue on journal dir names array - fix checkpointsource list hashCode  equals()  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Closes #118 from sijie/sijie/bk_1013
2017-03-23T03:27:19Z,121,DL-191: Fix license header issues  the copyright year is wrong.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Leigh Stewart <lstewart@apache.org>  Flavio Junqueira <fpj@apache.org>  Closes #121 from sijie/sijie/fix_license_header
2017-03-22T23:59:53Z,1007,BOOKKEEPER-1007: Explicit LAC: make the interval configurable in ms  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Robert (Bobby) Evans <None>  Venkateswararao Jujjuri (JV) <None>  Sijie Guo <sijie@apache.org>  Closes #111 from eolivelli/BOOKKEEPER-1007-explicitlac-ms
2017-03-22T23:54:42Z,1003,BOOKKEEPER-1003: Fix TestDiskChecker so it can be used on /dev/shm  The test generates a threshold which is negative if used on a disk where the usable disk size is very close to the total disk size. A negative threshold is invalid so the test fails in the wrong way. This fix stops the threshold from going negative.  Full disclosure  most of these changes were actually done by ivankelly  For this I am mostly just putting them back into open source.  Author: Kishor Patil <kpatil@yahoo-inc.com>  Reviewers: Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>  Sijie Guo <sijie@apache.org>  Closes #107 from kishorvpatil/BOOKKEEPER-1003
2017-03-22T23:51:48Z,999,BOOKKEEPER-999: Stop leaking threads in BookKeeper client  Author: Robert (Bobby) Evans <evans@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <eolivelli@gmail.com>  Jia Zhai <zhaijia03@gmail.com>  Kai S <None>  Venkateswararao Jujjuri (JV) <None>  Closes #105 from revans2/BOOKKEEPER-999
2017-03-22T23:48:06Z,998,BOOKKEEPER-998: Increased the max entry size to 5MB  Full disclosure  most of these changes were actually done by merlimat For this I am mostly just putting them back into open source.  Author: Robert (Bobby) Evans <evans@yahoo-inc.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Venkateswararao Jujjuri (JV) <None>  Closes #104 from revans2/BOOKKEEPER-998
2017-03-22T21:54:46Z,1009,BOOKKEEPER-1009: Use multiple journals in bookie  Mostly https://github.com/apache/bookkeeper/pull/71 with comments addressed  Will shortly add tests.  merlimat  Would it be ok to close 71?  Author: Govind Menon <govindappumenon@gmail.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #115 from govind-menon/BOOKKEEPER-1009_B
2017-01-31T21:45:36Z,996,BOOKKEEPER-996: LongHierarchicalLedgerManagerFactory is missing license header  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Closes #103 from sijie/sijie/fix_rat_issue
2017-01-31T03:01:48Z,874,BOOKKEEPER-874: Explict LAC from Writer to Bookies  Introduce a new feature for sending explicit LAC to bookies. A writable LedgerHandle creates a timer thread to send explicit LACs at the intervals specified through configuration paramenter  explicitLacInterval. If this is set to zero  this feature is disabled  no timer thread is created.  Explicit LAC is sent only if the client did not get a chance to send LAC through piggyback method for "explicitLacInterval" time. To implement this  introduced two new protocol messages to the Bookkeeper protocol -  WRITE_LAC and READ_LAC  in addition to its current READ_ENTRY and ADD_ENTRY.  Reviewed-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com> Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> Co-Author : Charan Reddy Guttapalem <cguttapalemsalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #89 from reddycharan/explicitlacsinglecommit
2017-01-31T01:52:29Z,114,DL-186: fix common.sh grep bug; kill MultiReader java process as expected  Author: xieliang <xieliang007@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #114 from xieliang/DL-186-smoketest
2017-01-31T01:41:54Z,873, BOOKKEEPER-873 and BOOKKEEPER-553      BOOKKEEPER-873: CreateLedgerAPI to accept ledgerId     Add ledgerCreateAdv with ledgerId interface to Bookkeeper     and corresponding Junit tests.      BOOKKEEPER-553: LongHierarchicalLedgerManager     - LongHierarchicalLedgerManager to support 63 bits ledgerid (positive long)     - LongHierarchicalLedgerManager splits the generated id into 5 parts (3-4-4-4-4)  Author: Venkateswara <vjujjuri@salesforce.com> Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #88 from reddycharan/ledgerhandleadvwithledgerid
2017-01-31T01:14:22Z,959,BOOKKEEPER-959: ClientAuthProvider and BookieAuthProvider Public API used Protobuf Shaded classes  This fix removes the explicit usage of protobuf from ClientAuthProvider and BookieAuthProvider API  since protobuf library is shaded and relocated on the distributed public version of BookKeeper  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #67 from eolivelli/BOOKKEEPER-959
2017-01-31T01:11:29Z,968,BOOKKEEPER-968: Entry log flushes at configurable chunks  With this patch one can configure interval (in bytes) for entry log to flush writes to the disk.  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #77 from dlg99/task/entry-log-flush
2017-01-30T22:25:01Z,949,BOOKKEEPER-949: Allow entryLog creation for compaction  Allow entryLog creation even when bookie is in RO mode for compaction  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com> Reviewed-by: Andrey Yegorov <ayegorovsalesforce.com> Reviewed-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #99 from reddycharan/entrylogcreationforcompaction
2017-01-30T20:31:01Z,907,BOOKKEEPER-907: EntryFormatter should be configured  for ReadLedgerEntriesCmd  EntryFormatter should be configurable and HexDumpEntryFormatter should be one of them.  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #101 from reddycharan/entryformatter
2017-01-11T06:41:21Z,943,BOOKKEEPER-943: Reduce log level of AbstractZkLedgerManager  Just change from "info" to "debug"  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #98 from eolivelli/BOOKKEEPER-943-reduce-logs
2017-01-11T06:37:55Z,991,BOOKKEEPER-991: Get list of disk files  BKShell Command for Getting list of DiskFiles - Journals/EntryLogs/IndexFiles  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #100 from reddycharan/listfilesondisc
2017-01-11T06:34:59Z,992,BOOKKEEPER-992: ReadLog Command Enhancement  - Take arguments lid and eid and prints just that entry - Take arguments of position range and print entries which are located in that position range  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #102 from reddycharan/readlogcommand
2017-01-11T05:45:42Z,111,Fix the script to make sure binary package can execute scripts correctly  - fix the release jar path - copy the common script to each modules otherwise the built package won't be able to execute - change the type of runner and copy the runner script to each tutorial module  Author: Sijie Guo <sijie@apache.org>  Reviewers: Jia Zhai <zhaijia@apache.org>  Closes #111 from sijie/sijie/copy_all_scripts_to_modules
2017-01-08T22:46:53Z,,[maven-release-plugin] prepare for next development iteration
2017-01-08T22:46:53Z,,[maven-release-plugin] prepare for next development iteration
2017-01-08T22:46:49Z,,[maven-release-plugin] prepare branch release-0.4.0-incubating
2017-01-08T22:46:49Z,,[maven-release-plugin] prepare branch release-0.4.0-incubating
2017-01-08T22:46:02Z,,Remove Xlint compiler arguments for building release
2017-01-08T22:10:37Z,97,DL-170: All dependency versions should be defined in the parent pom  make all dependencies' version be defined in the parent pom file.  Author: Gerrit Sundaram <gerritsundaram@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #97 from gerritsundaram/DL-170
2017-01-08T22:10:37Z,97,DL-170: All dependency versions should be defined in the parent pom  make all dependencies' version be defined in the parent pom file.  Author: Gerrit Sundaram <gerritsundaram@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #97 from gerritsundaram/DL-170
2017-01-08T22:03:13Z,100,DL-28: changed // comments to /* */  Author: adamtracymartin <atmartin@yahoo.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #100 from adamtracymartin/DL-28
2017-01-08T22:01:35Z,96,DL-83: Add javadoc to website  - update the javadoc plugin to aggregate api by 'core library' and 'proxy service'. (turn some java class to package private and delete unused files. so they won't appear in java doc) - improve the website build script to include javadoc - update some readme files to include user mail list and slack channel  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #96 from sijie/sijie/merge_website_script
2017-01-08T22:01:35Z,96,DL-83: Add javadoc to website  - update the javadoc plugin to aggregate api by 'core library' and 'proxy service'. (turn some java class to package private and delete unused files. so they won't appear in java doc) - improve the website build script to include javadoc - update some readme files to include user mail list and slack channel  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #96 from sijie/sijie/merge_website_script
2017-01-07T00:51:06Z,102,DL-176: Rename the DL artifact from com.twitter to org.apache.distributedlog  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Dave Rusek <drusek@apache.org>  Leigh Stewart <lstewart@apache.org>  Closes #102 from sijie/sijie/fix_pom_file_layout
2017-01-07T00:51:06Z,102,DL-176: Rename the DL artifact from com.twitter to org.apache.distributedlog  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Dave Rusek <drusek@apache.org>  Leigh Stewart <lstewart@apache.org>  Closes #102 from sijie/sijie/fix_pom_file_layout
2017-01-07T00:30:32Z,98,DL-171: adding a short sleep to let the WriteCompleteListener have time to run before the final position be requested  once the "writer.write" is done  if "writer.position()" be invoked easier than the WriteCompleteListener onSuccess callback  due to the "synchronized"  the position result will be 0  not the expected 33. we can just add a short sleep to avoid this test issue.  Author: xieliang <xieliang007@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #98 from xieliang/DL-171-Fix-TestAppendOnlyStreamWriter
2017-01-05T00:46:19Z,,DL-4: Repackage the source under apache namespace
2017-01-05T00:46:19Z,,DL-4: Repackage the source under apache namespace
2017-01-05T00:09:01Z,91,DL-165: Add TestTimedOutTestsListener to dump timed out cases thread dump  Author: xieliang <xieliang007@gmail.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #91 from xieliang/DL-165-TimedOutTestsListener
2017-01-05T00:09:01Z,91,DL-165: Add TestTimedOutTestsListener to dump timed out cases thread dump  Author: xieliang <xieliang007@gmail.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #91 from xieliang/DL-165-TimedOutTestsListener
2017-01-04T08:41:56Z,71,DL-140: Fix distributedlog-core findbug inconsistent synchronization warings  Author: xieliang <xieliang007@gmail.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #71 from xieliang/DL-140
2016-12-29T10:14:02Z,,DL-164: Create stream operation should not be submitted by StreamImpl
2016-12-29T10:13:30Z,,DL-163: clean up direct zookeeper and bookkeeper usage and use metadata/data store abstraction  - introduce NamespaceDriver class to manage metadata/data store abstractions - clean up direct zookeeper and bookkeeper usage and use metadata/data store abstraction - separate MetadataAccessor from DistributedLogManager - remove deprecated classes
2016-12-29T10:13:02Z,,DL-162: Use log segment entry store interface  - Use log segment entry store interface - Delete the old readahead implementation
2016-12-29T10:12:25Z,,DL-161: Rename ledger id to log segment id  Along with providing log segment store related interfaces  clean up the naming from 'ledger id' to 'log segment id'. So it would become clear when we can plugin different log segment store.
2016-12-29T10:12:04Z,,DL-160: Remove 'DLSN' suffix from async and sync readers
2016-12-29T10:11:40Z,,DL-159: ReadAhead Improvement (part 2) - New ReadAhead Reader using the LogSegmentEntryReader interface  Provide a new ReadAhead reader using the log segment entry reader interface. It does reading entries in a batch in parallel for batches  rather than reading entries in batch by batch. This would help mitigate the slow bookie problem.  The core change is the new ReadAheadEntryReader.
2016-12-29T10:11:40Z,,DL-159: ReadAhead Improvement (part 2) - New ReadAhead Reader using the LogSegmentEntryReader interface  Provide a new ReadAhead reader using the log segment entry reader interface. It does reading entries in a batch in parallel for batches  rather than reading entries in batch by batch. This would help mitigate the slow bookie problem.  The core change is the new ReadAheadEntryReader.
2016-12-29T10:11:23Z,,DL-195: ReadAhead Improvement (part 1) - Interface for LogSegmentEntryReader and LogSegmentEntryWriter  Create interface for log segment entry reader and writer to abstract data write/read operations.
2016-12-29T10:11:23Z,,DL-195: ReadAhead Improvement (part 1) - Interface for LogSegmentEntryReader and LogSegmentEntryWriter  Create interface for log segment entry reader and writer to abstract data write/read operations.
2016-12-29T10:10:53Z,,DL-158: update truncation status for all completed log segments  update turncation status for all completed log segments  when purge truncated log segments we will leave one complete log segment.
2016-12-29T10:10:32Z,,DL-157: resource placement for write proxy
2016-12-29T10:09:40Z,,DL-119: Fix the logging on closing readahead worker
2016-12-29T10:09:00Z,,DL-118: Stream metadata store followup - rename ZKLogMetadata* to LogMetadata*  As the followup change  this change is to remove 'ZK' from 'ZKLogMetadata*' class
2016-12-29T10:08:33Z,,DL-117: Stream metadata store  This change is to abstract the zookeeper operations into a stream metadata store  so we can replace zookeeper with other metadata store easily.  So the metadata operations in distributedlog now are managed by 3 classes:  - LogMetadataStore : it is the namespace metadata store : it manages the location (uri) mapping for streams and handle namespace operations. - LogStreamMetadataStore: it is the stream metadata store : it manages the metadata for a single stream  such as managing read/write lock  retriving/creating stream metadata  deleting metadata and such. - LogSegmentMetadataStore: it is the segment metadata store : it manages the log segment metadata for individual log segment.  LogMetadataStore and LogSegmentMetadataStore are already there. This change focus on LogStreamMetadataStore  Changed:  * abstract all the zookeeper metadata operation in log handlers to LogStreamMetadataStore * remove disabling max tx id santify check  as maxTxId update is part of the metadata update transaction  Not changed:  the name of ZKLogMetadataForReader and ZKLogMetadataForWriter are not changed. I will send out a change to rename these two classes as they are not related to zookeeper anymore.
2016-12-29T10:07:27Z,,DL-116: Add tool for deleting subscriber from subscription store  Test Plan:  1. manually create znode for subscribers resume point 2. use the tool to delete the subscriberId
2016-12-29T10:06:55Z,,DL-115: fix force get log segment logic  Summary:  We should remove the ledger closed check:  - force to get log segments if the reader has been idle for a while after open the ledger - idleReaderWarnThreshold should be 2x larger than readLACLongPollTimeout
2016-12-29T06:46:48Z,80,DL-114: Add namespace watch tool  Port simple namespace watch tool from downstream  Author: Leigh Stewart <agrodellic@gmail.com> Author: Leigh Stewart <lstewart@twitter.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #80 from leighst/lstewart/dlog/watch_tool
2016-12-28T00:49:30Z,,DL-113: Improve the sync reader benchmark  Add more logging information for calcuating the stats for catching up reads
2016-12-28T00:49:29Z,,DL-112: Improve SyncReader to access readahead cache directly  This changes the implementation of SyncReader to let it access the read ahead cache directly  rather than calling AsyncReader to fetch the entries. It would reduce the function calls that SyncReader spends on reading individual records.
2016-12-28T00:49:29Z,,DL-111: ReadAhead Cache should cache entries rather than records  Current readahead cache cache records. So it will be a lot of callbacks (function calls) when polling a record off the readahead cache. Most of the cpu cycles are unnecessarily spent on function calls on polling records off the readahead cache. It is the throughput bottleneck for a DL reader.  This change is to change ReadAhead cache to cache entries rather than records. Defer the deserilization of records later on when the reader wants to access the records. It also make the cache more efficient to reduce the memory footprint.
2016-12-28T00:49:29Z,,DL-110: Write control record if necessary when roll a log segment
2016-12-28T00:49:28Z,,DL-109: Add a tool to find the stream containing the given ledger
2016-12-28T00:49:28Z,,DL-108: Log rate limiting more clearly
2016-12-28T00:49:28Z,,DL-107: Added unregistering gauges for distributedlog-core and distributedlog-benchmark
2016-12-28T00:49:28Z,,DL-106: Use namespace after it is closed will throw AlreadyClosedException
2016-12-28T00:49:27Z,,DL-102: Add routing service to write proxy server side  this change is to add getOwner rpc in write proxy. so we can change the client side to get owner from write proxy first for routing service. in this way  we can start experiementing any resource placement algorithms.
2016-12-28T00:49:27Z,,DL-105: Make compression stats available per stream
2016-12-28T00:49:27Z,,DL-104: BKClientReadTimeout can be equal to getReadLACLongPollTimeout so current config validates
2016-12-28T00:49:27Z,,DL-102: Add routing service to write proxy server side  this change is to add getOwner rpc in write proxy. so we can change the client side to get owner from write proxy first for routing service. in this way  we can start experiementing any resource placement algorithms.
2016-12-28T00:49:26Z,,DL-101: Improve session expire handling on fetching log segments for readers  This change focuses on improving the session expire handling on fetching log segments for readers.  The log segment management in DL is now done by 3 parts.  - a LogSegmentMetadataStore (one per namespace instance): it is used for fetching the log segments from log segment metadata store (ZooKeeper). it doesn't do any caching. - a LogSegmentMetadataCache (one per namespace instance): it is a guava cache based metadata cache. it maintains a mapping between log segment metadata path and the log segment metadata. it manages the cache for the log segments that will be accessed in this namespace instance. it doesn't manage the sequence of the log segments for streams. - a PerStreamLogSegmentCache for each BKLogHandler. the log segment cache is per stream. it maintains the sequence of the log segments.  BKLogWriteHandler doesn't watch the log segment changes. It fetches minimal number of log segments when it is created and fetches the full list of log segments for truncations. New log segments will be added to the per stream log segment cache with log segment rolling.  BKLogReadHandler watch the log segments changes and only notify when the list of log segments is changed. the session handling which is specific to the metadata store is hidden to the implementations of LogSegmentMetadataStore.  The change tries to cleanup bunch of unused methods in BKLog{Read Write}Handler too.
2016-12-28T00:49:26Z,,DL-101: Improve session expire handling on fetching log segments for readers  This change focuses on improving the session expire handling on fetching log segments for readers.  The log segment management in DL is now done by 3 parts.  - a LogSegmentMetadataStore (one per namespace instance): it is used for fetching the log segments from log segment metadata store (ZooKeeper). it doesn't do any caching. - a LogSegmentMetadataCache (one per namespace instance): it is a guava cache based metadata cache. it maintains a mapping between log segment metadata path and the log segment metadata. it manages the cache for the log segments that will be accessed in this namespace instance. it doesn't manage the sequence of the log segments for streams. - a PerStreamLogSegmentCache for each BKLogHandler. the log segment cache is per stream. it maintains the sequence of the log segments.  BKLogWriteHandler doesn't watch the log segment changes. It fetches minimal number of log segments when it is created and fetches the full list of log segments for truncations. New log segments will be added to the per stream log segment cache with log segment rolling.  BKLogReadHandler watch the log segments changes and only notify when the list of log segments is changed. the session handling which is specific to the metadata store is hidden to the implementations of LogSegmentMetadataStore.  The change tries to cleanup bunch of unused methods in BKLog{Read Write}Handler too.
2016-12-28T00:47:06Z,84,DL-151: TestBKLogReadHandler#testGetFirstDLSNWithOpenLedger is flaky  - Flush/Commit records only after the data are written - Disable immediate flush - Reduce num writes from 100 to 10  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #84 from sijie/sijie/FixTestGetFirstDLSNWithOpenLedger
2016-12-28T00:45:43Z,83,DL-150: Ensure namespace path is created for TestZKLogMetadataForWriter  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #83 from sijie/sijie/FixTestCreateLogMetadata
2016-12-27T17:05:00Z,88,DL-155: fix flaky TestAsyncReaderLock#testReaderLockMultiReadersScenario  Ran the case with changed patch 30 times  all are passed;   and it'll fail w/o patch  Author: xieliang <xieliang007@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #88 from xieliang/DL-155
2016-12-27T16:57:27Z,78,DL-145: the write requests should be error out immediately even if the rolling writer still be creating  Passed all test cases locally  now TestDistributedLogService#testServiceTimeout case is stable on my box  Author: xieliang <xieliang007@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #78 from xieliang/DL-145
2016-12-21T18:40:28Z,964,BOOKKEEPER-964: Ignore findbugs warnings  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #96 from eolivelli/BOOKKEEPER-964-findbugs
2016-12-21T08:09:57Z,69,DL-97: Remove unused methods in BKLogHandler  merge code change on remove unused methods in BKLogHandler.  Author: Sijie Guo <sijie@apache.org> Author: Sijie Guo <sijieg@twitter.com> Author: Leigh Stewart <lstewart@twitter.com> Author: Jordan Bull <jbull@twitter.com> Author: Dave Rusek <dave.rusek@gmail.com> Author: Dave Rusek <drusek@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #69 from sijie/merge/DL-97
2016-12-21T01:00:37Z,54,DL-129: Enable checkstyle plugin for distributedlog-protocol module  - add build-tools module for check style configurations - fix style problems in distributedlog-protocol   * sorted import   * fix javadoc   * constant static name and static name  Author: Xi Liu <xiliuant@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #54 from xiliuant/xi/checkstyle
2016-12-21T00:48:48Z,986,BOOKKEEPER-986: Handle memtable flush failure  - If the memtable flush is failed previously then for the next addEntry call it will try to flush the existing snapshot  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #92 from reddycharan/handlememtableflushfailure
2016-12-21T00:42:33Z,983,BOOKKEEPER-983: BookieShell LedgerDelete Command  BookieShell Command for LedgerDelete  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #90 from reddycharan/ledgerdeletecommand
2016-12-20T21:43:08Z,988,BOOKKEEPER-988: Add missing license header  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Closes #95 from sijie/sijie/fix_license_header
2016-12-20T08:04:51Z,64,DL-91: Be able to close writer within a timeout duration  merge twitter's change on closing writer.  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org> Author: Jordan Bull <jbull@twitter.com> Author: Leigh Stewart <lstewart@twitter.com> Author: Dave Rusek <dave.rusek@gmail.com> Author: Dave Rusek <drusek@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #64 from sijie/merge/DL-91
2016-12-20T06:28:24Z,73,DL-28: using /* */ style comment to avoid scrooge windows platform issue  Author: xieliang <xieliang007@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Leigh Stewart <lstewart@apache.org>  Closes #73 from xieliang/DL-28
2016-12-20T06:25:03Z,77,DL-122: Use assertions from Junit rather than assert() for tests  * changed all instances of `assert()` to junit versions in `src/test`  Here is the script I used to find all instances of `assert()` inside the `src/test` folder:  ``` grep -r "assert(" * 2>/dev/null | grep -v "main" ```  The `grep -v "main"` removes all instances of the usage within the main source tree (which there are quite a few). I did this as I assumed the JIRA ticket spirit was not to remove those instances from the main tree and thus would require including `junit` in core compilation rather than scoped for `test` as is.  Author: Brennon York <brennon.york@capitalone.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #77 from brennonyork/DL-122
2016-12-20T06:22:37Z,75,DL-123: Every tests should have timeout  * used a simple bash script to find any tests without a timeout  Here is the below bash executed from the root directory. This could be expanded to take in more than one line above the initial `grep` although  for more  it only reduces the false positive rate. After this patch there are only 4 false positives (tests where the text immediately above is not `Test(timeout = ...)`). ``` grep -r "public void test" -B 1 * | awk '($NR+1) % 3 !=0 {printf $0; printf " "} NR % 3 == 0 {print " "}' | grep -v "timeout" ```  Author: Brennon York <brennon.york@capitalone.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #75 from brennonyork/DL-123
2016-12-20T06:20:52Z,74,DL-136: Avoid empty catch blocks  * resolves the 9 empty catch blocks in `src/main` * leaves 49 errors within `src/test` unchanged   * if we want to resolve those as well let me know  wasn't sure how we wanted to handle that  Used an independent checkstyle that looked for [empty catch blocks](http://checkstyle.sourceforge.net/config_blocks.html#EmptyBlock). Did a quick manual analysis and cannot find any other empty catch blocks in `src/main` so cannot rectify the original 22 as stated in the [Kiuwan blog](https://www.kiuwan.com/blog/analyzing_distributedlog_twitter-2/).  Author: Brennon York <brennon.york@capitalone.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #74 from brennonyork/DL-136
2016-12-17T07:55:48Z,62,DL-90: Don't use stack and codec together for configuring thriftmux  merge Twitter's change on thriftmux  Author: Sijie Guo <sijieg@twitter.com> Author: Jordan Bull <jbull@twitter.com> Author: Sijie Guo <sijie@apache.org> Author: Leigh Stewart <lstewart@twitter.com> Author: Dave Rusek <dave.rusek@gmail.com> Author: Dave Rusek <drusek@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #62 from sijie/merge/DL-90
2016-12-17T06:50:41Z,60,DL-88: remove watches when unregister children watches  merge twitter's change from Sijie Guo  Author: Sijie Guo <sijieg@twitter.com> Author: Jordan Bull <jbull@twitter.com> Author: Leigh Stewart <lstewart@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #60 from sijie/merge/DL-88
2016-12-17T06:43:24Z,59,DL-87: Introduce periodic keepalive control record in writer  merge twitter's change from Leigh Stewart  Author: Jordan Bull <jbull@twitter.com> Author: Sijie Guo <sijieg@twitter.com> Author: Leigh Stewart <lstewart@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #59 from sijie/merge/DL-87
2016-12-17T05:51:03Z,58,DL-86: Improve handling of lock conflicts in zk session lock  merge twitter's change from Sijie Guo.  Author: Jordan Bull <jbull@twitter.com> Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #58 from sijie/merge/DL-86
2016-12-17T01:45:11Z,966,BOOKKEEPER-966: change bookieServer cmdline to make conf-file and option co-exist  Currently  when using bookieServer cmdline to start a bookie  you will either give it a cofiguration file by "-c booke.conf"; or add some options like "<bookie_port> <zk_servers> <journal_dir> <ledger_dir [ledger_dir]>" in a fix sequential. It may not satisfy some of the requirement. So changed it to be co-exist for configuration file and options.  By this change  it will first use settings in configuration file; and then use options to overwrite some of the settings  if there are some options provided.  Here is an example after this change: ``` BookieServer -c bookie.conf -z localhost:2181 -m /bookkeeper/ledgers -p 3181 -j /mnt/journal -l "/mnt/ledger1 /mnt/ledger2 /mnt/ledger3” ``` Here  in this command: -z is for “Zookeeper client instance”; -m is for "Zookeeper ledgers root path for bookies"; -p is for "bookie service port exported"; -j is for "bookie journal directory"; -l is for "bookie ledgers directories".  Author: jiazhai <jia.zhai@emc.com> Author: jiazhai <jiazhai@users.noreply.github.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #75 from jiazhai/BOOKKEEPER-966
2016-12-17T01:44:24Z,946,BOOKKEEPER-946: Provide an option to delay auto recovery of lost bookies  Fixing a bug in the test AuditorLedgerCheckerTest.testDelayedAuditOfLostBookies which fails sometimes with: AuditorLedgerCheckerTest.testDelayedAuditOfLostBookies:367->_testDelayedAuditOfLostBookies:345 audit of lost bookie isn't delayed  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #82 from rithin-shetty/audit_delay_fix
2016-12-17T01:43:34Z,971,BOOKKEEPER-971: update bk codahale stats provider version  Update bk stats provider: from codahale to yammer. Currently io.dropwizard.metrics 3.1.0 is used most widely. will change version to 3.1.0.  And change CodahaleMetricsProvider.getMetrics() to public  since this would be used outside package.  And a small bug here: ```             File outdir;             if (Strings.isNullOrEmpty(prefix)) {  < === if (!)                 outdir = new File(csvDir  prefix);             } else {                 outdir = new File(csvDir);             } ```  Author: jiazhai <jia.zhai@emc.com> Author: jiazhai <jiazhai@users.noreply.github.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #83 from jiazhai/BOOKKEEPER-971
2016-12-17T01:42:18Z,967,BOOKKEEPER-967: New testsuite for RackPlacement  Added New Testsuite for testing RackAwareEnsemblePlacementPolicy using ScriptBasedMapping. It works only on Unix based OS  because of Shell script.  This testsuite has similar testscenarios as in TestRackawareEnsemblePlacementPolicy.java.  Also here it is assumed that the script file has execution permission.  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #86 from reddycharan/testrackawareusingscript
2016-12-17T01:40:25Z,987,BOOKKEEPER-987: BookKeeper build is broken due to the shade plugin  This is simply an upgrade of the maven-shade-plugin to version 2.4.3  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Rithin Shetty <rithin@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #94 from eolivelli/BOOKKEEPER-987
2016-12-17T01:39:40Z,984,BOOKKEEPER-984: Fix BookieClientTest.testWriteGaps  in commit 9359d682a1598e30364eca6021d976f911e055b2  the third field (last add confirmed) in the message. changed the test to include the lac in the test so the test logic can work as expected.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Closes #91 from sijie/sijie/BOOKKEEPER-984
2016-12-16T19:15:21Z,76,DL-141: Fix broken scripts in tutorials and add integration test to travis ci  - fix the broken scripts used in tutorials - fix the write_proxy configuration (a change was merged to validate configuration which it brokes the configuration too) - add integration test to validate the basic end-to-end functionalities  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #76 from sijie/sijie/script_for_ci
2016-12-16T00:20:57Z,55,Clean up and fix a few shell scripts  This is still in progress.  - remove trailing white spaces in a few places - fix some scripts (not rely on git); style consistency - validate that the vagrant configuration works - one of the Dockerfile was not correct  Author: Franck Cuny <fcuny@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #55 from franckcuny/fcuny/hack-week-cleanup and squashes the following commits:  fe3965d [Franck Cuny] Fix dlog script for core. f15cefd [Franck Cuny] fix a few more things in the common script. c32dee2 [Franck Cuny] Remove useless cd 622d3ab [Franck Cuny] Fix bundle for service. 93e9485 [Franck Cuny] A few more fixes for benchmarks' scripts. a3fc4ef [Franck Cuny] Remove trailing white spaces in the doc 27f90f1 [Franck Cuny] Rename bookkeeper hosts from node to bk. 21d89f8 [Franck Cuny] Do not assume git is available in the shell scripts. 480bc34 [Franck Cuny] Remove comment from Dockerfile a7ac7c0 [Franck Cuny] Git ignore pid files 179eddc [Franck Cuny] Ignore .vagrant directory created by vagrant. 9bf33fc [Franck Cuny] Create a valid snapshot. 5800829 [Franck Cuny] Remove Dockerfile and docker directory.
2016-12-12T23:37:54Z,53,DL-127: Fix coverall report  Author: Sijie Guo <sijie@apache.org>  Reviewers: Franck Cuny <franck.cuny@gmail.com>  Closes #53 from sijie/sijie/remove_reporting
2016-12-12T23:37:54Z,53,DL-127: Fix coverall report  Author: Sijie Guo <sijie@apache.org>  Reviewers: Franck Cuny <franck.cuny@gmail.com>  Closes #53 from sijie/sijie/remove_reporting
2016-12-03T06:45:43Z,22,DL-49: Support building project with scala 2.10 and 2.11  Author: Sijie Guo <sijieg@twitter.com> Author: Sijie Guo <sijie@apache.org>  Reviewers: Franck Cuny <franck.cuny@gmail.com>  Closes #22 from sijie/sijie/support_scala_2.10_and_2.11
2016-12-03T03:53:39Z,46,Update a couple of scripts  Mostly style.  Author: Franck Cuny <fcuny@apache.org> Author: Leigh Stewart <lstewart@twitter.com> Author: Khurrum Nasim <khurrumnasimm@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #46 from franckcuny/fcuny/update-scripts and squashes the following commits:  50c16ec [Franck Cuny] Rename a variable in one of the shell script. 924ba7e [Franck Cuny] Run `git rev-parse` only once when building the bundle. f1d3b3f [Franck Cuny] Remove more duplicated shell scripts. 90ce66f [Franck Cuny] Do not duplicate code for the 'bundle' script. 13987ea [Franck Cuny] Build cobertura report only on master for successful builds 525ec9a [Khurrum Nasim] Fix deadlock on BKSyncLogReaderDLSN 23c9190 [Leigh Stewart] Add documentation for distributedlog-benchmark 85aa8a7 [Franck Cuny] Make the shell style more consistent. 4f81ba2 [Franck Cuny] Rely on git to find the root directory.
2016-11-29T23:19:07Z,976,BOOKKEEPER-976 Fix license headers  …ftware Foundation"  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #84 from eolivelli/BOOKKEEPER-976
2016-11-29T23:17:46Z,964,BOOKKEEPER-964: Add concurrent maps and sets for primitive types  In BookKeeper there are many instances of maps and sets that use ledger id and entry ids as keys or values. JDK concurrent collections have the overhead of boxing all the primitive values into objects (eg: long --> Long) that would need to be allocated from the heap. In addition to that  JDK map implementations are closed hash tables and they will require at least one more allocation to hold the linked-list/tree node.  There are already available libraries that offer primitive collections with zero-allocation  but none of these support concurrent maps/sets.  We have added a handful of specializations  all based on the same implementation idea. We have a hash table which is broken down into multiple sections. Each sections  on its own  is an open hash table with linear probing  protected by a stamped lock.  All insertions  lookups and iterations on these collections are allocation free.  ``` ConcurrentLongHashMap: Map<long  Object> ConcurrentLongHashSet: Set<long> ConcurrentLongLongHashMap: Map<long  long> ConcurrentLongLongPairHashMap: Map< Pair<long  long>  Pair<long  long> > ConcurrentOpenHashMap: Map<Object  Object> ConcurrentOpenHashSet: Set<Object> ```  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Enrico Olivelli <Enrico.olivelli@diennea.com>  Closes #72 from merlimat/bk-collections
2016-11-29T23:07:42Z,955,BOOKKEEPER-955: in listLedgers method currentRange variable has to be…  … updated to the next iterator  in BookKeeperAdmin listLedgers method currentRange variable is not getting updated to next iterator when it has run out of elements  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Venkateswararao Jujjuri <vjujjuri@salesforce.com>  Closes #63 from reddycharan/listledgersfix
2016-11-29T23:02:27Z,948,BOOKKEEPER-948: Provide an option to add more ledger/index directorie…  …s to a bookie  This change allows the addition of new ledger and index directories to a bookie. Thus increasing ts storage capacity. The option is exposed via 'allowStorageExpansion' boolean configuration option. Also  the newly added directories need to be empty to be accepted. Two new test cases have been added to test this functionality.  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #59 from rithin-shetty/storage_expansion
2016-11-29T19:50:17Z,42,Fix deadlock on BKSyncLogReaderDLSN  Change the lastSeenDLSN to volatile to remove the synchronization block to avoid deadlock with sharedLock  Author: Khurrum Nasim <khurrumnasimm@gmail.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #42 from khurrumnasimm/kn/fix_deadlock
2016-11-17T23:44:06Z,912,BOOKKEEPER-912: Allow EnsemblePlacementPolicy to choose bookies using ledger custom data (multitenancy support)  Author: eolivelli <eolivelli@gmail.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #68 from eolivelli/BOOKKEEPER-912 and squashes the following commits:  6c1eaca [eolivelli] BOOKKEEPER-912 Allow EnsemblePlacementPolicy to choose bookies using ledger custom data (multitenancy support) 7c0ab37 [eolivelli] BOOKKEEPER-912 Allow EnsemblePlacementPolicy to choose bookies using ledger custom data (multitenancy support)
2016-11-17T23:18:35Z,965,BOOKKEEPER-965: Long Polling Part I: Changes in the write path  This is the first in the series of changes for enabling long polling between bookkeeper client and the bookkeeper server. The changes were originally implemented in the Twitter fork and these pull request combine multiple commits from Twitter's bookkeeper fork as they include not only the changes made initially but also bug fixes added since.  The first change captures the changes on the write path (AddEntry). We track the last add confirmed in the FileInfo so that we can trigger actions when the value is updated  Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #73 from robindh/LongPollWritePath
2016-11-12T02:37:35Z,962,BOOKKEEPER-962: Add more journal timing stats  It is useful to know the sync latency on the journal to identify disk/filesystem related latency spikes that will cause all the entries to queue up. In the same line  it's useful to track the amount of time spent in the journal queue.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #70 from merlimat/bk-journal-latency
2016-11-12T02:35:13Z,961,BOOKKEEPER-961: Assign read/write requests for same ledger to a single thread  When entries for the same ledger are processed by the bookie we should avoid the reordering of the request. Currently  if multiple read/write threads are configured  the requests will be passed to the executor and writes for same ledger will be spread across multiple threads.  This poses 2 issues:  1. Mutex contention to access the LedgerDescriptor  2. If the client receives add-entry acks out of order it has anyway to wait     for the acks of previous entries before acknowledging the whole sequence     to the application. In practice  the reordering is increasing the latency    experienced by the application.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #69 from merlimat/bk-fixed-ledger-thread
2016-11-09T07:49:20Z,958,BOOKKEEPER-958: Fix for ZeroBuffer Bug  Fix for readOnlyBuffer of ZeroBuffer bug  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #66 from reddycharan/zerobufferfix
2016-11-09T07:44:54Z,957,BOOKKEEPER-957: LedgerHandleAdv fixes  - making addToLength call synchronized - adding op to pendingAddOps after doing sanity check  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #65 from reddycharan/ledgerhandleadvfix
2016-11-09T02:08:44Z,956,BOOKKEEPER-956: Fix for HierarchicalLedgerRangeIterator  Fix for HierarchicalLedgerRangeIterator  to make it work for LedgerIds of length 9 and 10  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #64 from reddycharan/hierarchicalledgermanagerfix
2016-11-09T02:05:57Z,903,BOOKKEEPER-903: metaformat command fix  metaformat command should delete underreplicated ledger znodes and lock nodes  Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #62 from reddycharan/metaformatfix
2016-11-09T02:02:34Z,946,BOOKKEEPER-946: Provide an option to delay auto recovery of lost bookies  If auto recovery is enabled  and a bookie goes down for upgrade or even if it looses zk connection intermittently  the auditor detects it as a lost bookie and starts under replication detection and the replication workers on other bookie nodes start replicating the under replicated ledgers. All of this stops once the bookie comes up but by then a few ledgers would get replicated. Given the fact that we have multiple copies of data  it is probably not necessary to start the recovery as soon as a bookie goes down. We can wait for an hour or so and then start recovery. This should cover cases like planned upgrade  intermittent network connectivity loss  etc.  This change:     1) Provides a bookie option 'lostBookieRecoveryDelay' in secs  which when set to a non zero value         will delay the start of recovery by that number of seconds. By default  this option is set to 0;        which means the audit is not delayed.     2) If another bookie were to go down in this interval  the recovery is immediately started and the        one scheduled for future is canceled.     3) Adds counters to track how many audits were delayed(#1) and how many scheduled audits were        canceled due to multiple bookie failures(#2).     4) Three junit tests to verify the new feature.  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: siddharth.boobna@gmail.com <siddharth.boobna@gmail.com>  Enrico Olivelli <eolivelli@gmail.com>  Closes #58 from rithin-shetty/audit_delay
2016-10-20T17:38:33Z,952,BOOKKEEPER-952: Fix RegionAwareEnsemblePlacementPolicy  allocate bookies evenly as much as possible across all regions  https://issues.apache.org/jira/browse/BOOKKEEPER-952  RB_ID=880463  Author: Yiming Zang <yzang@twitter.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #61 from yzang/apache_master and squashes the following commits:  a0a9979 [Yiming Zang] fix Inefficient use of keySet iterator instead of entrySet iterator d882c28 [Yiming Zang] fix RegionAwareEnsemblePlacementPolicy test case fix the algorithm for balanced placement across regions.
2016-10-13T07:47:11Z,19,DL-32: Fix Findbug warnings  - Bump the version to 3.0.3 - Fix all the findbug warnings - Enable findbugs:check on travis ci  Author: Jon Derrick <jonathan.derrickk@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #19 from jderrickk/jd/fix_findbugs_error and squashes the following commits:  c48c89c [Jon Derrick] Merge branch 'master' into jd/fix_findbugs_error d9b0425 [Jon Derrick] verify findbugs on travis ci 985501b [Jon Derrick] Fix findbug errors on all modules 18e8267 [Jon Derrick] Remove distributedlog-example ffa8361 [Jon Derrick] Fix findbugs in distributedlog-protocol
2016-10-13T07:47:11Z,19,DL-32: Fix Findbug warnings  - Bump the version to 3.0.3 - Fix all the findbug warnings - Enable findbugs:check on travis ci  Author: Jon Derrick <jonathan.derrickk@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #19 from jderrickk/jd/fix_findbugs_error and squashes the following commits:  c48c89c [Jon Derrick] Merge branch 'master' into jd/fix_findbugs_error d9b0425 [Jon Derrick] verify findbugs on travis ci 985501b [Jon Derrick] Fix findbug errors on all modules 18e8267 [Jon Derrick] Remove distributedlog-example ffa8361 [Jon Derrick] Fix findbugs in distributedlog-protocol
2016-10-13T07:27:18Z,924,BOOKKEEPER-924: addEntry() is susceptible to spurious wakeups  Use Java8 CompletableFuture instead of SyncCounter  Author: eolivelli <eolivelli@gmail.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #60 from eolivelli/BOOKKEEPER-924 and squashes the following commits:  61e6b1a [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups 7d7eaf7 [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups f865610 [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups e75569a [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups cdd32c3 [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups
2016-10-13T05:50:42Z,612,BOOKKEEPER-612: Region aware placement  - Introduce the concept of a two level Network Topology with region as the first level and rack as the second level - NodeBase  Node and NetworkTopology manage this two level hierarchy and position of individual nodes in this hierarchy - An implementation of RegionawareEnsemblePlacementPolicy that distributes nodes across regions and within regions uses rack aware placement to place nodes  This is a stacked diff (opening to start a review)  we would still merge the dependent pull request first.  Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #56 from robindh/RegionAwarePlacement
2016-09-13T01:51:44Z,25,Add infinite retry policy to zookeeper client used by tests  This change is to improve the tests running on travis ci  Author: jiazhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #25 from jiazhai/zhaijia/fix_federated_namespace
2016-09-10T19:01:27Z,945,BOOKKEEPER-945: Add counters to track the activity of auditor and repl…  …ication workers  Once we enable auto recovery  auditor and replication workers start their activity. Today there is no way to monitor it using counters. This change introduces the following counters to track various activities of auditor and replication workers like:  - Time taken by auditor to build the bookie->ledger list - No. of under replicated ledgers detected - Time taken by auditor to publish the under replicated ledger list - Time taken by auditor to check all the ledgers in the cluster - No. of ledgers replicated by each replication worker - No. of entries and bytes of data read and written by each replication worker - Auditor can also report the distribution of ledgers within the cluster: how many bookies own a piece of ledger  etc.  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #57 from rithin-shetty/auto_recovery_counters
2016-09-10T18:27:43Z,930,BOOKKEEPER-930: Option to disable Bookie networking  Author: eolivelli <eolivelli@gmail.com>  Reviewers: sijie@apache.org <sijie@apache.org>  Closes #49 from eolivelli/BOOKKEEPER-930
2016-09-07T08:38:27Z,20,Mark some dl tests as flaky  mark some dl tests as flaky and link the corresponding investigation jiras  Author: jiazhai <zhaijia03@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #20 from jiazhai/zhaijia/fix_travis_build
2016-08-27T04:09:07Z,14,DL-36: travis ci build failed with assembly plugin  - use 'mvn package' instead of 'mvn verify' - fix the assembly script - added missed license headers  Author: Jon Derrick <jonathan.derrickk@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #14 from jderrickk/jd/fix_assembly_package
2016-08-23T01:05:39Z,9,DL-31: Provide flag to disable zk based distributed lock  DL doesn't enforce any leader election. However it still provides a zookeeper ephemeral znode based lock for leader election. It is unnecessary if applications use core library directly already have its own leader election mechanism.  This change is to provide a flag to allow disable the zk based lock.  Author: Sijie Guo <sijieg@twitter.com>  Reviewers: Leigh Stewart <lstewart@apache.org>  Closes #9 from sijie/sijie/flag_to_disable_lock
2016-08-23T01:00:13Z,10,DL-1: Clean up the distributedlog pom files  - changed the version to 0.4.0-incubating - changed names to include 'Apache DistributedLog' and use '::' as separator - add developers  mail lists and jira  Author: jiazhai <zhaijia03@gmail.com>  Reviewers: Franck Cuny <franck.cuny@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #10 from jiazhai/zhaijia/fix_apache_version
2016-08-23T01:00:13Z,10,DL-1: Clean up the distributedlog pom files  - changed the version to 0.4.0-incubating - changed names to include 'Apache DistributedLog' and use '::' as separator - add developers  mail lists and jira  Author: jiazhai <zhaijia03@gmail.com>  Reviewers: Franck Cuny <franck.cuny@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #10 from jiazhai/zhaijia/fix_apache_version
2016-08-16T19:02:06Z,5,DL-21: Fix DL flaky test cases  DL-21: Fixed a few DL flaky test cases.  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #5 from yzang/yzang/fix_flaky_test
2016-08-16T17:42:13Z,937,BOOKKEEPER-937: Upgrade protobuf to 2.6  protobuf/protoc 2.4 cannot be installed with brew on mac and building it on mac always result is build errors hence leaves an option of switching to linux to run protoc. I upgraded to 2.6 instead. It is compatible with 2.4 on the wire and shaded so should not create any problems. All tests passed. Please ignore changes in java files in attached patch during review; these are auto-generated.  protobuf 2.4 in compat* dependencies is shaded now to not conflict with 2.6.  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: eolivelli@gmail.com <eolivelli@gmail.com>  zhaijia03@gmail.com <zhaijia03@gmail.com>  sijie@apache.org <sijie@apache.org>  Closes #51 from dlg99/task/BOOKKEEPER-937
2016-08-01T06:04:09Z,938,BOOKKEEPER-938 ledger digestType autodetection on open  Currently digestType verification in LedgerOpenOp seems to be treated as part of security logic. Since it is checked after password and error explicitly states that digestType mismatched  all that evil hacker has to do is to change digest type to another one. There are only two of them after all.  here is the scenario significantly affected by current behavior:  1. user rolls out clients with digestType set to MAC and creates lots of ledgers. 2. user notices that MAC is slower than CRC32 and decides to change digestType. 3. more ledgers created with CRC32. 4. user tries to read old and new ledgers -> now old ledgers cannot be read because of the digest type mismatch.  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #52 from dlg99/fix/BOOKKEEPER-938-digest-autodetect
2016-07-31T07:57:41Z,4,DL-20: Validate bk read timeout in configuration  DL-20: Ensure bkcReadTimeoutSeconds is larger than readLACLongPollTimeout  Author: Yiming Zang <yzang@twitter.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #4 from yzang/yzang/validate_configuration
2016-07-31T05:56:28Z,941,BOOKKEEPER-941: Feature Switches for controling client and server behavior  - Introduce Features that are dynamic configuration options - Allow specifying Features as configuration parameters  This is a port of the feature switches following changes https://github.com/twitter/bookkeeper/commit/c2a092ab9b585f1d30d9e9b9dead0533efa49855 https://github.com/twitter/bookkeeper/commit/f9762d126e311a6b129e6e169dc62c2a0bdb7b4a  Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  Closes #54 from robindh/FeatureSwitches
2016-07-31T05:53:28Z,933,BOOKKEEPER-933: ClientConfiguration always inherits System properties  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #50 from eolivelli/BOOKKEEPER-933 and squashes the following commits:  0bcae1e [eolivelli] BOOKKEEPER-933 ClientConfiguration always inherits System properties beb68fb [eolivelli] BOOKKEEPER-933 ClientConfiguration always inherits System properties
2016-07-25T22:22:34Z,927,BOOKKEEPER-927: LedgerHandleAdv to handle disabled ledgers operation …  …throttling  BOOKKEEPER-886 missed taking care of LedgerHandleAdv. This takes care of that issue.  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #45 from jvrao/bookkeeper-927
2016-07-14T21:02:33Z,940,BOOKKEEPER-940: Fix findbugs warnings after bumping to java 8  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  Closes #55 from eolivelli/BOOKKEEPER-940
2016-07-11T22:19:33Z,939,BOOKKEEPER-939: Fix typo of bookkeeper merge pr script  There is typo of bk-merge-pr.py script on merging pr without a jira id.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #53 from sijie/sijie/fix_merge_script
2016-07-11T21:06:34Z,932,BOOKKEEPER-932: Move to JDK 8  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #48 from merlimat/bk-932
2016-07-11T21:01:30Z,922,BOOKKEEPER-922: CreaterId in ledger metadata  Introduces a generic Map<String  byte[]> customMetadata to be stored as part of ledger metadata on the metadata server(zk).  Author: Rithin Shetty <rithingmail.com>  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Sijie Guo <sijie@apache.org>  Closes #46 from rithin-shetty/JIRA-922-ledgerCustomMetadata
2016-07-11T20:53:23Z,908,BOOKKEEPER-908: BKLedgerExistException creation is missing  Add missing case statement for Code.LedgerExistException in the crearte() function of BKException class  Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>  Author: JV <vjujjuri@salesforce.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #44 from jvrao/bookkeeper-908
2016-07-11T18:54:15Z,43,A few changes to the shell scripts to start bookies  Author: Franck Cuny <franckcuny@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #43 from franckcuny/fcuny/scripts-start-server
2016-07-11T06:41:06Z,42,Add executions for maven-assembly-plugin.  Add the executions steps to produce a single archive with all the jars  scripts and configuration files.  Author: Franck Cuny <fcuny@twitter.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #42 from franckcuny/fcuny/maven-assembly
2016-06-24T15:02:39Z,,Merge remote-tracking branch 'origin/master' into dockerize
2016-06-24T01:46:29Z,34,Vagrant based solution to create multi-node deployment (#34)  * Added vagrant files to start 3 ZK nodes and 3 BK nodes with writeproxy    * Removed comments    * Setting env vars for writeproxy    * Got it working for proxy and normal writes    * Fixing minor bugs    * Updated with comments on the pull request    * Creating a docker file which calls into the vagrant bookkeeper script    * Updated to the public version of twitter bookkeeper
2016-06-08T23:04:54Z,881,BOOKKEEPER-881: Upgrade surefire plugin to 2.19.1  Upgrade to using maven surefire plugin version 2.19.1  Author: Rithin Shetty <rithingmail.com>  Author: Rithin <rithin.shetty@salesforce.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #47 from rithin-shetty/surefire-upgrade
2016-05-26T17:08:24Z,,Added vagrant files to start 3 ZK nodes and 3 BK nodes with writeproxy
2016-05-24T10:20:34Z,,Add documents on running distributedlog in distributed mode
2016-05-13T02:18:32Z,14,Fixes #14: remove concurrency from ConfigurationSubscription tests (#16)
2016-05-09T19:06:08Z,,Initial Check-in for distributedlog oss
2016-05-09T19:06:08Z,,Initial Check-in for distributedlog oss
2016-05-05T16:22:09Z,,Bump version to 4.5.0-SNAPSHOT
2016-05-05T16:21:51Z,,Updated CHANGES.txt for release 4.4.0
2016-05-04T13:55:46Z,926,BOOKKEEPER-926: Compacted entries are not properly synced before updating index  …ting index  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Guo Sijie <sijie@apache.org>  Closes #41 from merlimat/bk-926
2016-04-29T03:05:37Z,925,BOOKKEEPER-925: Fix FindBugs discovered issues in master  sijie Fixed the other findbugs error  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Guo Sijie <sijie@apache.org>  Closes #40 from merlimat/bk-925
2016-04-27T19:11:27Z,925,BOOKKEEPER-925: Fix FindBugs discovered issues in master  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Siddharth Boobna <siddharth.boobna@gmail.com>  Guo Sijie <sijie@apache.org>  Closes #39 from merlimat/bk-925
2016-04-27T08:05:23Z,921,BOOKKEEPER-921: Typo in LocalBookkeeper: Use InetAddress.getHostAddress instead of InetAddress
2016-04-27T07:55:19Z,895,BOOKKEEPER-895: GC ledgers that are no longer a part of the ensemble  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Guo Sijie <sijie@apache.org>  Closes #25 from sboobna/BOOKKEEPER-895
2016-04-27T07:30:36Z,37,Auditor is sometimes marking as failed a bookie switching from available to read-only mode  …hing from available to read-only mode  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Enrico Olivelli <eolivelli@gmail.com>  Guo Sijie <sijie@apache.org>  Closes #37 from merlimat/bk-919
2016-04-27T07:07:08Z,920,BOOKKEEPER-920: Extend bk-merge-pr.py to add more info to Jira ticket…  … when merging  Author: user.email <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #36 from merlimat/bk-920
2016-04-27T07:00:34Z,911,BOOKKEEPER-911: Fix TestReplicationWorker tests in master  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Flavio Junqueira <fpj@apache.org>  Closes #29 from merlimat/bk-911
2016-04-13T22:51:44Z,870,BOOKKEEPER-870: Change the default value for bookie settings.  - ENTRY_LOG_SIZE_LIMIT to 1GB - increase GC_WAIT_TIME to 10 minutes  since 1 second isn't good for a real production environment - FLUSH_INTERVAL to 10 second. lowering this value won't help since the actual checkpoint only happened on entry log file rolling - OPEN_FILE_LIMIT to 20000. - JOURNAL_MAX_GROUP_WAIT_MSEC to 2 ms. make the default value for low latency - READ_ONLY_MODE_ENABLED to true. enable readonly mode by default.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #35 from sijie/sijie/BOOKKEEPER-870
2016-04-10T03:58:40Z,917,BOOKKEEPER-917: LocalBookKeeperTest seems to be silently failing  Fixing the `AuthHandler` to use localhost address when passed a `LocalChannel`  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #34 from merlimat/bk-917
2016-04-10T03:19:58Z,913,BOOKKEEPER-913: Fix flakiness in TestBackwardCompat  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #31 from merlimat/bk-913
2016-04-08T17:43:09Z,880,BOOKKEEPER-880: Make LedgerHandle implement AutoCloseable  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Rakesh R <rakeshr.radhakrishnan.potty@intel.com>  Closes #33 from eolivelli/BOOKKEEPER-880
2016-04-07T19:39:46Z,914,BOOKKEEPER-914: ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly is intermettently failing  BOOKKEEPER-914 fixed testBookieShouldTurnWritableFromReadOnly flapping. Now test waits for bookie to transition to read-only.  Author: Andrey Yegorov <ayegorov@salesforce.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Sijie Guo <sijie@apache.org>  Closes #32 from dlg99/bugfix/BOOKKEEPER-914
2016-04-06T16:38:15Z,904,BOOKKEEPER-904: BookieInitializationTest.testDuplicateBookieServerStartup fails on non-english machines  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #30 from eolivelli/master
2016-04-05T19:53:42Z,910,BOOKKEEPER-910: In LocalBookkeeper  Zookeeper server and client use different host addresses  Author: Arun M. Krishnakumar <akrishnakumar@salesforce.com>  Reviewers: Matteo Merli <mmerli@apache.org>
2016-04-05T16:47:07Z,896,BOOKKEEPER-896: VM-local transport  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Matteo Merli <mmerli@apache.org>  Closes #21 from eolivelli/BOOKKEEPER-896
2016-04-05T06:50:37Z,578,BOOKKEEPER-578: LedgerCacheImpl is reserving 1/3 of Heap size but allocates NonHeap memory  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #28 from merlimat/bk-578
2016-04-05T06:45:51Z,901,BOOKKEEPER-901: Authentication framework  Author: Ivan Kelly <ivank@yahoo-inc.com>  Reviewers: Sijie Guo<sijie@apache.org>  Closes #23 from merlimat/authentication-framework and squashes the following commits:  aa01548 [Ivan Kelly] BOOKKEEPER-901: Add an authentication framework f930fbd [Ivan Kelly] BOOKKEEPER-794 BookkeeperProtocol.Response.status is completely ignored
2016-03-31T20:53:30Z,909,BOOKKEEPER-909: ZooKeeper of LocalBookkeeper should use the correct tickTime  Reviewers: Matteo Merli <mmerli@apache.org>
2016-03-16T04:03:33Z,894,BOOKKEEPER-894: add command to read ledger entries form shell  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #24 from sboobna/BOOKKEEPER-894
2016-03-16T03:51:00Z,594,BOOKKEEPER-594: AutoRecovery shutting down on SyncDisconnected  Author: Matteo Merli <matteo.merli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #26 from merlimat/bk-594
2016-03-16T03:43:54Z,769,BOOKKEEPER-769: Remove the Hedwig Code  - Remove code directories for Hedwig code - Remove code directories under compat - Remove Hedwig related documentation - Remove references to Hedwig code in pom files  * There is an unrelated findbugs violation in BookieWatcher which is not related to this change * There were flaky tests that failed locally but passed when I reran them  Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #27 from robindh/RemoveHedwig
2016-03-14T05:39:15Z,902,BOOKKEEPER-902: Test failures in EntryLogTest  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #22 from merlimat/bk-902
2016-03-08T06:18:12Z,898,BOOKKEEPER-898: listen to read only bookie changes also in auditor  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #19 from sboobna/BOOKKEEPER-898
2016-03-08T06:16:03Z,900,read only bookie runs replicator and does not release the under replicated lock after failing  … only bookie  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #17 from sboobna/BOOKKEEPER-900
2016-03-08T06:14:10Z,899,Bookie should return to read-write mode once the disk usage drops before the threshold  …o read only mode  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #18 from sboobna/BOOKKEEPER-899
2016-03-08T06:06:40Z,889,BookKeeper client should try not to use bookies with errors/timeouts when forming a new ensemble  …hen forming ensembles  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #11 from sboobna/BOOKKEEPER-889
2016-03-08T05:49:52Z,851,BOOKKEEPER-851: Configurable LedgerStorage implementation  sijie Addressed almost all comments from https://reviews.apache.org/r/33096  Only point still open is how to treat the `SortedLedgerStorage` and the flag `sortedLedgerStorageEnabled=true` in the config file  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #6 from merlimat/bk-851-configurable-ledger-storage
2016-02-23T23:44:31Z,841,BOOKKEEPER-841: Bookie should calculate ledgers map writing a new entry log file  sijie I've addressed all comments from https://reviews.apache.org/r/33061  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #5 from merlimat/bk-841
2016-02-23T23:34:30Z,897,BOOKKEEPER-897: Fix findbugs warnings and missing apache license header  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #15 from sijie/sijie/BOOKKEEPER-897
2016-02-23T18:16:06Z,879,BOOKKEEPER-879: Record ledger creation time  Author: eolivelli <eolivelli@gmail.com>  Reviewers: Sijie Guo <sijie@apache.org>  Flavio Junqueira <fpj@apache.org>  Closes #2 from eolivelli/master and squashes the following commits:  509ad4f [eolivelli] BOOKKEEPER-879: Record ledger creation time 227d50c [eolivelli] BOOKKEEPER-879: Record ledger creation time 94cdee6 [eolivelli] BOOKKEEPER-879: Record ledger creation time 2a8e700 [eolivelli] BOOKKEEPER-879: Record ledger creation time c43f0b4 [eolivelli] BOOKKEEPER-879: Record ledger creation time e33f2e0 [eolivelli] BOOKKEEPER-879: Record ledger creation time
2016-02-09T07:39:50Z,891,BOOKKEEPER-891: Read entries failure should trigger callback only once  When reading multiple entries with `LedgerHandle.asyncReadEntries()`  in case there is a read error  the callback is currently being invoked for each of the requested entries. Since a single "success" callback is expected  we should also have a single "failure" callback invocation.  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #12 from merlimat/bk-891-read-callbacks
2016-02-09T07:37:03Z,893,BOOKKEEPER-893: explicitly call bk shutdown to set the exit code  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #14 from sid825/BOOKKEEPER-893
2016-02-09T07:32:28Z,886,BOOKKEEPER-886: Allow to disable ledgers operation throttling  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #7 from merlimat/bk-886-disable-throttling
2016-02-09T07:30:29Z,888,BOOKKEEPER-888: Dispatch individual callbacks from journal in different threads  Currently the journal is sending all the responses from a single thread  after the entries in a batch are synced. Since a thread pool has been configured  it is better to spread the send-response tasks to all the available threads.  Author: Matteo Merli <mmerli@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #8 from merlimat/bk-888
2016-02-09T07:28:09Z,892,BOOKKEEPER-892: Bookie sanity test  Author: Siddharth Boobna <sboobna@yahoo-inc.com>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #13 from sid825/BOOKKEEPER-892
2016-02-09T07:23:34Z,890,BOOKKEEPER-890: Concurrent modification exception when removing listener in…  … Bookkeeper ZK ledger manager  Author: Matteo Merli <mmerli@apache.org>  Reviewers: Sijie Guo <sijie@apache.org>  Closes #9 from merlimat/bk-890-concurrent-modification
2016-02-09T07:12:03Z,883,BOOKKEEPER-883: Test timeout in bookkeeper-benchmark  Problem:  The BenchReadThroughputLatency is tight with FlatLedgerManager. so lots of assumptions are made based on how the znodes are changed when ledgers are created. There was a change introduced LedgerIdGenerator  which broke the assumptions that made by BenchReadThroughputLatency.  Fix:  - Use a hashset to cache processed ledgers on reacting on children changes - Remove unpredictable test on next ledger - Fix an error logging on FlatLedgerManager processing ledgers  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #10 from sijie/BOOKKEEPER-883
2016-01-26T21:11:04Z,855,BOOKKEEPER-855: handle session expire event in bookie (sijie)  This change is to retry bookie registration when zookeeper session expired.  Author: Sijie Guo <sijie@apache.org>  Reviewers: Ivan Kelly <ivank@apache.org>  Matteo Merli <mmerli@apache.org>  Closes #1 from sijie/sijie/BOOKKEEPER-855
2016-01-24T17:39:50Z,885,BOOKKEEPER-885: Script to merge github pull request (sijie via mmerli)  Utility for creating well-formed pull request merges and pushing them to Apache. A modified version based on Spark project (https://github.com/apache/spark/blob/master/dev/merge_spark_pr.py)  Author: Sijie Guo <sijie@apache.org>  Reviewers: Matteo Merli <mmerli@apache.org>  Closes #4 from sijie/sijie/BOOKKEEPER-885
2016-01-22T05:19:02Z,877,BOOKKEEPER-877: Script for generating patch for reviews (sijie)
2015-10-22T07:24:14Z,867,BOOKKEEPER-867: New Client API to allow applications pass-in EntryId. (Venkateswararao Jujjuri via sijie) (missing CHANGES.txt)
2015-10-22T07:22:36Z,867,BOOKKEEPER-867: New Client API to allow applications pass-in EntryId. (Venkateswararao Jujjuri via sijie)
2015-10-16T05:00:57Z,866,BOOKKEEPER-866: Fix compile issue when Updating junit to latest release version( 4.12) in the test of  Bookkeeper-server. (Jia Zhai via sijie)
2015-10-10T16:38:11Z,872,BOOKKEEPER-872: Resource leak with unclosed LedgerManager in HierarchicalLedgerManagerFactory#format() (Ted Yu via sijie)
2015-10-06T09:12:15Z,826,BOOKKEEPER-826: PendingAddOp is ignoring ack response after meet ack quorum constraint (sijie)
2015-10-06T08:48:46Z,868,BOOKKEEPER-868: Add ADD_ENTRY quorum timeout (Leigh Stewart via sijie)
2015-10-06T08:05:18Z,862,BOOKKEEPER-862: Add tracing and stats to OrderedSafeExecutor for debugging slow tasks (Leigh Stewart via sijie)
2015-09-15T08:38:26Z,438,BOOKKEEPER-438: Move ledger id generation out of LedgerManager (Tong Yu via sijie)
2015-09-07T15:58:26Z,802,BOOKKEEPER-802: Bookkeeper protocol documentation (ivank via sijie)
2015-08-12T02:00:52Z,863,BOOKKEEPER-863: Potential resource leak with unclosed LedgerManager in BookieShell (Ted Yu via sijie)
2015-07-28T11:44:30Z,760,BOOKKEEPER-760: Don't close PCBC proactively if bookies disappeared from zookeeper znodes (sijie via fpj)
2015-07-16T06:28:46Z,687,BOOKKEEPER-687: Use static final Logger for hedwig related modules (Ankur Garg via sijie)
2015-07-10T20:48:59Z,796,BOOKKEEPER-796: Make bookkeeper client use reconnectable zookeeper wrapper (sijie via fpj)
2015-07-07T06:24:26Z,823,BOOKKEEPER-823: Clean up temp files created by hedwig tests (Jia Zhai via sijie)
2015-06-02T06:02:06Z,858,BOOKKEEPER-858: Fix broken links and typos in bookkeeper documents (Youngjoon Kim via sijie)
2015-05-20T06:20:04Z,821,BOOKKEEPER-821: Failing to write lastId to ledger directories should not fail startup of bookies (zhaijia via sijie)
2015-05-20T04:15:45Z,854,BOOKKEEPER-854: NPE on InterleavedLedgerStorage.onRotateEntryLog (sijie)
2015-05-19T07:42:23Z,835,BOOKKEEPER-835: Update copyright for 2015 on all active branches (sijie) (missing CHANGES.txt file)
2015-05-19T07:36:14Z,835,BOOKKEEPER-835: Update copyright for 2015 on all active branches
2015-04-21T08:19:24Z,846,BOOKKEEPER-846: TestLedgerChecker times out (rakeshr via sijie)
2015-04-21T08:02:38Z,833,BOOKKEEPER-833: EntryLogId and EntryLogLimit should not be larger than Integer.MAX_VALUE (sijie)
2015-04-21T07:55:03Z,836,BOOKKEEPER-836: disable compaction when disk becomes full  otherwise compaction will fill up disk quickly (zhaijia via sijie)
2015-04-21T07:44:52Z,695,BOOKKEEPER-695: Some entry logs are not removed from the bookie storage (Matteo Merli via sijie)
2015-04-21T07:39:31Z,848,BOOKKEEPER-848: Use volatile for lastAddConfirmed (Matteo Merli via sijie)
2015-04-21T07:35:22Z,847,BOOKKEEPER-847: ArrayIndexOutOfBoundsException in LedgerFragmentReplicator::updateEnsembleInfo (zhaijia via sijie)
2015-04-21T07:23:48Z,850,BOOKKEEPER-850: Use nanoseconds to calculate poll timeout when doing group commit (Matteo Merli via sijie)
2015-04-21T07:17:45Z,849,BOOKKEEPER-849: Collect stats with sub-milliseconds precision (Matteo Merli via sijie)
2015-03-18T06:41:02Z,844,BOOKKEEPER-844: Add more metrics about latency and bytes characteristics on bookie operations (Tong Yu via sijie) (missing file)
2015-03-18T06:38:24Z,844,BOOKKEEPER-844: Add more metrics about latency and bytes characteristics on bookie operations (Tong Yu via sijie)
2015-03-18T06:31:32Z,834,BOOKKEEPER-834: test case error in test class TestDiskChecker (zhaijia via sijie)
2015-03-18T06:18:10Z,828,BOOKKEEPER-828: Script for updating docs on website from master branch (ivank via sijie)
2015-03-18T05:23:37Z,840,BOOKKEEPER-840: Deadlock on flushLock on compaction (sijie)
2015-03-12T07:56:42Z,831,BOOKKEEPER-831: Outdated links in tutorial (ivank via sijie)
2015-03-12T07:37:20Z,837,BOOKKEEPER-837: UpdateLedgerOp - Replace AbstractFuture with SettableFuture (rakeshr via sijie)
2015-03-12T07:21:29Z,839,BOOKKEEPER-839: AuditorPeriodicCheckTest timeout (rakeshr via sijie)
2015-02-23T07:11:31Z,838,BOOKKEEPER-838: ForceWriteThread::run() leaks “logFile.close()” when interrupt comes (zhaijia via sijie)
2015-01-19T21:01:43Z,830,BOOKKEEPER-830: Documentation has no structure (ivank via fpj)
2015-01-16T14:57:03Z,827,BOOKKEEPER-827 change throttle in GarbageCollector to use either "by entry" or "by byte" (Jia Zhai via fpj)
2015-01-13T12:06:18Z,634,BOOKKEEPER-634: Provide admin tool to rename bookie identifier in ledger metadata (rakeshr via ivank)
2015-01-12T14:18:55Z,832,BOOKKEEPER-832: Allow starting bookie in ReadOnly mode (zhaijia via ivank)
2014-12-12T11:14:32Z,803,BOOKKEEPER-803: Guide for making a replicated log out of ledgers (ivank)
2014-12-12T11:11:03Z,801,BOOKKEEPER-801: Bookkeeper client tutorial (ivank)
2014-12-10T18:43:24Z,814,BOOKKEEPER-814: clean up temp files that generated by test cases. (zhaijia via ivank)
2014-12-09T18:57:43Z,795,BOOKKEEPER-795: Race condition causes writes to hang if ledger is fenced (sijie via ivank)
2014-12-06T07:03:13Z,811,BOOKKEEPER-811: Recovery tool doesn't remove cookie after recovering one bookie (Charles Xie via sijie)
2014-12-06T06:54:41Z,810,BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)
2014-12-06T06:47:33Z,813,BOOKKEEPER-813: BookieShell doesn't find index directory (Charles Xie via sijie)
2014-12-06T06:38:44Z,804,BOOKKEEPER-804: Client program is not terminated when using openLedgerNoRecovery (ivank via sijie)
2014-12-06T06:26:19Z,820,BOOKKEEPER-820: print out fi.isFenced() in BookieShell (zhaijia via sijie)
2014-12-06T06:13:19Z,809,BOOKKEEPER-809: Wrong metric on LedgerDeleteOp and LedgerOpenOp (Charles Xie via sijie) (missing CHANGES.txt)
2014-12-06T06:12:29Z,805,BOOKKEEPER-805: NullPointException in bookie server when using twitter-ostrich-provider (Youngjoon Kim via sijie) (missing CHANGES.txt)
2014-12-06T06:05:19Z,809,BOOKKEEPER-809: Wrong metric on LedgerDeleteOp and LedgerOpenOp (Charles Xie via sijie)
2014-12-06T05:54:19Z,805,BOOKKEEPER-805: NullPointException in bookie server when using twitter-ostrich-provider (Youngjoon Kim via sijie)
2014-12-05T16:51:16Z,799,BOOKKEEPER-799: Distribution schedule coverage sets don't take gaps in response lists into account when writequorum > ackquorum (ivank)
2014-12-05T13:10:20Z,800,BOOKKEEPER-800: Expose whether a ledger is closed or not (ivank)
2014-12-04T11:28:25Z,815,BOOKKEEPER-815: Ledger fence state is lost when the ledger file is evicted (Charles Xie via ivank)  Change-Id: I7de7a893043f1304b75d7545899ec5b022148e6b
2014-11-19T17:00:11Z,797,BOOKKEEPER-797: IllegalArgumentException when calling CodahaleOpStatsLogger#toOpStatsData()  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1640597 13f79535-47bb-0310-9956-ffa450edef68
2014-10-15T05:27:01Z,793,BOOKKEEPER-793: Move to java 7  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1631943 13f79535-47bb-0310-9956-ffa450edef68
2014-10-14T08:49:20Z,,Add JNA license in NOTICE files  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1631683 13f79535-47bb-0310-9956-ffa450edef68
2014-10-14T08:47:10Z,,Update README to reflect bookkeeper modules  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1631681 13f79535-47bb-0310-9956-ffa450edef68
2014-10-03T07:30:30Z,,Bump version number to 4.4.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1629127 13f79535-47bb-0310-9956-ffa450edef68
2014-10-03T07:21:37Z,,Preparing for release 4.3.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1629124 13f79535-47bb-0310-9956-ffa450edef68
2014-09-29T14:29:22Z,773,BOOKKEEPER-773: Provide admin tool to rename bookie identifier in Cookies (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1628193 13f79535-47bb-0310-9956-ffa450edef68
2014-09-23T15:53:40Z,787,BOOKKEEPER-787: Modify Cookie by removing 'znodeVersion' state/field (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1627068 13f79535-47bb-0310-9956-ffa450edef68
2014-09-22T10:11:35Z,786,BOOKKEEPER-786: Fix Findbugs Error In Codahale Stats Provider (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1626721 13f79535-47bb-0310-9956-ffa450edef68
2014-09-18T04:57:17Z,782,BOOKKEEPER-782: Use builder pattern for Cookie (rakeshr via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625888 13f79535-47bb-0310-9956-ffa450edef68
2014-09-18T04:53:21Z,784,BOOKKEEPER-784: BookKeeperCloseTest#testLedgerCheck is failing intermittently (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625886 13f79535-47bb-0310-9956-ffa450edef68
2014-09-18T04:47:22Z,785,BOOKKEEPER-785: Fix javadoc warnings in trunk (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625885 13f79535-47bb-0310-9956-ffa450edef68
2014-09-17T14:32:48Z,783,BOOKKEEPER-783: Avoid running out of fds in MutlipleThreadReadTest (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625611 13f79535-47bb-0310-9956-ffa450edef68
2014-09-10T22:41:28Z,775,BOOKKEEPER-775: Improve MultipleThreadReadTest to reduce flakiness (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1624161 13f79535-47bb-0310-9956-ffa450edef68
2014-09-09T10:40:01Z,776,BOOKKEEPER-776: Flaky test BookieRecoveryTest (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1623741 13f79535-47bb-0310-9956-ffa450edef68
2014-09-09T09:03:00Z,781,BOOKKEEPER-781: Fix OOM on Hedwig Tests (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1623713 13f79535-47bb-0310-9956-ffa450edef68
2014-09-09T03:57:10Z,778,BOOKKEEPER-778: Flake in TestTryReadLastConfirmed (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1623618 13f79535-47bb-0310-9956-ffa450edef68
2014-09-06T05:58:47Z,736,BOOKKEEPER-736: Stats for AutoRecovery (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622832 13f79535-47bb-0310-9956-ffa450edef68
2014-09-06T05:51:08Z,718,BOOKKEEPER-718: AuditorLedgerCheckerTest is flakey (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622830 13f79535-47bb-0310-9956-ffa450edef68
2014-09-06T05:27:02Z,779,BOOKKEEPER-779: jmx reporter for codahale metrics provider (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622828 13f79535-47bb-0310-9956-ffa450edef68
2014-09-06T05:13:53Z,777,BOOKKEEPER-777: Flake in LedgerCloseTest (ivank via fpj)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622827 13f79535-47bb-0310-9956-ffa450edef68
2014-09-04T21:49:31Z,780,BOOKKEEPER-780: Findbug issue in trunk (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622568 13f79535-47bb-0310-9956-ffa450edef68
2014-08-19T08:32:23Z,704,BOOKKEEPER-704: reconnectable zookeeper client wrapper (sijie via ivank) [missing file]  Change-Id: I46cf3237ec5e1998039fedee9d127752c1389a73  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1618817 13f79535-47bb-0310-9956-ffa450edef68
2014-08-18T21:03:41Z,630,BOOKKEEPER-630: Add tag to o.a.b.net.* to indict which release of hadoop they came from  move DNS to o.a.b.net.* and indent (sijie via ivank)  Change-Id: I9dd16912da6f23543d069434e9419495fdf8f314  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1618737 13f79535-47bb-0310-9956-ffa450edef68
2014-08-18T21:00:15Z,704,BOOKKEEPER-704: reconnectable zookeeper client wrapper (sijie via ivank)  Change-Id: I00c73788f4ed5911713906b4d7622ca6dcec79a5  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1618732 13f79535-47bb-0310-9956-ffa450edef68
2014-08-14T06:15:59Z,774,BOOKKEEPER-774: Flaky test org.apache.bookkeeper.test.ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1617888 13f79535-47bb-0310-9956-ffa450edef68
2014-08-06T04:48:42Z,697,BOOKKEEPER-697: stats collection on bookkeeper server (sijie via fpj) (missing file)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1616094 13f79535-47bb-0310-9956-ffa450edef68
2014-08-02T18:02:06Z,,BOOKEEPER-697. stats collection on bookkeeper server (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1615338 13f79535-47bb-0310-9956-ffa450edef68
2014-07-26T06:51:52Z,582,BOOKKEEPER-582: Make bookie and client use protobuf for requests (non-wire part) (missing files) (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1613567 13f79535-47bb-0310-9956-ffa450edef68
2014-07-24T22:34:19Z,582,BOOKKEEPER-582: Make bookie and client use protobuf for requests (non-wire part) (sijie via fpj)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1613315 13f79535-47bb-0310-9956-ffa450edef68
2014-07-23T23:41:19Z,739,BOOKKEEPER-739: Test timeouts mostly ignored (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1612972 13f79535-47bb-0310-9956-ffa450edef68
2014-07-15T07:09:21Z,768,BOOKKEEPER-768: fix typo seconds to milliseconds in benchmark output (jialin via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1610596 13f79535-47bb-0310-9956-ffa450edef68
2014-06-10T10:01:45Z,765,BOOKKEEPER-765 bookkeeper script should fall back to java in path if JAVA_HOME is not set (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1601592 13f79535-47bb-0310-9956-ffa450edef68
2014-06-06T13:29:47Z,767,BOOKKEEPER-767: Allow loopback in tests (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1600881 13f79535-47bb-0310-9956-ffa450edef68
2014-06-05T10:56:29Z,766,BOOKKEEPER-766: Update notice.txt files to include 2014 (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1600594 13f79535-47bb-0310-9956-ffa450edef68
2014-06-03T10:35:13Z,746,BOOKKEEPER-746: 5 new shell commands. List ledgers  list metadata  list underreplicated  show auditor and simpletest (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1599470 13f79535-47bb-0310-9956-ffa450edef68
2014-06-02T09:54:03Z,745,BOOKKEEPER-745: Fix for false reports of ledger unreplication during rolling restarts. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1599145 13f79535-47bb-0310-9956-ffa450edef68
2014-05-30T13:07:14Z,751,BOOKKEEPER-751: Ensure all the bookkeeper callbacks not run under ledger handle lock (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1598585 13f79535-47bb-0310-9956-ffa450edef68
2014-05-30T12:01:34Z,758,BOOKKEEPER-758: Add TryReadLastAddConfirmed API (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1598565 13f79535-47bb-0310-9956-ffa450edef68
2014-05-30T10:41:47Z,763,BOOKKEEPER-763: findbugs fails to run on jenkins (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1598541 13f79535-47bb-0310-9956-ffa450edef68
2014-05-27T11:56:01Z,756,BOOKKEEPER-756: Use HashedwheelTimer for request timeouts for PCBC (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1597752 13f79535-47bb-0310-9956-ffa450edef68
2014-05-23T16:48:11Z,750,BOOKKEEPER-750. Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank via fpj)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1597125 13f79535-47bb-0310-9956-ffa450edef68
2014-05-23T16:46:05Z,750,BOOKKEEPER-750. Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1597124 13f79535-47bb-0310-9956-ffa450edef68
2014-05-14T22:41:03Z,755,BOOKKEEPER-755: Incorrect number of seconds specified in a day (Joseph Redfern via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1594744 13f79535-47bb-0310-9956-ffa450edef68
2014-05-12T06:10:00Z,747,BOOKKEEPER-747: Implement register/unregister LedgerMetadataListener in MSLedgerManagerFactory (fpj via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1593889 13f79535-47bb-0310-9956-ffa450edef68
2014-05-09T12:04:45Z,629,BOOKKEEPER-629: Support hostname based ledger metadata to help users to change IP with existing installation (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1593518 13f79535-47bb-0310-9956-ffa450edef68
2014-05-06T10:40:02Z,744,BOOKKEEPER-744: Run the auditor bookie check periodically (ivank) [missing files]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1592706 13f79535-47bb-0310-9956-ffa450edef68
2014-05-06T10:30:54Z,744,BOOKKEEPER-744: Run the auditor bookie check periodically (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1592705 13f79535-47bb-0310-9956-ffa450edef68
2014-04-29T20:07:12Z,716,BOOKKEEPER-716: padding writes for bookie journal (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1591079 13f79535-47bb-0310-9956-ffa450edef68
2014-04-24T12:44:34Z,743,BOOKKEEPER-743: Periodic ledger check running too often as doc doesn't match implementation. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1589694 13f79535-47bb-0310-9956-ffa450edef68
2014-04-24T08:43:56Z,742,BOOKKEEPER-742: Fix for empty ledgers losing quorum. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1589636 13f79535-47bb-0310-9956-ffa450edef68
2014-03-12T20:26:58Z,432,BOOKKEEPER-432: Improve performance of entry log range read per ledger entries (yixue  sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1576883 13f79535-47bb-0310-9956-ffa450edef68
2014-03-10T02:14:35Z,740,BOOKKEEPER-740: AutoRecoveryMainTest#testAutoRecoverySessionLoss is failing (Rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575795 13f79535-47bb-0310-9956-ffa450edef68
2014-03-07T17:39:37Z,363,BOOKKEEPER-363: Re-distributing topics among newly added hubs. (aniruddha via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575338 13f79535-47bb-0310-9956-ffa450edef68
2014-03-07T12:34:19Z,730,BOOKKEEPER-730: Shade pom file missing apache license header (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575247 13f79535-47bb-0310-9956-ffa450edef68
2014-03-07T12:30:54Z,715,BOOKKEEPER-715: bookie: delay dropping journal cached pages (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575246 13f79535-47bb-0310-9956-ffa450edef68
2014-03-07T12:14:45Z,717,BOOKKEEPER-717: journal should look forward to group time-out entries (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575243 13f79535-47bb-0310-9956-ffa450edef68
2014-02-21T18:01:17Z,654,BOOKKEEPER-654: Bookkeeper client operations are allowed even after its closure  bk#close() (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1570647 13f79535-47bb-0310-9956-ffa450edef68
2014-02-10T05:53:57Z,731,BOOKKEEPER-731: Missing BOOKIE_PID_DIR and BOOKIE_STOP_TIMEOUT in env variables list (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1566512 13f79535-47bb-0310-9956-ffa450edef68
2014-02-10T05:52:20Z,732,BOOKKEEPER-732: Add env variable ENTRY_FORMATTER_CLASS to the bkenv.sh (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1566510 13f79535-47bb-0310-9956-ffa450edef68
2014-02-06T11:32:14Z,724,BOOKKEEPER-724: Shade introduces RAT error (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565180 13f79535-47bb-0310-9956-ffa450edef68
2014-02-06T08:34:15Z,726,BOOKKEEPER-726: PerChannelBookieClient should print address that it failed to connect to when it fails to correct (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565115 13f79535-47bb-0310-9956-ffa450edef68
2014-02-06T08:31:11Z,725,BOOKKEEPER-725: AutoRecoveryMain should exit with error code if deathwatcher finds dead thread (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565112 13f79535-47bb-0310-9956-ffa450edef68
2014-02-06T08:25:45Z,729,BOOKKEEPER-729: Bookie shouldn't exit with 0  if exiting from deathwatcher and thread death was caused by OOM (ivank via fpj)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565109 13f79535-47bb-0310-9956-ffa450edef68
2014-02-06T08:21:08Z,728,BOOKKEEPER-728: Bookkeeper#Builder is not public  so can't be used outside of client package (ivank via fpj)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565105 13f79535-47bb-0310-9956-ffa450edef68
2014-02-05T21:52:05Z,727,BOOKKEEPER-727: Names of bookie write/read threads are backwards (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1564949 13f79535-47bb-0310-9956-ffa450edef68
2014-02-05T21:43:39Z,644,BOOKKEEPER-644: Provide a bookie address wrapper (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1564946 13f79535-47bb-0310-9956-ffa450edef68
2014-02-02T05:33:45Z,708,BOOKKEEPER-708: Shade protobuf library to avoid incompatible versions (rakesh  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1563566 13f79535-47bb-0310-9956-ffa450edef68
2014-01-24T08:26:14Z,703,BOOKKEEPER-703: Document all the settings added in BOOKKEEPER-656 (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560917 13f79535-47bb-0310-9956-ffa450edef68
2014-01-22T13:35:03Z,643,BOOKKEEPER-643: Improve concurrency of entry logger (sijie & Aniruddha via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560348 13f79535-47bb-0310-9956-ffa450edef68
2014-01-22T06:37:35Z,720,BOOKKEEPER-720: CheckpointSource.MIN#compareTo does exactly the opposite of what it should (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560263 13f79535-47bb-0310-9956-ffa450edef68
2014-01-21T16:26:23Z,661,BOOKKEEPER-661: Turn readonly back to writable if spaces are reclaimed. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560066 13f79535-47bb-0310-9956-ffa450edef68
2014-01-21T15:41:29Z,719,BOOKKEEPER-719: Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560045 13f79535-47bb-0310-9956-ffa450edef68
2014-01-21T04:19:09Z,696,BOOKKEEPER-696: stats collection on bookkeeper client (Aniruddha  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1559918 13f79535-47bb-0310-9956-ffa450edef68
2014-01-21T04:05:00Z,429,BOOKKEEPER-429: Provide separate read and write threads in the bookkeeper server (Aniruddha via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1559917 13f79535-47bb-0310-9956-ffa450edef68
2014-01-17T17:13:43Z,710,BOOKKEEPER-710: OpenLedgerNoRecovery should watch ensemble change. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1559192 13f79535-47bb-0310-9956-ffa450edef68
2014-01-15T14:58:00Z,662,BOOKKEEPER-662: Major GC should kick in immediately if remaining space reaches a warning threshold (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1558410 13f79535-47bb-0310-9956-ffa450edef68
2014-01-09T06:30:11Z,714,BOOKKEEPER-714: Logging channel exceptions in PerChannelBookieClient (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1556732 13f79535-47bb-0310-9956-ffa450edef68
2014-01-03T17:12:42Z,709,BOOKKEEPER-709: SlowBookieTest#testSlowBookie fails intermittently (Rakesh R via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1555158 13f79535-47bb-0310-9956-ffa450edef68
2013-12-06T06:39:36Z,701,BOOKKEEPER-701: Improve exception handling of Bookkeeper threads (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1548385 13f79535-47bb-0310-9956-ffa450edef68
2013-12-05T06:35:56Z,712,BOOKKEEPER-712: bookkeeper script should use java from JAVA_HOME (vinay via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1548024 13f79535-47bb-0310-9956-ffa450edef68
2013-12-05T06:33:31Z,711,BOOKKEEPER-711: bookkeeper-daemon.sh will not remove the pid file one successful stop (vinay via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1548023 13f79535-47bb-0310-9956-ffa450edef68
2013-12-02T17:45:13Z,565,BOOKKEEPER-565: Make an option to separate storing entry log files from index files. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1547123 13f79535-47bb-0310-9956-ffa450edef68
2013-11-22T09:40:15Z,678,BOOKKEEPER-678: BookieServer shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1544452 13f79535-47bb-0310-9956-ffa450edef68
2013-11-09T18:49:55Z,699,BOOKKEEPER-699: Codahale metrics implementation of stats API (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1540366 13f79535-47bb-0310-9956-ffa450edef68
2013-10-30T15:23:54Z,700,BOOKKEEPER-700: GarbageCollectorThread exsiting with ArrayIndexOutOfBoundsException (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1537130 13f79535-47bb-0310-9956-ffa450edef68
2013-10-30T04:59:47Z,698,BOOKKEEPER-698: Bookie client closure is not considering timeoutExecutor (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536965 13f79535-47bb-0310-9956-ffa450edef68
2013-10-29T09:58:02Z,615,BOOKKEEPER-615: Twitter stats implementation of stats interface (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536635 13f79535-47bb-0310-9956-ffa450edef68
2013-10-29T09:08:54Z,614,BOOKKEEPER-614: Generic stats interface  which multiple providers can be plugged into (sijie & ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536616 13f79535-47bb-0310-9956-ffa450edef68
2013-10-29T04:14:18Z,602,BOOKKEEPER-602: we should have request timeouts rather than channel timeout in PerChannelBookieClient (Aniruddha  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536584 13f79535-47bb-0310-9956-ffa450edef68
2013-10-22T14:21:28Z,659,BOOKKEEPER-659: LRU page management in ledger cache. (Aniruddha  Robin Dhamankar & sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1534640 13f79535-47bb-0310-9956-ffa450edef68
2013-10-22T05:44:13Z,664,BOOKKEEPER-664: Compaction increases latency on journal writes (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1534503 13f79535-47bb-0310-9956-ffa450edef68
2013-10-22T05:35:46Z,688,BOOKKEEPER-688: NPE exception in PerChannelBookieClient (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1534498 13f79535-47bb-0310-9956-ffa450edef68
2013-10-14T16:32:27Z,673,BOOKKEEPER-673: Ledger length can be inaccurate in failure case (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531970 13f79535-47bb-0310-9956-ffa450edef68
2013-10-14T15:38:44Z,676,BOOKKEEPER-676: Make add asynchrounous in ledger recovery (aniruddha via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531944 13f79535-47bb-0310-9956-ffa450edef68
2013-10-14T14:43:24Z,605,BOOKKEEPER-605: Use static Logger objects everywhere for bookkeeper (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531920 13f79535-47bb-0310-9956-ffa450edef68
2013-10-12T03:43:30Z,657,BOOKKEEPER-657: Journal Improvement (Robin Dhamankar via sijie) (add missing file)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531495 13f79535-47bb-0310-9956-ffa450edef68
2013-10-12T03:42:21Z,657,BOOKKEEPER-657: Journal Improvement (Robin Dhamankar via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531494 13f79535-47bb-0310-9956-ffa450edef68
2013-10-11T14:18:40Z,638,BOOKKEEPER-638: Two bookies could start at the same time to access bookie data. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531302 13f79535-47bb-0310-9956-ffa450edef68
2013-10-11T06:36:27Z,658,BOOKKEEPER-658: ledger cache refactor (Robin Dhamankar via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531203 13f79535-47bb-0310-9956-ffa450edef68
2013-10-02T05:01:52Z,686,BOOKKEEPER-686: Bookie startup will fail if one of the configured ledgerDir is full and the same is used for replaying the journal (Rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528307 13f79535-47bb-0310-9956-ffa450edef68
2013-10-02T04:54:35Z,645,BOOKKEEPER-645: Bookkeeper shell command to get a list of readonly bookies (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528306 13f79535-47bb-0310-9956-ffa450edef68
2013-10-02T04:40:39Z,666,BOOKKEEPER-666: Naming threads of ExecutorService (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528305 13f79535-47bb-0310-9956-ffa450edef68
2013-10-02T04:23:33Z,640,BOOKKEEPER-640: Log improvement - add shutdown/exit log message for the bookie services (rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528304 13f79535-47bb-0310-9956-ffa450edef68
2013-09-27T09:37:07Z,683,BOOKKEEPER-683: TestSubAfterCloseSub fails on 4.2 (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1526841 13f79535-47bb-0310-9956-ffa450edef68
2013-09-10T22:34:06Z,675,BOOKKEEPER-675: Log noise fixup before cutting 4.2.2 (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1521667 13f79535-47bb-0310-9956-ffa450edef68
2013-09-10T13:14:40Z,446,BOOKKEEPER-446: BookKeeper.createLedger(..) should not mask the error with ZKException (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1521474 13f79535-47bb-0310-9956-ffa450edef68
2013-08-23T16:48:37Z,580,BOOKKEEPER-580: improve close logic (sijie & ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1516929 13f79535-47bb-0310-9956-ffa450edef68
2013-08-22T14:40:10Z,649,BOOKKEEPER-649: Race condition in sync ZKUtils.createFullPathOptimistic() (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1516465 13f79535-47bb-0310-9956-ffa450edef68
2013-08-21T11:19:21Z,632,BOOKKEEPER-632: AutoRecovery should consider read only bookies (vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1516139 13f79535-47bb-0310-9956-ffa450edef68
2013-08-20T11:02:59Z,624,BOOKKEEPER-624: Reduce logs generated by ReplicationWorker (vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1515774 13f79535-47bb-0310-9956-ffa450edef68
2013-08-20T10:51:50Z,668,BOOKKEEPER-668: Race between PerChannelBookieClient#channelDisconnected() and disconnect() calls can make clients hang while add/reading entries in case of multiple bookie failures (sijie & ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1515769 13f79535-47bb-0310-9956-ffa450edef68
2013-08-13T12:32:37Z,667,BOOKKEEPER-667: Client write will fail with BadMetadataVersion in case of multiple Bookie failures with AutoRecovery enabled (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1513459 13f79535-47bb-0310-9956-ffa450edef68
2013-08-12T17:01:05Z,604,BOOKKEEPER-604: Ledger storage can log an exception if GC happens concurrently. (sijie & ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1513198 13f79535-47bb-0310-9956-ffa450edef68
2013-07-29T10:30:32Z,663,BOOKKEEPER-663: HierarchicalLedgerManager iterator is missing some ranges and the last ledger in the range (mmerli via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1507997 13f79535-47bb-0310-9956-ffa450edef68
2013-07-24T14:55:31Z,642,BOOKKEEPER-642: Bookie returns incorrect exitcode  ExitCode.ZK_REG_FAIL is getting overridden (Rakesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1506582 13f79535-47bb-0310-9956-ffa450edef68
2013-07-24T14:14:38Z,653,BOOKKEEPER-653: Timeout option is missing in few testcases (Rakesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1506569 13f79535-47bb-0310-9956-ffa450edef68
2013-07-22T16:03:38Z,607,BOOKKEEPER-607: Filtered Messages Require ACK from Client Causes User Being Throttled Incorrectly Forever (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505726 13f79535-47bb-0310-9956-ffa450edef68
2013-07-20T18:30:04Z,652,BOOKKEEPER-652: Logger class name is wrong in LedgerCacheImpl.java (Rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505185 13f79535-47bb-0310-9956-ffa450edef68
2013-07-20T18:24:54Z,646,BOOKKEEPER-646: BookieShell readjournal command is throwing BufferUnderflowException (Rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505181 13f79535-47bb-0310-9956-ffa450edef68
2013-07-20T18:16:37Z,635,BOOKKEEPER-635: jenkins build should highlight which lines of the patch cause raw analysis errors (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505179 13f79535-47bb-0310-9956-ffa450edef68
2013-07-20T18:06:30Z,610,BOOKKEEPER-610: Make SyncThread use an executor (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505175 13f79535-47bb-0310-9956-ffa450edef68
2013-07-20T17:59:39Z,563,BOOKKEEPER-563: Avoid Journal polluting page cache (Robin Dhamankar via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505174 13f79535-47bb-0310-9956-ffa450edef68
2013-07-14T22:55:35Z,600,BOOKKEEPER-600: shouldClaim flag isn't cleared for hedwig multiplex java client (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1503075 13f79535-47bb-0310-9956-ffa450edef68
2013-07-13T15:23:25Z,601,BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1502803 13f79535-47bb-0310-9956-ffa450edef68
2013-07-04T12:01:37Z,636,BOOKKEEPER-636: Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created. (vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1499731 13f79535-47bb-0310-9956-ffa450edef68
2013-07-03T15:39:01Z,641,BOOKKEEPER-641: DeathWatcher thread is unnecessarily running even after bookie shutdown (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1499445 13f79535-47bb-0310-9956-ffa450edef68
2013-07-02T17:41:39Z,637,BOOKKEEPER-637: NoSuchEntry exception when reading an entry from a bookie should not print ERROR level message (mmerli via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1499032 13f79535-47bb-0310-9956-ffa450edef68
2013-06-28T15:27:08Z,620,BOOKKEEPER-620: PerChannelBookieClient race during channel disconnect (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1497814 13f79535-47bb-0310-9956-ffa450edef68
2013-06-26T01:35:18Z,633,BOOKKEEPER-633: ConcurrentModificationException in RackawareEnsemblePlacementPolicy when a bookie is removed from available list (vinay via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1496706 13f79535-47bb-0310-9956-ffa450edef68
2013-06-26T01:27:04Z,623,BOOKKEEPER-623: LedgerChecker should avoid segments of closed ledger with higher start entryId than closed entry. (vinay via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1496705 13f79535-47bb-0310-9956-ffa450edef68
2013-06-21T17:26:37Z,313,BOOKKEEPER-313: Bookkeeper shutdown call from Bookie thread is not shutting down server (vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1495513 13f79535-47bb-0310-9956-ffa450edef68
2013-06-21T16:51:00Z,619,BOOKKEEPER-619: Bookie should not create local cookie files if zookeeper is uninitialized (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1495508 13f79535-47bb-0310-9956-ffa450edef68
2013-06-15T17:05:45Z,618,BOOKKEEPER-618: Better resolution of bookie address (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1493400 13f79535-47bb-0310-9956-ffa450edef68
2013-06-15T15:08:18Z,627,BOOKKEEPER-627: LedgerDirsMonitor is missing thread name (rakesh via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1493377 13f79535-47bb-0310-9956-ffa450edef68
2013-06-15T14:53:44Z,626,BOOKKEEPER-626: BOOKIE_EXTRA_OPTS are added twice (vinay via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1493373 13f79535-47bb-0310-9956-ffa450edef68
2013-06-12T16:41:47Z,592,BOOKKEEPER-592: allow application to recommend ledger data locality (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1492274 13f79535-47bb-0310-9956-ffa450edef68
2013-06-05T09:49:01Z,617,BOOKKEEPER-617: BOOKKEEPER-544 breaks hedwig-server/bin/hedwig script (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1489775 13f79535-47bb-0310-9956-ffa450edef68
2013-06-03T11:03:30Z,603,BOOKKEEPER-603: Support Boost 1.53 for Hedwig Cpp Client (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1488954 13f79535-47bb-0310-9956-ffa450edef68
2013-05-31T10:02:59Z,611,BOOKKEEPER-611: Speed up bookkeeper tests (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1488138 13f79535-47bb-0310-9956-ffa450edef68
2013-05-10T10:45:58Z,257,BOOKKEEPER-257: Ability to list all ledgers (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1480978 13f79535-47bb-0310-9956-ffa450edef68
2013-05-09T09:41:35Z,608,BOOKKEEPER-608: Make SyncThread a reusable component (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1480580 13f79535-47bb-0310-9956-ffa450edef68
2013-05-07T19:49:19Z,,BOOKkEEPER-577: BookieFailureTest uses sync/wait()/notify() incorrectly (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1480051 13f79535-47bb-0310-9956-ffa450edef68
2013-05-06T17:32:45Z,562,BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1479649 13f79535-47bb-0310-9956-ffa450edef68
2013-05-04T12:22:10Z,564,BOOKKEEPER-564: Better checkpoint mechanism (sijie & ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1479085 13f79535-47bb-0310-9956-ffa450edef68
2013-04-26T16:38:02Z,584,BOOKKEEPER-584: Data loss when ledger metadata is overwritten (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1476283 13f79535-47bb-0310-9956-ffa450edef68
2013-04-07T18:11:21Z,598,BOOKKEEPER-598: Fails to compile - RESUBSCRIBE_EXCEPTION conflict (Matthew Farrellee via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1465438 13f79535-47bb-0310-9956-ffa450edef68
2013-04-07T18:07:06Z,599,BOOKKEEPER-599: NPE in PerChannelBookieClient (jiannan via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1465437 13f79535-47bb-0310-9956-ffa450edef68
2013-04-04T09:21:26Z,596,BOOKKEEPER-596: Ledgers are gc'ed by mistake in MSLedgerManagerFactory. (sijie & ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1464385 13f79535-47bb-0310-9956-ffa450edef68
2013-04-02T15:38:49Z,595,BOOKKEEPER-595: Crash of inprocess autorecovery daemon should not take down the bookie (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1463599 13f79535-47bb-0310-9956-ffa450edef68
2013-04-02T14:14:45Z,597,BOOKKEEPER-597: Add flag to output test logs to stdout (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1463555 13f79535-47bb-0310-9956-ffa450edef68
2013-03-25T17:02:41Z,581,BOOKKEEPER-581: Ledger recovery doesn't work correctly when recovery adds force changing ensembles. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460765 13f79535-47bb-0310-9956-ffa450edef68
2013-03-25T16:26:48Z,506,BOOKKEEPER-506: Provide better topic release algorithm (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460751 13f79535-47bb-0310-9956-ffa450edef68
2013-03-25T15:10:21Z,586,BOOKKEEPER-586: Remove recursive call in delivery manager (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460709 13f79535-47bb-0310-9956-ffa450edef68
2013-03-25T05:48:01Z,583,BOOKKEEPER-583: Read from a ReadOnlyBookie fails if index fileinfo is not in ledger cache (vinay via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460524 13f79535-47bb-0310-9956-ffa450edef68
2013-03-25T05:27:23Z,557,BOOKKEEPER-557: Compiler error showing up badly with jdk 7 (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460523 13f79535-47bb-0310-9956-ffa450edef68
2013-03-17T23:40:07Z,573,BOOKKEEPER-573: Script to start a bookkeeper cluster (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1457598 13f79535-47bb-0310-9956-ffa450edef68
2013-03-17T23:33:57Z,585, BOOKKEEPER-585: Auditor logs noisily when a ledger has been deleted (ivank via sijie)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1457596 13f79535-47bb-0310-9956-ffa450edef68
2013-03-17T23:31:20Z,576,BOOKKEEPER-576: Bookie client should use netty Decoder/Encoder (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1457592 13f79535-47bb-0310-9956-ffa450edef68
2013-03-08T23:42:44Z,579,BOOKKEEPER-579: TestSubAfterCloseSub was put in a wrong package (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1454625 13f79535-47bb-0310-9956-ffa450edef68
2013-03-05T17:45:58Z,559,BOOKKEEPER-559: Fix occasional failure in AuditorBookieTest. Contributed by Ivan Kelly.    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1452915 13f79535-47bb-0310-9956-ffa450edef68
2013-02-26T03:12:24Z,574,BOOKKEEPER-574: Extend the bookkeeper shell to get a list of available bookies. Contributed by Ivan Kelly    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1450005 13f79535-47bb-0310-9956-ffa450edef68
2013-02-19T15:52:35Z,567,BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1447772 13f79535-47bb-0310-9956-ffa450edef68
2013-02-19T15:19:22Z,549,BOOKKEEPER-549: Documentation missed for readOnlyMode support (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1447759 13f79535-47bb-0310-9956-ffa450edef68
2013-02-19T15:15:47Z,548,BOOKKEEPER-548: Document about periodic ledger checker configuration (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1447756 13f79535-47bb-0310-9956-ffa450edef68
2013-02-16T15:02:32Z,569,BOOKKEEPER-569: Critical performance bug in InterleavedLedgerStorage (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1446902 13f79535-47bb-0310-9956-ffa450edef68
2013-02-15T04:31:08Z,568,BOOKKEEPER-568: NPE during GC with HierarchicalLedgerManager (Matteo via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1446444 13f79535-47bb-0310-9956-ffa450edef68
2013-02-12T10:16:44Z,555,BOOKKEEPER-555: Make BookieServer use Netty rather than a custom IO server (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1445085 13f79535-47bb-0310-9956-ffa450edef68
2013-02-12T05:00:18Z,554,BOOKKEEPER-554: fd leaking when move ledger index file (sijie  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1445033 13f79535-47bb-0310-9956-ffa450edef68
2013-02-09T07:59:47Z,556,BOOKKEEPER-556: BookieServerMXBean#getServerState makes no sense (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1444340 13f79535-47bb-0310-9956-ffa450edef68
2013-02-08T18:08:49Z,561,BOOKKEEPER-561 Findbugs report errors with openjdk. Contributed by Ivan Kelly.    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1444174 13f79535-47bb-0310-9956-ffa450edef68
2013-02-06T15:28:24Z,526,BOOKKEEPER-526: multiple threads for delivery manager (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1443017 13f79535-47bb-0310-9956-ffa450edef68
2013-01-31T18:32:57Z,312,BOOKKEEPER-312: Implementation of JMS provider (mridul via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1441108 13f79535-47bb-0310-9956-ffa450edef68
2013-01-24T18:35:47Z,544,BOOKKEEPER-544: Modify hedwig server tests to allow client testcases to start/stop them as part of their tests (mridul via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1438120 13f79535-47bb-0310-9956-ffa450edef68
2013-01-14T16:29:28Z,,Fixup for CHANGES.txt (some issues were missing or wrongly placed  also removed tabs)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432977 13f79535-47bb-0310-9956-ffa450edef68
2013-01-14T15:59:07Z,472,BOOKKEEPER-472: Provide an option to start Autorecovery along with Bookie Servers (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432964 13f79535-47bb-0310-9956-ffa450edef68
2013-01-14T13:52:21Z,,Updating version in CHANGES.txt & pom.xml after branching for 4.2.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432921 13f79535-47bb-0310-9956-ffa450edef68
2013-01-14T13:48:28Z,,Updating version in CHANGES.txt before branching for 4.2.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432916 13f79535-47bb-0310-9956-ffa450edef68
2013-01-14T12:45:49Z,513,BOOKKEEPER-513: TestMessageFilter fails periodically (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432902 13f79535-47bb-0310-9956-ffa450edef68
2013-01-12T17:55:26Z,503,BOOKKEEPER-503: The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes (jiannan & sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432485 13f79535-47bb-0310-9956-ffa450edef68
2013-01-11T04:16:41Z,539,BOOKKEEPER-539: ClientNotSubscribedException & doesn't receive enough messages in TestThrottlingDelivery#testServerSideThrottle (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431869 13f79535-47bb-0310-9956-ffa450edef68
2013-01-10T18:13:58Z,538,BOOKKEEPER-538: Race condition in BookKeeper#close (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431536 13f79535-47bb-0310-9956-ffa450edef68
2013-01-10T14:19:56Z,530,BOOKKEEPER-530: data might be lost during compaction. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431378 13f79535-47bb-0310-9956-ffa450edef68
2013-01-10T09:42:19Z,540,BOOKKEEPER-540: #stopServingSubscriber when channel is disconnected. (Fangmin via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431235 13f79535-47bb-0310-9956-ffa450edef68
2013-01-10T09:39:25Z,543,BOOKKEEPER-543: Read zk host list in a wrong way in hedwig server (Fangmin via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431232 13f79535-47bb-0310-9956-ffa450edef68
2013-01-09T17:48:51Z,542,BOOKKEEPER-542: Remove trailing spaces in IndexCorruptionTest (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430972 13f79535-47bb-0310-9956-ffa450edef68
2013-01-09T16:47:36Z,529,BOOKKEEPER-529: stopServingSubscriber in delivery manager should remove stub callbacks in ReadAheadCache (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430954 13f79535-47bb-0310-9956-ffa450edef68
2013-01-09T16:18:07Z,533,BOOKKEEPER-533: TestSubAfterCloseSub fails strangely in tests (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430933 13f79535-47bb-0310-9956-ffa450edef68
2013-01-09T15:34:38Z,541,BOOKKEEPER-541: Add guava to notice file (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430898 13f79535-47bb-0310-9956-ffa450edef68
2013-01-09T11:29:39Z,531,BOOKKEEPER-531: Cache thread should wait until old entries are collected (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430795 13f79535-47bb-0310-9956-ffa450edef68
2013-01-07T23:44:33Z,532,BOOKKEEPER-532: AbstractSubscriptionManager#AcquireOp read subscriptions every time even it already owned the topic. (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430091 13f79535-47bb-0310-9956-ffa450edef68
2013-01-07T21:53:54Z,534,BOOKKEEPER-534: Flakeyness in AuditorBookieTest (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430041 13f79535-47bb-0310-9956-ffa450edef68
2013-01-07T11:25:06Z,355,BOOKKEEPER-355: Ledger recovery will mark ledger as closed with -1  in case of slow bookie is added to ensemble during recovery add (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1429756 13f79535-47bb-0310-9956-ffa450edef68
2013-01-07T02:48:26Z,524,BOOKKEEPER-524: Bookie journal filesystem gets full after SyncThread is terminated with exception (Matteo  fpj via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1429650 13f79535-47bb-0310-9956-ffa450edef68
2013-01-04T10:32:49Z,293,BOOKKEEPER-293: Periodic checking of ledger replication status (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428777 13f79535-47bb-0310-9956-ffa450edef68
2013-01-03T11:07:56Z,507,BOOKKEEPER-507: Race condition happens if closeSubscription and subscribe happened at the same time (in multiplexed client). (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428277 13f79535-47bb-0310-9956-ffa450edef68
2013-01-03T10:06:24Z,409,BOOKKEEPER-409: Integration Test - Perform bookie rereplication cycle by Auditor-RW processes (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428258 13f79535-47bb-0310-9956-ffa450edef68
2013-01-02T21:24:33Z,55,BOOKKEEPER-55: SubscribeReconnectRetryTask might retry subscription endlessly when another subscription is already successfully created previously (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428059 13f79535-47bb-0310-9956-ffa450edef68
2012-12-29T15:31:46Z,523,BOOKKEEPER-523: Every test should have a timeout (ivank  sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1426772 13f79535-47bb-0310-9956-ffa450edef68
2012-12-28T11:32:15Z,514,BOOKKEEPER-514: TestDeadLock hanging sometimes (ivank  sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1426461 13f79535-47bb-0310-9956-ffa450edef68
2012-12-27T22:16:40Z,520,BOOKKEEPER-520: BookieFailureTest hangs on precommit build (sijie via fpj  jira reopened)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1426349 13f79535-47bb-0310-9956-ffa450edef68
2012-12-24T05:23:12Z,447,BOOKKEEPER-447: Bookie can fail to recover if index pages flushed before ledger flush acknowledged (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425588 13f79535-47bb-0310-9956-ffa450edef68
2012-12-24T05:05:49Z,522,BOOKKEEPER-522: TestHedwigHub is failing silently on Jenkins (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425586 13f79535-47bb-0310-9956-ffa450edef68
2012-12-24T04:50:02Z,463,BOOKKEEPER-463: Refactor garbage collection code for ease to plugin different GC algorithm. (Fangmin  ivank  fpj via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425585 13f79535-47bb-0310-9956-ffa450edef68
2012-12-20T05:48:56Z,520,BOOKKEEPER-520: BookieFailureTest hangs on precommit build (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1424335 13f79535-47bb-0310-9956-ffa450edef68
2012-12-18T12:04:51Z,500,BOOKKEEPER-500: Fencing doesn't work when restarting bookies. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423419 13f79535-47bb-0310-9956-ffa450edef68
2012-12-18T11:00:49Z,496,BOOKKEEPER-496: Ensure that the auditor and replication worker will shutdown if they lose their ZK session (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423409 13f79535-47bb-0310-9956-ffa450edef68
2012-12-18T10:55:34Z,509,BOOKKEEPER-509: TestBookKeeperPersistenceManager failed on latest trunk (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423405 13f79535-47bb-0310-9956-ffa450edef68
2012-12-18T05:52:21Z,342,BOOKKEEPER-342: add documentation for hedwig metadata manager interface. (sijie  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423281 13f79535-47bb-0310-9956-ffa450edef68
2012-12-18T05:48:26Z,490,BOOKKEEPER-490: add documentation for MetaStore interface (sijie  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423278 13f79535-47bb-0310-9956-ffa450edef68
2012-12-17T14:42:23Z,375,BOOKKEEPER-375: Document about Auto replication service in BK (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422952 13f79535-47bb-0310-9956-ffa450edef68
2012-12-15T02:08:32Z,512,BOOKKEEPER-512: BookieZkExpireTest fails periodically (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422174 13f79535-47bb-0310-9956-ffa450edef68
2012-12-15T01:45:06Z,511,BOOKKEEPER-511: BookieShell is very noisy (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422173 13f79535-47bb-0310-9956-ffa450edef68
2012-12-14T19:29:17Z,428,BOOKKEEPER-428: Expose command options in bookie scripts to disable/enable auto recovery temporarily (rakesh  ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422056 13f79535-47bb-0310-9956-ffa450edef68
2012-12-14T19:26:51Z,428,BOOKKEEPER-428: Expose command options in bookie scripts to disable/enable auto recovery temporarily (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422054 13f79535-47bb-0310-9956-ffa450edef68
2012-12-14T14:14:53Z,504,BOOKKEEPER-504: Fix findbugs warning in PendingReadOp (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421875 13f79535-47bb-0310-9956-ffa450edef68
2012-12-14T10:18:04Z,426,BOOKKEEPER-426: Make auditor Vote znode store a protobuf containing the host that voted (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421781 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T17:34:03Z,408,BOOKKEEPER-408: BookieReadWriteTest will enter the endless loop and will not leave out (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421401 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T17:12:42Z,341,BOOKKEEPER-341: add documentation for bookkeeper ledger manager interface. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421388 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T17:05:57Z,262,BOOKKEEPER-262: Implement a meta store based hedwig metadata manager. (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421384 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T15:44:19Z,483,BOOKKEEPER-483: precommit tests only check toplevel rat file  not the one for submodules. (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421346 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T12:07:52Z,336,BOOKKEEPER-336: bookie readEntries is taking more time if the ensemble has failed bookie(s) (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421242 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T11:51:05Z,458,BOOKKEEPER-458:  Annoy BKReadException error when changing ledger. (jiannan via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421239 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T11:33:11Z,365,BOOKKEEPER-365: Ledger will never recover if one of the quorum bookie is down forever and others dont have entry (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421235 13f79535-47bb-0310-9956-ffa450edef68
2012-12-13T06:26:32Z,404,BOOKKEEPER-404: Deprecate non-SubscriptionOptions Subscriber Apis (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421083 13f79535-47bb-0310-9956-ffa450edef68
2012-12-12T17:26:59Z,493,BOOKKEEPER-493: moveLedgerIndexFile might have chance pickup same directory (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420854 13f79535-47bb-0310-9956-ffa450edef68
2012-12-12T10:20:38Z,205,BOOKKEEPER-205: implement a MetaStore based ledger manager for bookkeeper client. (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420607 13f79535-47bb-0310-9956-ffa450edef68
2012-12-12T05:54:23Z,497,BOOKKEEPER-497: GcLedgersTest has a potential race (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420532 13f79535-47bb-0310-9956-ffa450edef68
2012-12-11T18:16:38Z,495,BOOKKEEPER-495: Revise BK config doc (fpj  ivank via fpj) (a few extra edits to bookieCOnfigParams.textile)     git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420318 13f79535-47bb-0310-9956-ffa450edef68
2012-12-11T17:59:21Z,495,BOOKKEEPER-495: Revise BK config doc (fpj  ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420308 13f79535-47bb-0310-9956-ffa450edef68
2012-12-11T10:15:19Z,491,BOOKKEEPER-491: Hedwig doc for configuration (fpj  sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420069 13f79535-47bb-0310-9956-ffa450edef68
2012-12-10T15:02:42Z,498,BOOKKEEPER-498: BookieRecoveryTest.tearDown NPE (fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1419496 13f79535-47bb-0310-9956-ffa450edef68
2012-12-10T10:04:18Z,465,BOOKKEEPER-465: CreateNewLog may overwrite lastLogId with smaller value (yixue  fpj via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1419311 13f79535-47bb-0310-9956-ffa450edef68
2012-12-10T09:58:19Z,469,BOOKKEEPER-469: Remove System.out.println from TestLedgerManager (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1419306 13f79535-47bb-0310-9956-ffa450edef68
2012-12-08T15:14:52Z,474,BOOKKEEPER-474:  BookieReadWriteTest#testShutdown doesn't make sense (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418685 13f79535-47bb-0310-9956-ffa450edef68
2012-12-08T10:42:51Z,431,BOOKKEEPER-431: Duplicate definition of COOKIES_NODE (uma via fpj).  Additional commit to fix the DEFAULT_ZK_LEDGERS_ROOT_PATH constant.    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418638 13f79535-47bb-0310-9956-ffa450edef68
2012-12-08T10:18:30Z,431,BOOKKEEPER-431: Duplicate definition of COOKIES_NODE (uma via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418637 13f79535-47bb-0310-9956-ffa450edef68
2012-12-07T11:21:52Z,453,BOOKKEEPER-453: Extract commonality from MultiplexSubscribeResponseHandler and SimpleSubscribeResponseHandler and put into an abstract class  (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418280 13f79535-47bb-0310-9956-ffa450edef68
2012-12-04T21:15:47Z,475,BOOKKEEPER-475: BookieRecoveryTest#testSyncBookieRecoveryToRandomBookiesCheckForDupes() iterates too much (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1417190 13f79535-47bb-0310-9956-ffa450edef68
2012-12-04T17:54:23Z,461,BOOKKEEPER-461: Delivery throughput degrades when there are lots of publishers w/ high traffic. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1417066 13f79535-47bb-0310-9956-ffa450edef68
2012-12-04T17:27:35Z,470,BOOKKEEPER-470: Possible infinite loop in simple.SubscribeReconnectCallback (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1417046 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T21:38:08Z,399,BOOKKEEPER-399: Let hub server configure write quorum from ack quorum. (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416677 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T20:31:51Z,484,BOOKKEEPER-484: Misc fixes for test scripts (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416655 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T16:59:04Z,347,BOOKKEEPER-347: Provide mechanism to detect r-o bookie by the bookie clients (Vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416590 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T15:27:32Z,442,BOOKKEEPER-442: Failed to deliver messages due to inconsistency between SubscriptionState and LedgerRanges. (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416560 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T14:04:38Z,459,BOOKKEEPER-459: Rename metastore mock implementation to InMemory implementation (jiannan via ivank) [remove directory]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416526 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T13:54:19Z,459,BOOKKEEPER-459: Rename metastore mock implementation to InMemory implementation (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416519 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T09:55:01Z,336,[REVERT] BOOKKEEPER-336 bookie readEntries is taking more time if the ensemble has failed bookie(s) Basic speculative functionality  in place Accidently committed this change  before approval. Reverting (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416408 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T09:49:57Z,291,BOOKKEEPER-291: BKMBeanRegistry uses log4j directly (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416400 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T09:46:05Z,336,BOOKKEEPER-336 bookie readEntries is taking more time if the ensemble has failed bookie(s) Basic speculative functionality  in place  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416393 13f79535-47bb-0310-9956-ffa450edef68
2012-12-03T05:23:40Z,351,BOOKKEEPER-351: asyncAddEntry should not throw an exception (Matteo Merli via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416352 13f79535-47bb-0310-9956-ffa450edef68
2012-12-01T14:04:29Z,485,BOOKKEEPER-485: TestFencing hung (ivank via fpj)  --THIS line  and those below  will be ignored--  M    CHANGES.txt A    bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java M    bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416000 13f79535-47bb-0310-9956-ffa450edef68
2012-12-01T05:32:49Z,482,BOOKKEEPER-482: Precommit is reporting findbugs errors in trunk (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415920 13f79535-47bb-0310-9956-ffa450edef68
2012-11-30T15:28:43Z,389,BOOKKEEPER-389: add documentation for message filter. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415691 13f79535-47bb-0310-9956-ffa450edef68
2012-11-30T03:56:02Z,480,BOOKKEEPER-480: Fix javac warnings (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415492 13f79535-47bb-0310-9956-ffa450edef68
2012-11-30T03:54:14Z,481,BOOKKEEPER-481: Fix javadoc warnings (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415491 13f79535-47bb-0310-9956-ffa450edef68
2012-11-29T16:54:59Z,487,BOOKKEEPER-487: Add existed hub server settings to configuration template file (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415269 13f79535-47bb-0310-9956-ffa450edef68
2012-11-29T14:18:59Z,457,BOOKKEEPER-457: Create a format command for Hedwig to cleanup its metadata. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415176 13f79535-47bb-0310-9956-ffa450edef68
2012-11-27T20:33:10Z,476,BOOKKEEPER-476: Log to file during tests (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414382 13f79535-47bb-0310-9956-ffa450edef68
2012-11-27T15:52:45Z,477,BOOKKEEPER-477: In ReadOnlyBookieTest  we should wait for the bookie to die before asserting on it (ivank via fpj)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414233 13f79535-47bb-0310-9956-ffa450edef68
2012-11-27T14:36:23Z,479,BOOKKEEPER-479: Fix apache-rat issues in tree (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414207 13f79535-47bb-0310-9956-ffa450edef68
2012-11-27T09:50:56Z,471,BOOKKEEPER-471: Add scripts for preCommit testing (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414044 13f79535-47bb-0310-9956-ffa450edef68
2012-11-26T17:47:54Z,440,BOOKKEEPER-440: Make Write/Delete SubscriptionData Restricted to Version (Fangmin Lv via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413745 13f79535-47bb-0310-9956-ffa450edef68
2012-11-26T16:13:44Z,460,BOOKKEEPER-460: LedgerDeleteTest checks wrong place for log file (Fangmin Lv via ivank) [missing file]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413700 13f79535-47bb-0310-9956-ffa450edef68
2012-11-26T15:42:55Z,460,BOOKKEEPER-460: LedgerDeleteTest checks wrong place for log file (Fangmin Lv via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413685 13f79535-47bb-0310-9956-ffa450edef68
2012-11-23T10:49:51Z,467,BOOKKEEPER-467: Allocate ports for testing dynamically (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412818 13f79535-47bb-0310-9956-ffa450edef68
2012-11-22T17:36:20Z,454,BOOKKEEPER-454: hedwig c++ tester script assumes sh is bash (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412629 13f79535-47bb-0310-9956-ffa450edef68
2012-11-21T11:24:30Z,466,BOOKKEEPER-466: ZooKeeper test utility sets the port number as the tickTime (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412061 13f79535-47bb-0310-9956-ffa450edef68
2012-11-21T09:31:43Z,468,BOOKKEEPER-468: Remove <echo> from protobuf generation in hedwig (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412025 13f79535-47bb-0310-9956-ffa450edef68
2012-11-09T16:13:10Z,204,BOOKKEEPER-204: Provide a MetaStore interface  and a mock implementation. (Jiannan Wang via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1407520 13f79535-47bb-0310-9956-ffa450edef68
2012-11-07T16:27:20Z,444,BOOKKEEPER-444: Refactor pending read op to make speculative reads possible (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1406707 13f79535-47bb-0310-9956-ffa450edef68
2012-11-07T10:57:45Z,452,BOOKKEEPER-452: Rename ClientConfiguration multiplexing_enabled to subscription_connection_sharing_enabled (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1406541 13f79535-47bb-0310-9956-ffa450edef68
2012-11-02T20:47:32Z,370,BOOKKEEPER-370: implement multiplexing cpp client. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1405159 13f79535-47bb-0310-9956-ffa450edef68
2012-11-02T16:14:59Z,368,BOOKKEEPER-368 Implementing multiplexing java client. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1405028 13f79535-47bb-0310-9956-ffa450edef68
2012-10-31T17:16:07Z,434,BOOKKEEPER-434: [Hedwig CPP Client] Delay resolving default host until necessary. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1404255 13f79535-47bb-0310-9956-ffa450edef68
2012-10-31T10:40:46Z,430,BOOKKEEPER-430: Remove manual bookie registration from overview (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1404083 13f79535-47bb-0310-9956-ffa450edef68
2012-10-26T14:25:47Z,425,BOOKKEEPER-425: Cleanup Bookie id generation (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402526 13f79535-47bb-0310-9956-ffa450edef68
2012-10-26T13:13:09Z,439,BOOKKEEPER-439: No more messages delivered after deleted consumed ledgers. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402501 13f79535-47bb-0310-9956-ffa450edef68
2012-10-26T10:51:44Z,346,BOOKKEEPER-346: Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any) (Vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402464 13f79535-47bb-0310-9956-ffa450edef68
2012-10-26T09:55:51Z,441,BOOKKEEPER-441: InMemorySubscriptionManager should back up top2sub2seq before change it (Yixue via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402459 13f79535-47bb-0310-9956-ffa450edef68
2012-10-25T14:50:05Z,416,BOOKKEEPER-416: LedgerChecker returns underreplicated fragments for an closed ledger with no entries (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402172 13f79535-47bb-0310-9956-ffa450edef68
2012-10-25T14:18:39Z,424,BOOKKEEPER-424: Bookie start is failing intermittently when zkclient connection delays (rakeshr via ivank) [missing files]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402159 13f79535-47bb-0310-9956-ffa450edef68
2012-10-25T13:35:28Z,424,BOOKKEEPER-424: Bookie start is failing intermittently when zkclient connection delays (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402146 13f79535-47bb-0310-9956-ffa450edef68
2012-10-23T13:22:43Z,427,BOOKKEEPER-427: TestConcurrentTopicAcquisition hangs every so often (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1401286 13f79535-47bb-0310-9956-ffa450edef68
2012-10-22T11:04:47Z,411,BOOKKEEPER-411: Add CloseSubscription Request for multiplexing support (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1400836 13f79535-47bb-0310-9956-ffa450edef68
2012-10-22T10:10:38Z,435,BOOKKEEPER-435: Create SubscriptionChannelManager to manage all subscription channel (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1400827 13f79535-47bb-0310-9956-ffa450edef68
2012-10-18T14:40:30Z,345,BOOKKEEPER-345: Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any) (Vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1399680 13f79535-47bb-0310-9956-ffa450edef68
2012-10-18T10:59:34Z,369,BOOKKEEPER-369: re-factor hedwig cpp client to provide better interface to support both one-subscription-per-channel and multiple-subscriptions-per-channel. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1399578 13f79535-47bb-0310-9956-ffa450edef68
2012-10-17T09:19:49Z,422,BOOKKEEPER-422: Simplify AbstractSubscriptionManager (stu via fpj)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1399159 13f79535-47bb-0310-9956-ffa450edef68
2012-10-16T21:20:26Z,436,BOOKKEEPER-436: Journal#rollLog may leak file handler (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1398995 13f79535-47bb-0310-9956-ffa450edef68
2012-10-16T15:01:08Z,417,BOOKKEEPER-417: Hierarchical zk underreplication manager should clean up its hierarchy when done to allow for fast acquisition of underreplicated entries (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1398834 13f79535-47bb-0310-9956-ffa450edef68
2012-10-10T10:29:03Z,418,BOOKKEEPER-418: Store hostname of locker in replication lock (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396536 13f79535-47bb-0310-9956-ffa450edef68
2012-10-10T10:09:18Z,413,BOOKKEEPER-413: Hedwig C++ client: Rename RUN_AS_SSL_MODE to SSL_ENABLED (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396531 13f79535-47bb-0310-9956-ffa450edef68
2012-10-10T09:45:29Z,415,BOOKKEEPER-415: Rename DeliveryThrottle to MessageWindowSize (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396524 13f79535-47bb-0310-9956-ffa450edef68
2012-10-05T14:24:42Z,315,BOOKKEEPER-315: Ledger entries should be replicated sequentially instead of parallel. (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1394542 13f79535-47bb-0310-9956-ffa450edef68
2012-10-04T16:31:09Z,319,BOOKKEEPER-319: Manage auditing and replication processes (Vinay via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1394145 13f79535-47bb-0310-9956-ffa450edef68
2012-10-04T13:30:31Z,367,BOOKKEEPER-367: Server-Side Message Delivery Flow Control (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1394066 13f79535-47bb-0310-9956-ffa450edef68
2012-10-04T10:40:29Z,278,BOOKKEEPER-278: Ability to disable auto recovery temporarily (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1393983 13f79535-47bb-0310-9956-ffa450edef68
2012-10-01T13:36:31Z,143,BOOKKEEPER-143: Add SSL support for hedwig cpp client (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1392319 13f79535-47bb-0310-9956-ffa450edef68
2012-09-26T23:52:18Z,364,BOOKKEEPER-364: re-factor hedwig java client to support both one-subscription-per-channel and multiplex-subscriptions-per-channel. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1390777 13f79535-47bb-0310-9956-ffa450edef68
2012-09-26T11:04:08Z,397,BOOKKEEPER-397: Make the hedwig client in RegionManager configurable. (Aniruddha via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1390401 13f79535-47bb-0310-9956-ffa450edef68
2012-09-21T15:47:07Z,388,BOOKKEEPER-388: Document bookie format command (kiran_bc via ivank) [Corrected CHANGES.txt]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1388558 13f79535-47bb-0310-9956-ffa450edef68
2012-09-21T15:45:41Z,388,BOOKKEEPER-388: Document bookie format command (vinayrpet via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1388557 13f79535-47bb-0310-9956-ffa450edef68
2012-09-19T11:03:27Z,405,BOOKKEEPER-405: Let's add Thread name for ReplicationWorker thread. (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1387525 13f79535-47bb-0310-9956-ffa450edef68
2012-09-14T16:16:17Z,252,BOOKKEEPER-252: Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384836 13f79535-47bb-0310-9956-ffa450edef68
2012-09-14T13:42:11Z,32,BOOKKEEPER-32: Clean up LOG.debug statements (Stu Hood via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384782 13f79535-47bb-0310-9956-ffa450edef68
2012-09-14T09:53:13Z,403,BOOKKEEPER-403: ReReadMetadataCb is not executed in the thread responsible for that ledger (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384700 13f79535-47bb-0310-9956-ffa450edef68
2012-09-13T13:52:24Z,392, BOOKKEEPER-392: Racey ConcurrentMap usage in java hedwig-client (Stu Hood via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384336 13f79535-47bb-0310-9956-ffa450edef68
2012-09-12T18:34:11Z,325,BOOKKEEPER-325: Delay the replication of a ledger if RW found that its last fragment is in underReplication. (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384080 13f79535-47bb-0310-9956-ffa450edef68
2012-09-12T09:59:50Z,208,BOOKKEEPER-208: Separate write quorum from ack quorum (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1383872 13f79535-47bb-0310-9956-ffa450edef68
2012-09-11T08:30:57Z,396,BOOKKEEPER-396: Compilation issue in TestClient.java of BenchMark ( showing this in eclipse) (umamahesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1383286 13f79535-47bb-0310-9956-ffa450edef68
2012-09-07T13:22:18Z,383,BOOKKEEPER-383: NPE in BookieJournalTest  (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1382016 13f79535-47bb-0310-9956-ffa450edef68
2012-09-07T05:26:40Z,387,BOOKKEEPER-387: BookKeeper Upgrade is not working. (surendra via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381879 13f79535-47bb-0310-9956-ffa450edef68
2012-09-07T05:12:48Z,395,BOOKKEEPER-395: HDFS dep transitively depends on a busted pom (Stu Hood via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381874 13f79535-47bb-0310-9956-ffa450edef68
2012-09-07T05:04:33Z,300,BOOKKEEPER-300: Create Bookie format command (Vinay via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381870 13f79535-47bb-0310-9956-ffa450edef68
2012-09-07T03:12:27Z,394,BOOKKEEPER-394: CompositeException message is not useful (Stu Hood via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381848 13f79535-47bb-0310-9956-ffa450edef68
2012-09-04T08:39:15Z,386,BOOKKEEPER-386: It should not be possible to replicate a ledger fragment which is at the end of an open ledger (ivank & umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380488 13f79535-47bb-0310-9956-ffa450edef68
2012-09-03T16:54:10Z,385,BOOKKEEPER-385: replicateLedgerFragment should throw Exceptions in error conditions (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380293 13f79535-47bb-0310-9956-ffa450edef68
2012-09-03T15:27:11Z,335,BOOKKEEPER-335: client-side message filter for cpp client. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380273 13f79535-47bb-0310-9956-ffa450edef68
2012-09-03T15:14:13Z,334,BOOKKEEPER-334: client-side message filter for java client. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380268 13f79535-47bb-0310-9956-ffa450edef68
2012-08-31T13:25:39Z,384,BOOKKEEPER-384: Clean up LedgerManagerFactory and LedgerManager usage in tests (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1379445 13f79535-47bb-0310-9956-ffa450edef68
2012-08-28T12:51:31Z,371,BOOKKEEPER-371: NPE in hedwig hub client causes hedwig hub to shut down. (Aniruddha via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1378112 13f79535-47bb-0310-9956-ffa450edef68
2012-08-28T12:25:41Z,376,BOOKKEEPER-376: LedgerManagers should consider 'underreplication' node as a special Znode (Uma via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1378103 13f79535-47bb-0310-9956-ffa450edef68
2012-08-28T08:51:17Z,337,BOOKKEEPER-337: Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1378023 13f79535-47bb-0310-9956-ffa450edef68
2012-08-27T17:21:16Z,333,BOOKKEEPER-333: server-side message filter (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377756 13f79535-47bb-0310-9956-ffa450edef68
2012-08-27T15:43:59Z,272,BOOKKEEPER-272: Provide automatic mechanism to know bookie failures (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377716 13f79535-47bb-0310-9956-ffa450edef68
2012-08-27T14:55:17Z,304,BOOKKEEPER-304: Prepare bookie vs ledgers cache and will be used by the Auditor (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377703 13f79535-47bb-0310-9956-ffa450edef68
2012-08-27T13:15:05Z,382,BOOKKEEPER-382: space missed at concatenations in GarbageCollectorThread logging (Brahma via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377671 13f79535-47bb-0310-9956-ffa450edef68
2012-08-27T12:43:27Z,381,BOOKKEEPER-381: ReadLastConfirmedOp's Logger class name is wrong (surendra via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377656 13f79535-47bb-0310-9956-ffa450edef68
2012-08-27T10:09:22Z,380,BOOKKEEPER-380: ZkLedgerUnderreplicationManager.markLedgerUnderreplicated() is adding duplicate missingReplicas while multiple bk failed for the same ledger (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377630 13f79535-47bb-0310-9956-ffa450edef68
2012-08-24T20:44:27Z,248,BOOKKEEPER-248: Rereplicating of under replicated data (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377100 13f79535-47bb-0310-9956-ffa450edef68
2012-08-24T19:51:17Z,378,BOOKKEEPER-378: ReplicationWorker may not get ZK watcher notification on UnderReplication ledger lock deletion. (umamaheswararao & ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377075 13f79535-47bb-0310-9956-ffa450edef68
2012-08-21T09:37:59Z,354,BOOKKEEPER-354: [BOOKKEEPER-296] [Documentation] Modify the bookkeeper start script and document the bookkeeper stop command in bookkeeperConfig.xml (Kiran BC via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1375448 13f79535-47bb-0310-9956-ffa450edef68
2012-08-19T09:39:33Z,299,BOOKKEEPER-299: Provide LedgerFragmentReplicator which should replicate the fragments found from LedgerChecker (umamahesh via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374719 13f79535-47bb-0310-9956-ffa450edef68
2012-08-17T16:25:35Z,372,BOOKKEEPER-372: Check service name in bookie start/stop script. (nijel via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374345 13f79535-47bb-0310-9956-ffa450edef68
2012-08-17T15:41:52Z,332,BOOKKEEPER-332: Add SubscriptionPreferences to record all preferences for a subscription (sijie via ivank) [missing files]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374327 13f79535-47bb-0310-9956-ffa450edef68
2012-08-17T15:32:23Z,332,BOOKKEEPER-332: Add SubscriptionPreferences to record all preferences for a subscription (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374321 13f79535-47bb-0310-9956-ffa450edef68
2012-08-17T13:56:32Z,283,BOOKKEEPER-283: Improve Hedwig Console to use Hedwig Metadata Manager. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374265 13f79535-47bb-0310-9956-ffa450edef68
2012-08-17T10:41:45Z,247,BOOKKEEPER-247: Detection of under replication (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374195 13f79535-47bb-0310-9956-ffa450edef68
2012-08-17T09:58:38Z,338,BOOKKEEPER-338: Create Version.NEW and Version.ANY static instances of Version so that were not passing around nulls (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374189 13f79535-47bb-0310-9956-ffa450edef68
2012-08-14T09:40:34Z,246,BOOKKEEPER-246: Recording of underreplication of ledger entries (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1372808 13f79535-47bb-0310-9956-ffa450edef68
2012-08-13T09:38:00Z,326,BOOKKEEPER-326: DeadLock during ledger recovery (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1372343 13f79535-47bb-0310-9956-ffa450edef68
2012-08-09T15:26:17Z,191,BOOKKEEPER-191: Hub server should change ledger to write  so consumed messages have chance to be garbage collected. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1371255 13f79535-47bb-0310-9956-ffa450edef68
2012-08-06T14:17:05Z,340,BOOKKEEPER-340: Test backward compatibility for hedwig between different versions. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369854 13f79535-47bb-0310-9956-ffa450edef68
2012-08-06T11:01:36Z,259,BOOKKEEPER-259: Create a topic manager using versioned write for leader election (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369778 13f79535-47bb-0310-9956-ffa450edef68
2012-08-06T10:10:17Z,339,BOOKKEEPER-339: Let hedwig cpp client support returning message seq id for publish requests. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369767 13f79535-47bb-0310-9956-ffa450edef68
2012-08-03T17:42:05Z,343,BOOKKEEPER-343: Failed to register hedwig JMX beans in test cases (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369115 13f79535-47bb-0310-9956-ffa450edef68
2012-07-30T15:20:55Z,331,BOOKKEEPER-331: Let hedwig support returning message seq id for publish requests. (Mridul via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1367117 13f79535-47bb-0310-9956-ffa450edef68
2012-07-27T13:51:22Z,352,BOOKKEEPER-352: Should not use static ServerStats/BKStats instance in TestServerStats/TestBKStats (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1366384 13f79535-47bb-0310-9956-ffa450edef68
2012-07-26T03:22:34Z,330,BOOKKEEPER-330: System.currentTimeMillis usage in Hedwig (uma via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1365873 13f79535-47bb-0310-9956-ffa450edef68
2012-07-26T03:00:27Z,317,BOOKKEEPER-317: Exceptions for replication (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1365870 13f79535-47bb-0310-9956-ffa450edef68
2012-07-26T02:32:50Z,349,BOOKKEEPER-349: Entry logger should close all the chennels which are there in Map  instead of closing only current channel. (umamaheswararao via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1365869 13f79535-47bb-0310-9956-ffa450edef68
2012-07-23T21:39:13Z,327,BOOKKEEPER-327: System.currentTimeMillis usage in BookKeeper (uma via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1364808 13f79535-47bb-0310-9956-ffa450edef68
2012-07-18T15:00:47Z,2,BOOKKEEPER-2: bookkeeper does not put enough meta-data in to do recovery properly (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1362974 13f79535-47bb-0310-9956-ffa450edef68
2012-07-17T08:42:07Z,306,BOOKKEEPER-306: Change C++ client to use gtest for testing (ivank via sijie) (fix wrong entry in CHANGES.txt)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1362408 13f79535-47bb-0310-9956-ffa450edef68
2012-07-16T10:35:19Z,310,BOOKKEEPER-310: Changes in hedwig server to support JMS spec (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1361968 13f79535-47bb-0310-9956-ffa450edef68
2012-07-11T17:24:48Z,329,BOOKKEEPER-329: provide stop scripts for hub server (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1360311 13f79535-47bb-0310-9956-ffa450edef68
2012-07-11T17:11:06Z,250,BOOKKEEPER-250: Need a ledger manager like interface to manage metadata operations in Hedwig (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1360300 13f79535-47bb-0310-9956-ffa450edef68
2012-07-09T02:09:51Z,328,BOOKKEEPER-328: Bookie DeathWatcher is missing thread name (Rakesh via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1358895 13f79535-47bb-0310-9956-ffa450edef68
2012-07-05T12:45:33Z,294,BOOKKEEPER-294: Not able to start the bookkeeper before the ZK session timeout. (rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357581 13f79535-47bb-0310-9956-ffa450edef68
2012-07-05T05:26:09Z,296,BOOKKEEPER-296: It's better provide stop script for bookie (nijel via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357466 13f79535-47bb-0310-9956-ffa450edef68
2012-07-05T05:10:47Z,318,BOOKKEEPER-318: Spelling mistake in MultiCallback log message. (surendra via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357464 13f79535-47bb-0310-9956-ffa450edef68
2012-07-04T14:17:30Z,324,BOOKKEEPER-324: Flakeyness in LedgerCreateDeleteTest (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357277 13f79535-47bb-0310-9956-ffa450edef68
2012-07-04T13:44:08Z,320,BOOKKEEPER-320: Let hedwig cpp client could publish messages using Message object instead of string. (jiannan via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357264 13f79535-47bb-0310-9956-ffa450edef68
2012-06-29T16:43:54Z,280,BOOKKEEPER-280: LedgerHandle.addEntry() should return an entryId (mmerli via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355467 13f79535-47bb-0310-9956-ffa450edef68
2012-06-28T17:32:26Z,322,BOOKKEEPER-322: New protobufs generates findbugs errors (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355083 13f79535-47bb-0310-9956-ffa450edef68
2012-06-28T17:19:46Z,302,BOOKKEEPER-302: No more messages delivered when hub server scans messages over two ledgers. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355079 13f79535-47bb-0310-9956-ffa450edef68
2012-06-27T13:35:11Z,303,BOOKKEEPER-303: LedgerMetadata should serialized using protobufs (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1354492 13f79535-47bb-0310-9956-ffa450edef68
2012-06-27T05:10:46Z,307,BOOKKEEPER-307: BookieShell introduces 4 findbugs warnings (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1354326 13f79535-47bb-0310-9956-ffa450edef68
2012-06-19T10:58:16Z,292,BOOKKEEPER-292: Test backward compatibility automatically between versions. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1351651 13f79535-47bb-0310-9956-ffa450edef68
2012-06-19T10:39:37Z,203,BOOKKEEPER-203: improve ledger manager interface to remove zookeeper dependency on metadata operations. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1351646 13f79535-47bb-0310-9956-ffa450edef68
2012-06-18T14:54:55Z,298,BOOKKEEPER-298: We run with preferIPv4Stack in the scripts but not in the tests (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1351374 13f79535-47bb-0310-9956-ffa450edef68
2012-06-13T14:57:54Z,183,BOOKKEEPER-183: Provide tools to read/check data files in bookie server (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1349896 13f79535-47bb-0310-9956-ffa450edef68
2012-06-12T16:23:12Z,274,BOOKKEEPER-274: Hedwig cpp client library should not link to cppunit which is just used for test. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1349423 13f79535-47bb-0310-9956-ffa450edef68
2012-06-12T15:37:57Z,289,BOOKKEEPER-289: mvn clean doesn't remove test output files (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1349400 13f79535-47bb-0310-9956-ffa450edef68
2012-06-07T14:21:52Z,,update release date for release 4.1.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1347634 13f79535-47bb-0310-9956-ffa450edef68
2012-06-07T14:15:55Z,288,BOOKKEEPER-288: NOTICE files don't have the correct year (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1347628 13f79535-47bb-0310-9956-ffa450edef68
2012-06-06T16:13:56Z,287,BOOKKEEPER-287: NoSuchElementException in LedgerCacheImpl (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346966 13f79535-47bb-0310-9956-ffa450edef68
2012-06-05T11:02:43Z,286,BOOKKEEPER-286: Compilation warning (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346340 13f79535-47bb-0310-9956-ffa450edef68
2012-06-05T09:56:14Z,285,BOOKKEEPER-285: TestZkSubscriptionManager quits due to NPE  so other tests are not run in hedwig server. (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346321 13f79535-47bb-0310-9956-ffa450edef68
2012-06-05T06:40:28Z,279,BOOKKEEPER-279: LocalBookKeeper is failing intermittently due to zkclient connection establishment delay (Rakesh R via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346257 13f79535-47bb-0310-9956-ffa450edef68
2012-06-05T06:00:19Z,281,BOOKKEEPER-281: BKClient is failing when zkclient connection delays (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346247 13f79535-47bb-0310-9956-ffa450edef68
2012-05-31T02:29:46Z,,Bump version number to 4.2.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1344543 13f79535-47bb-0310-9956-ffa450edef68
2012-05-31T02:22:21Z,,Preparing for release 4.1.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1344538 13f79535-47bb-0310-9956-ffa450edef68
2012-05-30T15:13:11Z,273,BOOKKEEPER-273: LedgerHandle.deleteLedger() should be idempotent (Matteo Merli via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1344301 13f79535-47bb-0310-9956-ffa450edef68
2012-05-29T21:12:38Z,271,BOOKKEEPER-271: Review documentation for message bounding (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343996 13f79535-47bb-0310-9956-ffa450edef68
2012-05-29T21:02:04Z,270,BOOKKEEPER-270: Review documentation on bookie cookie (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343986 13f79535-47bb-0310-9956-ffa450edef68
2012-05-29T21:00:26Z,270,BOOKKEEPER-270: Review documentation on bookie cookie (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343981 13f79535-47bb-0310-9956-ffa450edef68
2012-05-29T20:47:00Z,269,BOOKKEEPER-269: Review documentation for hedwig console client (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343973 13f79535-47bb-0310-9956-ffa450edef68
2012-05-26T17:16:45Z,258,BOOKKEEPER-258: CompactionTest failed (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342933 13f79535-47bb-0310-9956-ffa450edef68
2012-05-25T15:13:44Z,260,BOOKKEEPER-260: Define constant for -1 (invalid entry id) (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342678 13f79535-47bb-0310-9956-ffa450edef68
2012-05-25T14:38:23Z,265,BOOKKEEPER-265: Review JMX documentation (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342646 13f79535-47bb-0310-9956-ffa450edef68
2012-05-25T13:30:38Z,266,BOOKKEEPER-266: Review versioning documentation (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342617 13f79535-47bb-0310-9956-ffa450edef68
2012-05-25T09:48:05Z,146,BOOKKEEPER-146: TestConcurrentTopicAcquisition sometimes hangs (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342550 13f79535-47bb-0310-9956-ffa450edef68
2012-05-24T05:12:56Z,263,BOOKKEEPER-263: ZK ledgers root path is hard coded (Aniruddha via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342145 13f79535-47bb-0310-9956-ffa450edef68
2012-05-17T17:07:44Z,251,BOOKKEEPER-251: Noise error message printed when scanning entry log files those have been garbage collected. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339715 13f79535-47bb-0310-9956-ffa450edef68
2012-05-17T16:38:00Z,238,BOOKKEEPER-238: Add log4j.properties in conf/ for bin packages (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339698 13f79535-47bb-0310-9956-ffa450edef68
2012-05-17T16:32:05Z,72,BOOKKEEPER-72: Fix warnings issued by FindBugs (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339691 13f79535-47bb-0310-9956-ffa450edef68
2012-05-17T15:56:34Z,254,BOOKKEEPER-254: Bump zookeeper version in poms (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339672 13f79535-47bb-0310-9956-ffa450edef68
2012-05-17T14:05:02Z,224,BOOKKEEPER-224: Fix findbugs in bookkeeper-server component [missing changes] (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339607 13f79535-47bb-0310-9956-ffa450edef68
2012-05-15T10:28:38Z,209,BOOKKEEPER-209: Typo in ServerConfiguration for READAHEAD_ENABLED (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1338630 13f79535-47bb-0310-9956-ffa450edef68
2012-05-15T10:04:56Z,145,BOOKKEEPER-145: Put notice and license file for distributed binaries in SVN (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1338616 13f79535-47bb-0310-9956-ffa450edef68
2012-05-10T12:47:37Z,224,BOOKKEEPER-224: Fix findbugs in bookkeeper-server component (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336645 13f79535-47bb-0310-9956-ffa450edef68
2012-05-10T09:57:39Z,245,BOOKKEEPER-245: Intermittent failures in PersistanceManager tests (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336569 13f79535-47bb-0310-9956-ffa450edef68
2012-05-09T11:20:54Z,236,BOOKKEEPER-236: Benchmarking improvements from latest round of benchmarking (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336100 13f79535-47bb-0310-9956-ffa450edef68
2012-05-09T11:00:38Z,235,BOOKKEEPER-235: Bad syncing in entrylogger degrades performance for many concurrent ledgers (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336083 13f79535-47bb-0310-9956-ffa450edef68
2012-05-09T08:39:33Z,234,BOOKKEEPER-234: EntryLogger will throw NPE  if any dir does not exist or IO Errors. (umamaheswararao via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335996 13f79535-47bb-0310-9956-ffa450edef68
2012-05-09T08:17:34Z,242,BOOKKEEPER-242: Bookkeeper not able to connect other zookeeper when shutdown the zookeeper server where the BK has connected. (sijie & rakeshr via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335973 13f79535-47bb-0310-9956-ffa450edef68
2012-05-09T07:43:50Z,215,BOOKKEEPER-215: Deadlock occurs under high load (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335958 13f79535-47bb-0310-9956-ffa450edef68
2012-05-09T07:16:05Z,241,BOOKKEEPER-241: Add documentation for bookie entry log compaction (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335947 13f79535-47bb-0310-9956-ffa450edef68
2012-05-08T07:35:47Z,229,BOOKKEEPER-229: Deleted entry log files would be garbage collected again and again. (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335367 13f79535-47bb-0310-9956-ffa450edef68
2012-05-07T16:48:07Z,232,BOOKKEEPER-232: AsyncBK tests failing (umamaheswararao via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335117 13f79535-47bb-0310-9956-ffa450edef68
2012-05-04T18:11:43Z,228,BOOKKEEPER-228: Fix the bugs in BK benchmark (umamaheswararao via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1334107 13f79535-47bb-0310-9956-ffa450edef68
2012-04-28T09:11:28Z,231,BOOKKEEPER-231: ZKUtil.killServer not closing the FileTxnSnapLog from ZK. (Uma Maheswara Rao G via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1331720 13f79535-47bb-0310-9956-ffa450edef68
2012-04-28T08:11:14Z,56,BOOKKEEPER-56: Race condition of message handler in connection recovery in Hedwig client (added AlreadyStartDeliveryException file missed in r1329883) (sijie & Gavin Li via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1331704 13f79535-47bb-0310-9956-ffa450edef68
2012-04-24T17:42:06Z,217,BOOKKEEPER-217: NPE in hedwig client when enable DEBUG (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1329886 13f79535-47bb-0310-9956-ffa450edef68
2012-04-24T17:37:54Z,56,BOOKKEEPER-56: Race condition of message handler in connection recovery in Hedwig client (sijie & Gavin Li via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1329883 13f79535-47bb-0310-9956-ffa450edef68
2012-04-20T17:18:36Z,173,BOOKKEEPER-173: Uncontrolled number of threads in bookkeeper (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1328452 13f79535-47bb-0310-9956-ffa450edef68
2012-04-20T09:19:08Z,168,BOOKKEEPER-168: Message bounding on subscriptions (ivank) [missing test]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1328270 13f79535-47bb-0310-9956-ffa450edef68
2012-04-19T01:02:01Z,213,BOOKKEEPER-213: PerChannelBookieClient calls the wrong errorOut function when encountering an exception (Aniruddha via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1327761 13f79535-47bb-0310-9956-ffa450edef68
2012-04-17T11:16:26Z,218,BOOKKEEPER-218: Provide journal manager to manage journal related operations (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1327045 13f79535-47bb-0310-9956-ffa450edef68
2012-04-17T10:18:55Z,196,BOOKKEEPER-196: Define interface between bookie and ledger storage (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1327027 13f79535-47bb-0310-9956-ffa450edef68
2012-04-16T14:11:51Z,216,BOOKKEEPER-216: Bookie doesn't exit with right exit code (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1326624 13f79535-47bb-0310-9956-ffa450edef68
2012-04-16T02:29:19Z,197,BOOKKEEPER-197: HedwigConsole uses the same file to load bookkeeper client config and hub server config (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1326464 13f79535-47bb-0310-9956-ffa450edef68
2012-04-10T23:05:23Z,200,BOOKKEEPER-200: Fix format and comments (fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1312034 13f79535-47bb-0310-9956-ffa450edef68
2012-04-10T03:21:55Z,211,BOOKKEEPER-211: Bookie fails to to start (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1311564 13f79535-47bb-0310-9956-ffa450edef68
2012-04-09T09:42:01Z,212,BOOKKEEPER-212: Bookie stops responding when creating and deleting many ledgers (sijie via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1311177 13f79535-47bb-0310-9956-ffa450edef68
2012-04-03T16:02:44Z,207,BOOKKEEPER-207: BenchBookie doesn't run correctly (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1309007 13f79535-47bb-0310-9956-ffa450edef68
2012-04-02T10:38:18Z,135,BOOKKEEPER-135: Fencing does not check the ledger masterPasswd (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1308294 13f79535-47bb-0310-9956-ffa450edef68
2012-03-31T08:58:51Z,112,BOOKKEEPER-112: Bookie Recovery on an open ledger will cause LedgerHandle#close on that ledger to fail (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307743 13f79535-47bb-0310-9956-ffa450edef68
2012-03-31T07:31:54Z,198,BOOKKEEPER-198: replaying entries of deleted ledgers would exhaust ledger cache. (sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307732 13f79535-47bb-0310-9956-ffa450edef68
2012-03-31T07:13:07Z,193,BOOKKEEPER-193: Ledger is garbage collected by mistake. (sijie  ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307725 13f79535-47bb-0310-9956-ffa450edef68
2012-03-30T11:00:20Z,166,BOOKKEEPER-166: Bookie will not recover its journal if the length prefix of an entry is truncated (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307353 13f79535-47bb-0310-9956-ffa450edef68
2012-03-29T13:41:21Z,194,BOOKKEEPER-194: Get correct latency for addEntry operations for JMX. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306857 13f79535-47bb-0310-9956-ffa450edef68
2012-03-29T13:18:34Z,190,BOOKKEEPER-190: Add entries would fail when number of open ledgers reaches more than openFileLimit. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306839 13f79535-47bb-0310-9956-ffa450edef68
2012-03-29T12:07:13Z,97,BOOKKEEPER-97: collect pub/sub/consume statistics on hub server (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306798 13f79535-47bb-0310-9956-ffa450edef68
2012-03-28T21:57:40Z,195,BOOKKEEPER-195: HierarchicalLedgerManager doesn't consider idgen as a "specialNode" (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306616 13f79535-47bb-0310-9956-ffa450edef68
2012-03-21T05:40:55Z,189,BOOKKEEPER-189: AbstractZkLedgerManager doesn't disregard cookies (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1303291 13f79535-47bb-0310-9956-ffa450edef68
2012-03-21T05:13:23Z,188,BOOKKEEPER-188: Garbage collection code is in the wrong place (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1303286 13f79535-47bb-0310-9956-ffa450edef68
2012-03-20T13:09:07Z,175,BOOKKEEPER-175: Bookie code is very coupled (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302870 13f79535-47bb-0310-9956-ffa450edef68
2012-03-20T11:51:03Z,187,BOOKKEEPER-187: Create well defined interface for LedgerCache (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302851 13f79535-47bb-0310-9956-ffa450edef68
2012-03-19T14:02:15Z,186,BOOKKEEPER-186: Bookkeeper throttling - permits is not released when read has failed from all replicas (Rakesh R via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302458 13f79535-47bb-0310-9956-ffa450edef68
2012-03-19T12:04:51Z,96,BOOKKEEPER-96: extends zookeeper JMX to monitor and manage hedwig server (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302392 13f79535-47bb-0310-9956-ffa450edef68
2012-03-16T09:41:45Z,182,BOOKKEEPER-182: Entry log file is overwritten when fail to read lastLogId. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1301395 13f79535-47bb-0310-9956-ffa450edef68
2012-03-15T09:37:43Z,184,BOOKKEEPER-184: CompactionTest failing on Jenkins (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1300862 13f79535-47bb-0310-9956-ffa450edef68
2012-03-14T16:11:54Z,185,BOOKKEEPER-185: Remove bookkeeper-server dependency on hadoop-common (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1300616 13f79535-47bb-0310-9956-ffa450edef68
2012-03-14T11:29:03Z,168,BOOKKEEPER-168: Message bounding on subscriptions (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1300510 13f79535-47bb-0310-9956-ffa450edef68
2012-03-13T06:31:36Z,163,BOOKKEEPER-163: Prevent incorrect NoSuchLedgerException for readLastConfirmed. (ivank via sijie)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1299984 13f79535-47bb-0310-9956-ffa450edef68
2012-03-09T14:27:40Z,158,Set benchmark script to executable (BOOKKEEPER-158)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298847 13f79535-47bb-0310-9956-ffa450edef68
2012-03-09T13:48:20Z,158,BOOKKEEPER-158: Move latest benchmarking code into trunk (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298825 13f79535-47bb-0310-9956-ffa450edef68
2012-03-08T18:24:51Z,180,BOOKKEEPER-180: bookie server doesn't quit when running out of disk space (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298492 13f79535-47bb-0310-9956-ffa450edef68
2012-03-08T11:13:23Z,160,BOOKKEEPER-160: bookie server needs to do compaction over entry log files to reclaim disk space (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298357 13f79535-47bb-0310-9956-ffa450edef68
2012-03-01T14:58:08Z,176,BOOKKEEPER-176: HierarchicalBookieFailureTest Hung (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1295604 13f79535-47bb-0310-9956-ffa450edef68
2012-03-01T14:10:17Z,74,BOOKKEEPER-74: Bookkeeper Persistence Manager should give up topic on error (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1295571 13f79535-47bb-0310-9956-ffa450edef68
2012-02-24T19:07:57Z,113,BOOKKEEPER-113: NPE In BookKeeper test (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293383 13f79535-47bb-0310-9956-ffa450edef68
2012-02-24T18:20:56Z,178,BOOKKEEPER-178: Delay ledger directory creation until the ledger index file was created (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293372 13f79535-47bb-0310-9956-ffa450edef68
2012-02-24T18:08:01Z,177,BOOKKEEPER-177: Index file is lost or some index pages aren't flushed. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293369 13f79535-47bb-0310-9956-ffa450edef68
2012-02-24T17:10:20Z,172,BOOKKEEPER-172: Upgrade framework for filesystem layouts (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293342 13f79535-47bb-0310-9956-ffa450edef68
2012-02-17T11:50:23Z,174,BOOKKEEPER-174: Bookie can't start when replaying entries whose ledger were deleted and garbage collected. (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1245411 13f79535-47bb-0310-9956-ffa450edef68
2012-02-17T10:18:00Z,169,BOOKKEEPER-169: bookie hangs on reading header when encountering partial header index file (sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1245369 13f79535-47bb-0310-9956-ffa450edef68
2012-02-15T15:11:53Z,170,BOOKKEEPER-170: Bookie constructor starts a number of threads. (ivank via fpj)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1244528 13f79535-47bb-0310-9956-ffa450edef68
2012-02-15T09:58:37Z,171,BOOKKEEPER-171: ServerConfiguration can't use more than one directory for ledgers  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1244421 13f79535-47bb-0310-9956-ffa450edef68
2012-02-13T14:46:38Z,152,BOOKKEEPER-152: Can't recover a ledger whose current ensemble contain failed bookie. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1243539 13f79535-47bb-0310-9956-ffa450edef68
2012-02-13T10:19:17Z,162,BOOKKEEPER-162: LedgerHandle.readLastConfirmed does not work (fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1243462 13f79535-47bb-0310-9956-ffa450edef68
2012-02-09T17:14:29Z,137,BOOKKEEPER-137: Do not create Ledger index files until absolutely necessary. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1242404 13f79535-47bb-0310-9956-ffa450edef68
2012-02-08T14:54:29Z,165,BOOKKEEPER-165: Add versioning support for journal files (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241922 13f79535-47bb-0310-9956-ffa450edef68
2012-02-08T10:49:10Z,77,BOOKKEEPER-77: Add a console client for hedwig (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241858 13f79535-47bb-0310-9956-ffa450edef68
2012-02-08T10:40:43Z,156,BOOKKEEPER-156: BookieJournalRollingTest failing (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241855 13f79535-47bb-0310-9956-ffa450edef68
2012-02-08T10:40:19Z,167,BOOKKEEPER-167: PerChannelBookieClient doesn't use ClientConfiguration (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241854 13f79535-47bb-0310-9956-ffa450edef68
2012-02-07T10:03:17Z,161,BOOKKEEPER-161: PerChannelBookieClient tries to reuse HashedWheelTimer  throws Exception (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241404 13f79535-47bb-0310-9956-ffa450edef68
2012-02-01T15:19:57Z,157,BOOKKEEPER-157. For small packets  increasing number of bookies actually degrades performance. (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239167 13f79535-47bb-0310-9956-ffa450edef68
2012-02-01T12:01:49Z,,Removing file accidentally added in r1239096  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239098 13f79535-47bb-0310-9956-ffa450edef68
2012-02-01T11:58:17Z,98,BOOKKEEPER-98: collect add/read statistics on bookie server (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239096 13f79535-47bb-0310-9956-ffa450edef68
2012-02-01T11:06:32Z,23,BOOKKEEPER-23: Timeout requests (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239068 13f79535-47bb-0310-9956-ffa450edef68
2012-01-18T14:11:46Z,153,BOOKKEEPER-153: Ledger can't be opened or closed due to zero-length metadata (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232890 13f79535-47bb-0310-9956-ffa450edef68
2012-01-18T12:09:48Z,95,BOOKKEEPER-95: extends zookeeper JMX to monitor and manage bookie server (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232852 13f79535-47bb-0310-9956-ffa450edef68
2012-01-17T15:52:16Z,150,BOOKKEEPER-150: Entry is lost when recovering a ledger with not enough bookies. (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232448 13f79535-47bb-0310-9956-ffa450edef68
2012-01-13T17:06:41Z,40,BOOKKEEPER-40: BookieClientTest fails intermittantly (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1231187 13f79535-47bb-0310-9956-ffa450edef68
2012-01-11T14:46:29Z,148,BOOKKEEPER-148: Jenkins build is failing (ivank via fpj)     git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1230070 13f79535-47bb-0310-9956-ffa450edef68
2011-12-22T17:35:48Z,133,BOOKKEEPER-133: Hub server should update subscription state to zookeeper when losing topic or shutting down (Sijie Gou via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1222365 13f79535-47bb-0310-9956-ffa450edef68
2011-12-21T16:43:23Z,140,BOOKKEEPER-140: Hub server doesn't subscribe remote region correctly when a region is down. (Sijie Gou via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1221798 13f79535-47bb-0310-9956-ffa450edef68
2011-12-16T14:32:58Z,141,BOOKKEEPER-141: Run extracting ledger id from entry log files in GC thread to speed up bookie restart (Sijie Gou via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1215156 13f79535-47bb-0310-9956-ffa450edef68
2011-12-16T11:43:31Z,142,BOOKKEEPER-142: Parsing last log id is wrong  which may make entry log files overwritten (Sijie Gou via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1215098 13f79535-47bb-0310-9956-ffa450edef68
2011-12-02T19:58:59Z,139,BOOKKEEPER-139: Binary packages do not carry NOTICE.txt (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209671 13f79535-47bb-0310-9956-ffa450edef68
2011-12-02T19:33:43Z,138,BOOKKEEPER-138: NOTICE.txt is invalid (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209650 13f79535-47bb-0310-9956-ffa450edef68
2011-12-02T18:22:43Z,130,Reverting BOOKKEEPER-130: Add developer KEYS file to svn (ivank)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209621 13f79535-47bb-0310-9956-ffa450edef68
2011-12-01T22:26:46Z,134,BOOKKEEPER-134: Delete superfluous lib directories (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209276 13f79535-47bb-0310-9956-ffa450edef68
2011-12-01T21:08:08Z,131,BOOKKEEPER-131: Fix zookeeper test dependency (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209237 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T16:18:45Z,132,BOOKKEEPER-132: Sign artifacts before deploying to maven (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208487 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T15:42:14Z,66,BOOKKEEPER-66: use IPv4 for builds (mmorel via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208472 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T12:01:55Z,,Bumping version number for trunk: 4.0.0 -> 4.1.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208399 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T11:59:57Z,,Fixing CHANGES.txt for new trunk  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208398 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T11:52:01Z,,Preparing for release 4.0.0  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208396 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T11:50:25Z,,Cleanup of CHANGES.txt before cutting 4.0.0 branch  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208395 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T11:10:44Z,130,BOOKKEEPER-130: Add developer KEYS file to svn (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208382 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T10:39:06Z,129,BOOKKEEPER-129: ZK_TIMEOUT typo in client/server configuration (Sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208372 13f79535-47bb-0310-9956-ffa450edef68
2011-11-30T10:07:23Z,128,BOOKKEEPER-128: pom and script modifications required for generating release packages (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208358 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T23:19:38Z,111,BOOKKEEPER-111: Document bookie recovery feature (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208133 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T23:15:02Z,122,BOOKKEEPER-122: Review BookKeeper server documentation (fpj & ivank) [Forgot to add 2 files]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208129 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T22:55:24Z,122,BOOKKEEPER-122: Review BookKeeper server documentation (fpj & ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208123 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T22:29:42Z,120,BOOKKEEPER-120: Review BookKeeper client documentation (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208111 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T22:26:53Z,127,BOOKKEEPER-127: Make poms use official zookeeper 3.4.0 (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208109 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T20:00:18Z,121,BOOKKEEPER-121: Review Hedwig client documentation (breed via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208050 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T17:46:36Z,62,BOOKKEEPER-62: Bookie can not start when encountering corrupted records (breed via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207997 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T17:45:58Z,125,BOOKKEEPER-125: log4j still used in some places (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207996 13f79535-47bb-0310-9956-ffa450edef68
2011-11-29T09:05:53Z,124,BOOKKEEPER-124: build has RAT failures (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207797 13f79535-47bb-0310-9956-ffa450edef68
2011-11-28T22:01:53Z,53,BOOKKEEPER-53: race condition of outstandingMsgSet@SubscribeResponseHandler   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207648 13f79535-47bb-0310-9956-ffa450edef68
2011-11-28T18:25:18Z,39,BOOKKEEPER-39: Bookie server failed to restart because of too many ledgers (more than ~50 000 ledgers) (Sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207495 13f79535-47bb-0310-9956-ffa450edef68
2011-11-28T16:32:27Z,119,BOOKKEEPER-119: Keys in configuration have inconsistent style (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207396 13f79535-47bb-0310-9956-ffa450edef68
2011-11-28T15:17:48Z,117,BOOKKEEPER-117: Support multi threads in hedwig cpp client to leverage multi-core hardware (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207289 13f79535-47bb-0310-9956-ffa450edef68
2011-11-28T12:15:52Z,118,BOOKKEEPER-118: Hedwig client doesn't kill and remove old subscription channel after redirection. (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207099 13f79535-47bb-0310-9956-ffa450edef68
2011-11-21T10:32:40Z,79,BOOKKEEPER-79: randomly startDelivery/stopDelivery will core dump in c++ hedwig client (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1204437 13f79535-47bb-0310-9956-ffa450edef68
2011-11-18T18:58:23Z,114,BOOKKEEPER-114: add a shutdown hook to shut down bookie server safely. (Sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203790 13f79535-47bb-0310-9956-ffa450edef68
2011-11-18T18:06:13Z,115,BOOKKEEPER-115: LocalBookKeeper fails after BOOKKEEPER-108 (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203774 13f79535-47bb-0310-9956-ffa450edef68
2011-11-18T10:38:46Z,69,BOOKKEEPER-69: ServerRedirectLoopException when a machine (hosts bookie server & hub server) reboot  which is caused by race condition of topic manager (Sijie  ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203576 13f79535-47bb-0310-9956-ffa450edef68
2011-11-18T10:18:05Z,108,BOOKKEEPER-108: add configuration support for BK (Sijie via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203568 13f79535-47bb-0310-9956-ffa450edef68
2011-11-17T21:38:49Z,90,BOOKKEEPER-90: Hedwig API changes for initial Bookkeeper release (ivank via fpj)     git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203380 13f79535-47bb-0310-9956-ffa450edef68
2011-11-17T14:00:27Z,87,BOOKKEEPER-87: TestHedwigHub exhausts direct buffer memory with netty 3.2.4.Final (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203191 13f79535-47bb-0310-9956-ffa450edef68
2011-11-17T10:16:32Z,91,BOOKKEEPER-91: Bookkeeper and hedwig clients should not use log4j directly (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203138 13f79535-47bb-0310-9956-ffa450edef68
2011-11-17T08:59:36Z,81,BOOKKEEPER-81: disk space of garbage collected entry logger files isn't reclaimed util process quit (Sijie Guo via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203118 13f79535-47bb-0310-9956-ffa450edef68
2011-11-17T08:27:30Z,109,BOOKKEEPER-109: Add documentation to describe how bookies flushes data (Sijie Guo via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203103 13f79535-47bb-0310-9956-ffa450edef68
2011-11-16T18:01:04Z,104,BOOKKEEPER-104: Add versioning between bookie and its filesystem layout (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202814 13f79535-47bb-0310-9956-ffa450edef68
2011-11-16T16:05:52Z,101,BOOKKEEPER-101 : Add Fencing to Bookkeeper (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202758 13f79535-47bb-0310-9956-ffa450edef68
2011-11-15T18:44:33Z,106,BOOKKEEPER-106: recoveryBookieData can select a recovery bookie which is already in the ledgers ensemble (forgot to edit CHANGES.txt)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202372 13f79535-47bb-0310-9956-ffa450edef68
2011-11-15T18:42:58Z,106,BOOKKEEPER-106: recoveryBookieData can select a recovery bookie which is already in the ledgers ensemble    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202370 13f79535-47bb-0310-9956-ffa450edef68
2011-11-11T10:24:19Z,82,BOOKKEEPER-82: support journal rolling (Sijie Guo via fpj)     git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1200806 13f79535-47bb-0310-9956-ffa450edef68
2011-11-08T18:09:49Z,80,BOOKKEEPER-80: subscription msg queue race condition in hedwig c++ client (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1199372 13f79535-47bb-0310-9956-ffa450edef68
2011-11-08T17:58:18Z,107,BOOKKEEPER-107: memory leak in HostAddress of hedwig c++ client (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1199368 13f79535-47bb-0310-9956-ffa450edef68
2011-11-04T10:46:44Z,50,BOOKKEEPER-50: NullPointException at LedgerDescriptor#cmpMasterKey (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1197495 13f79535-47bb-0310-9956-ffa450edef68
2011-11-04T10:24:34Z,102,BOOKKEEPER-102: Make bookkeeper use ZK from temporary repo (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1197489 13f79535-47bb-0310-9956-ffa450edef68
2011-11-04T10:00:29Z,103,BOOKKEEPER-103: ledgerId and entryId is parsed wrong when addEntry (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1197472 13f79535-47bb-0310-9956-ffa450edef68
2011-10-28T13:36:43Z,71,BOOKKEEPER-71: hedwig c++ client does not build . (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1190306 13f79535-47bb-0310-9956-ffa450edef68
2011-10-27T17:12:51Z,100,BOOKKEEPER-100: Some hedwig tests have build errors (dferro via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189874 13f79535-47bb-0310-9956-ffa450edef68
2011-10-27T16:53:34Z,93,BOOKKEEPER-93: bookkeeper doesn't work correctly on OpenLedgerNoRecovery (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189867 13f79535-47bb-0310-9956-ffa450edef68
2011-10-27T16:26:18Z,89,BOOKKEEPER-89: Bookkeeper API changes for initial Bookkeeper release (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189842 13f79535-47bb-0310-9956-ffa450edef68
2011-10-27T13:41:19Z,83,BOOKKEEPER-83: Added versioning and flags to the bookie protocol (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189753 13f79535-47bb-0310-9956-ffa450edef68
2011-10-26T14:06:38Z,94,BOOKKEEPER-94: Double callbacks in readLastConfirmedOp which fails readLastConfirmed operation even received enough valid responses. (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189225 13f79535-47bb-0310-9956-ffa450edef68
2011-10-25T15:16:30Z,92,BOOKKEEPER-92: using wrong context object in readLastConfirmedComplete callback (Sijie Guo via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1188704 13f79535-47bb-0310-9956-ffa450edef68
2011-10-24T09:40:18Z,88,BOOKKEEPER-88: derby doesn't like - in the topic names (breed via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1188059 13f79535-47bb-0310-9956-ffa450edef68
2011-10-23T06:11:20Z,84,BOOKKEEPER-84: Add versioning for ZK metadata   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1187846 13f79535-47bb-0310-9956-ffa450edef68
2011-10-19T18:20:01Z,61,missing CHANGE.txt entry for BOOKKEEPER-61 (commit 1180266)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1186382 13f79535-47bb-0310-9956-ffa450edef68
2011-10-18T18:14:32Z,86,BOOKKEEPER-86: bookkeeper-benchmark fails to compile after BOOKKEEPER-68   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1185775 13f79535-47bb-0310-9956-ffa450edef68
2011-10-18T08:42:46Z,68,BOOKKEEPER-68: Conditional setData (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1185532 13f79535-47bb-0310-9956-ffa450edef68
2011-10-17T21:39:26Z,65,BOOKKEEPER-65: fix dependencies on incompatible versions of netty (mmorel via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1185388 13f79535-47bb-0310-9956-ffa450edef68
2011-10-07T22:24:21Z,61,  BOOKKEEPER-61: BufferedChannel read endless when the remaining bytes of file is less than the capacity of read buffer   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1180266 13f79535-47bb-0310-9956-ffa450edef68
2011-10-06T16:54:11Z,41,BOOKKEEPER-41: Generation of packages for distribution (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1179705 13f79535-47bb-0310-9956-ffa450edef68
2011-09-16T14:55:38Z,59,BOOKKEEPER-59: Race condition in netty code allocates and orphans resources (BK-5 revisited) (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1171607 13f79535-47bb-0310-9956-ffa450edef68
2011-09-05T17:38:57Z,26,BOOKKEEPER-26: Indentation is all messed up in the BookKeeper code (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1165369 13f79535-47bb-0310-9956-ffa450edef68
2011-09-05T10:32:39Z,63,BOOKKEEPER-63: Hedwig PubSubServer must wait for its Zookeeper client to be connected upon startup (morel via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1165231 13f79535-47bb-0310-9956-ffa450edef68
2011-08-31T14:59:46Z,57,BOOKKEEPER-57: NullPointException at bookie.zk@EntryLogger (xulei via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163655 13f79535-47bb-0310-9956-ffa450edef68
2011-08-30T10:13:51Z,52,BOOKKEEPER-52: Message sequence confuse due to the subscribeMsgQueue@SubscribeResponseHandler (xulei via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163161 13f79535-47bb-0310-9956-ffa450edef68
2011-08-30T09:14:33Z,51,BOOKKEEPER-51: NullPointException at FIFODeliveryManager#deliveryPtrs (xulei via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163149 13f79535-47bb-0310-9956-ffa450edef68
2011-08-30T08:34:31Z,28,BOOKKEEPER-28: Create useful startup scripts for bookkeeper and hedwig (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163137 13f79535-47bb-0310-9956-ffa450edef68
2011-08-29T17:34:16Z,18,BOOKKEEPER-18: maven build is unstable (morel  ivank via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1162913 13f79535-47bb-0310-9956-ffa450edef68
2011-08-29T17:33:01Z,58,BOOKKEEPER-58: Changes introduced in BK-38 cause BookieClientTest to hang indefinitely. (ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1162912 13f79535-47bb-0310-9956-ffa450edef68
2011-08-23T22:43:46Z,38,forgot to add test from BOOKKEEPER-38   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160918 13f79535-47bb-0310-9956-ffa450edef68
2011-08-23T22:42:32Z,44,BOOKKEEPER-44: Reuse publish channel to default server to avoid too many connect requests to default server when lots of producers came in same time   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160917 13f79535-47bb-0310-9956-ffa450edef68
2011-08-23T22:38:29Z,38,BOOKKEEPER-38: Bookie Server doesn't exit when its zookeeper session is expired. So the process is hang there.   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160915 13f79535-47bb-0310-9956-ffa450edef68
2011-08-23T22:34:58Z,43,BOOKKEEPER-43: NullPointException when releasing topic   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160913 13f79535-47bb-0310-9956-ffa450edef68
2011-08-11T19:37:21Z,29,BOOKKEEPER-29: BookieRecoveryTest fails intermittently (ivank  fpj via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156766 13f79535-47bb-0310-9956-ffa450edef68
2011-08-11T18:36:52Z,33,BOOKKEEPER-33: Add length and offset parameter to addEntry (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156723 13f79535-47bb-0310-9956-ffa450edef68
2011-08-10T10:37:39Z,29,BOOKKEEPER-29: BookieRecoveryTest fails intermittently (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156096 13f79535-47bb-0310-9956-ffa450edef68
2011-07-30T23:58:28Z,27,BOOKKEEPER-27: mvn site failed with unresolved dependencies (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1152529 13f79535-47bb-0310-9956-ffa450edef68
2011-07-28T18:33:52Z,11,BOOKKEEPER-11: Read from open ledger (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1151958 13f79535-47bb-0310-9956-ffa450edef68
2011-07-12T10:36:05Z,30,BOOKKEEPER-30: Test are too noisy (ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1145532 13f79535-47bb-0310-9956-ffa450edef68
2011-07-07T14:37:50Z,5,BOOKKEEPER-5: Issue with Netty in BookKeeper (fpj and ivank via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1143850 13f79535-47bb-0310-9956-ffa450edef68
2011-06-28T02:03:01Z,,initial setup for hedwig and bookkeeper doc   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1140397 13f79535-47bb-0310-9956-ffa450edef68
2011-06-06T15:49:38Z,22,BOOKKEEPER-22: Exception in LedgerCache causes addEntry request to fail (fpj via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1132682 13f79535-47bb-0310-9956-ffa450edef68
2011-05-25T09:41:33Z,1,BOOKKEEPER-1: Static variable makes tests fail (fpj via ivank) [CHANGES.txt]  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1127455 13f79535-47bb-0310-9956-ffa450edef68
2011-05-25T09:28:46Z,1,BOOKKEEPER-1: Static variable makes tests fail (fpj via ivank)  git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1127451 13f79535-47bb-0310-9956-ffa450edef68
2011-05-20T14:11:04Z,19,BOOKKEEPER-19: BookKeeper doesn't support more than 2Gig of memory (ivan via fpj)    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1125406 13f79535-47bb-0310-9956-ffa450edef68
2011-04-08T16:35:23Z,,more fixing of the build (ivankelly via breed)   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1090338 13f79535-47bb-0310-9956-ffa450edef68
2011-03-31T06:46:23Z,,got bookkeper work with maven   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1087198 13f79535-47bb-0310-9956-ffa450edef68
2011-03-30T23:29:21Z,,ZOOKEEPER-1038. Move bookkeeper and hedwig code in subversion   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1087134 13f79535-47bb-0310-9956-ffa450edef68
2011-03-30T04:43:01Z,,added top level directories   git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1086836 13f79535-47bb-0310-9956-ffa450edef68
